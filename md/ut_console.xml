<?xml version="1.0" encoding="UTF-8"?>
<mdscript xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" name="UT_Console" xsi:noNamespaceSchemaLocation="http://localhost/x4mod/libraries/md.xsd">
  <!-- Usage Stage Examples (this Value can only ever increase):
0 - never entered a console command
1/green - read only commands (ReadText, Eval, Debugmode)
2/yellow - Actual operations done in the Save, but should be safe to perform (DestroyObject on destructible stuff, PerformAction)
3/red - Actual operations done in the Save, with unknown implications (DestroyObject on protected stuff; SetVal; PerformAction for certain actions considered unsafe)
-->
  <cues>
    <cue name="Root">
      <actions>
        <set_value name="$secretvalue" exact="'You will never see this!!!'" comment="test value for the eval md command"/>
        <set_value name="$debugmode" exact="false"/>
        <set_value name="$console_vars" exact="table[]"/>
      </actions>
      <cues>
        <cue name="UnlockConsole" comment="the potentially dangerous commands are locked behind here. The command itself wont set the usage stage to 3, but any command inside will.">
          <conditions>
            <event_ui_triggered screen="'Chat_Window_API'" control="'text_entered'"/>
            <check_value value="event.param3.$terms.{1}" exact="{5554401,1}+'unlock'"/>
            <debug_text filter="general" text="'Eval triggered' + event.param3"/>
          </conditions>
          <actions>
            <run_actions ref="WriteOutputAndHistory">
              <param name="output" value="'unlock - All Console Commands unlocked! This includes the Commands that can break our game!\nIf you use them your Save will be marked accordingly. There will be no further Warnings!'"/>
              <param name="type" value="'command_hot'"/>
            </run_actions>
          </actions>
          <cues>
            <cue name="SetVal" instantiate="true">
              <conditions>
                <event_ui_triggered screen="'Chat_Window_API'" control="'text_entered'"/>
                <check_value value="event.param3.$terms.{1}" exact="{5554401,1}+'setval'"/>
                <debug_text filter="general" text="'SetVal triggered' + event.param3"/>
              </conditions>
              <actions>
                <set_value name="$cmd_lvl" exact="3"/>
                <set_value name="$helpstring" exact="'Input: '+{5554401,1}+'eval [h(elp)] $propertychain_set $propertychain_get\nEvaluates $propertychain_get and writes the result to $propertychain_set. In case one of the chains cannt be resolved entirely it will error out with the last valid Value and a list of the remaining properties.'"/>
                <include_actions ref="PrintHelpAndUnpackTerms"/>
                <!-- get root and final property, and evaluate property chain to the second-to-last, then as last step set final property -->
                <set_value name="$Set_pchain" exact="$terms_converted.{2}"/>
                <set_value name="$Get_pchain" exact="$terms_converted.{3}"/>
                <set_value name="$Get2_pchain" exact="@$terms_converted.{4}"/>
                <set_value name="$abortreason" exact="null"/>
                <!-- first get the values we want to save, as very first the optional second value -->
                <do_if value="$Get2_pchain != null">
                  <run_actions ref="EvaluatePropertyFromRoot" result="$Get2Value">
                    <param name="pchain" value="$Get2_pchain"/>
                    <param name="ListOutput" value="false"/>
                  </run_actions>
                  <do_if value="$Get2Value == 'error'">
                    <set_value name="$abortreason" exact="$Get_pchain + ' - Final Property of Get2 Term not found - aborting.'"/>
                  </do_if>
                </do_if>
                <do_else>
                  <set_value name="$Get2Value" exact="null" comment="second value is rarely needed. assuming it isnt needed here, but we want to pass both for simplicity."/>
                </do_else>
                <!-- Next the non-optional Value to set - note: take care to handle null values to be able to clear stutff!! -->
                <run_actions ref="EvaluatePropertyFromRoot" result="$GetValue">
                  <param name="pchain" value="$Get_pchain"/>
                  <param name="ListOutput" value="false"/>
                </run_actions>
                <do_if value="$GetValue == 'error'">
                  <set_value name="$abortreason" exact="$Get_pchain + ' - Final Property of Get Term not found - aborting.'"/>
                </do_if>
                <!-- Some Special Handling needed in case of certain root properties or end values - ToDo !! -->
                <!-- Seperating ot the final property to set, since it is needed for setting, but doesnt have to be valuated -->
                <set_value name="$SetProperty" exact="$Set_pchain.{$Set_pchain.count}"/>
                <remove_value name="$Set_pchain.{$Set_pchain.count}"/>
                <run_actions ref="EvaluatePropertyFromRoot" result="$SetValue">
                  <param name="pchain" value="$Set_pchain"/>
                  <param name="ListOutput" value="false"/>
                </run_actions>
                <do_if value="$SetValue == 'error'">
                  <set_value name="$abortreason" exact="$Get_pchain + ' - Final Property of Set Term not found - aborting.'"/>
                </do_if>
                <!-- We got all the Values we needed for the Action - perform it!-->
                <do_if value="$abortreason == null">
                  <run_actions ref="SaveProperty" result="$FinalValue">
                    <param name="Property" value="$SetProperty"/>
                    <param name="PropertyValue" value="$SetValue"/>
                    <param name="ListOutput" value="false"/>
                    <param name="SaveValue" value="$GetValue"/>
                    <param name="SaveValue2" value="$Get2Value"/>
                  </run_actions>
                </do_if>
                <do_if value="$abortreason != null">
                  <run_actions ref="WriteOutputAndHistory">
                    <param name="output" value="$abortreason"/>
                    <param name="type" value="'command_out'"/>
                  </run_actions>
                </do_if>
                <do_elseif value="$FinalValue == 'Fictious Property'">
                  <run_actions ref="WriteOutputAndHistory">
                    <param name="output" value="'Set Property %s.%s to %s (secondary %s) - cannot confirm since its not property-accessible'.[$SetValue,$SetProperty,$GetValue,$Get2Value]"/>
                    <param name="type" value="'command_out'"/>
                  </run_actions>
                </do_elseif>
                <do_elseif value="$FinalValue ==  $GetValue">
                  <run_actions ref="WriteOutputAndHistory">
                    <param name="output" value="'Set Property %s.%s to %s (secondary %s) - success'.[$SetValue,$SetProperty,$GetValue,$Get2Value]"/>
                    <param name="type" value="'command_out'"/>
                  </run_actions>
                </do_elseif>
                <do_else>
                  <run_actions ref="WriteOutputAndHistory">
                    <param name="output" value="'Set Property %s.%s to %s (secondary %s) - failure, result is actually %s'.[$SetValue,$SetProperty,$GetValue,$Get2Value,$FinalValue]"/>
                    <param name="type" value="'command_out'"/>
                  </run_actions>
                </do_else>
              </actions>
            </cue>
            <cue name="CueManager" instantiate="true" namespace="this">
              <conditions>
                <event_ui_triggered screen="'Chat_Window_API'" control="'text_entered'"/>
                <check_value value="event.param3.$terms.{1}" exact="{5554401,1}+'cue'"/>
              </conditions>
              <actions>
                <set_value name="$cmd_lvl" exact="if $terms.{2} == 'state' then 1 else 3"/>
                <set_value name="$helpstring" exact="'Input: '+{5554401,1}+'info [h(elp)] $action$ $cue$\nCan force Cues into certain states. possible actions:\nstate: returns the cue state (harmless, but prefer eval for this)\ncancel: cancels the cue and its sub-cues\nreset: resets the cue and its sub-cues\ncomplete: marks the cue as completed\nforce: will force a cue to trigger\nsignal: signals the cue; if there is another param it will signal instantly with that.'"/>
                <include_actions ref="PrintHelpAndUnpackTerms"/>
                <!-- get cue -->
                <run_actions ref="EvaluatePropertyFromRoot" result="$Cue">
                  <param name="pchain" value="$terms_converted.{3}"/>
                  <param name="ListOutput" value="false"/>
                </run_actions>
                <!-- perform action -->
                <do_if value="$Cue.exists">
                  <do_if value="$terms.{2}" exact="'state'">
                    <run_actions ref="WriteOutputAndHistory">
                      <param name="output" value="'%s state is : %s'.[$Cue.name,$Cue.state]"/>
                      <param name="type" value="'command_out'"/>
                    </run_actions>
                  </do_if>
                  <do_elseif value="$terms.{2}" exact="'cancel'">
                    <cancel_cue cue="$Cue"/>
                    <run_actions ref="WriteOutputAndHistory">
                      <param name="output" value="'Performed Cancel\n%s state was : %s'.[$Cue.name,$Cue.state]"/>
                      <param name="type" value="'command_out'"/>
                    </run_actions>
                  </do_elseif>
                  <do_elseif value="$terms.{2}" exact="'reset'">
                    <reset_cue cue="$Cue"/>
                    <run_actions ref="WriteOutputAndHistory">
                      <param name="output" value="'Performed Reset\n%s state was : %s'.[$Cue.name,$Cue.state]"/>
                      <param name="type" value="'command_out'"/>
                    </run_actions>
                  </do_elseif>
                  <do_elseif value="$terms.{2}" exact="'complete'">
                    <complete_cue cue="$Cue"/>
                    <run_actions ref="WriteOutputAndHistory">
                      <param name="output" value="'Performed Complete\n%s state was : %s'.[$Cue.name,$Cue.state]"/>
                      <param name="type" value="'command_out'"/>
                    </run_actions>
                  </do_elseif>
                  <do_elseif value="$terms.{2}" exact="'force'">
                    <force_cue cue="$Cue"/>
                    <run_actions ref="WriteOutputAndHistory">
                      <param name="output" value="'Performed Force\n%s state was : %s'.[$Cue.name,$Cue.state]"/>
                      <param name="type" value="'command_out'"/>
                    </run_actions>
                  </do_elseif>
                  <do_elseif value="$terms.{2}" exact="'signal'">
                    <do_if value="not $terms.{4}?">
                      <signal_cue cue="$Cue"/>
                      <run_actions ref="WriteOutputAndHistory">
                        <param name="output" value="'Performed Signal\n%s state was : %s'.[$Cue.name,$Cue.state]"/>
                        <param name="type" value="'command_out'"/>
                      </run_actions>
                    </do_if>
                    <do_else>
                      <run_actions ref="EvaluatePropertyFromRoot" result="$Param">
                        <param name="pchain" value="$terms_converted.{3}"/>
                        <param name="ListOutput" value="false"/>
                      </run_actions>
                      <signal_cue_instantly cue="$Cue" param="$Param"/>
                      <run_actions ref="WriteOutputAndHistory">
                        <param name="output" value="'Performed Signal instantly with param %s\n%s state was : %s'.[$Param,$Cue.name,$Cue.state]"/>
                        <param name="type" value="'command_out'"/>
                      </run_actions>
                    </do_else>
                  </do_elseif>
                </do_if>
              </actions>
            </cue>
            <cue name="DestroyObject" instantiate="true" namespace="this">
              <conditions>
                <event_ui_triggered screen="'Chat_Window_API'" control="'text_entered'"/>
                <check_value value="event.param3.$terms.{1}" exact="{5554401,1}+'destroy'"/>
              </conditions>
              <actions>
                <set_value name="$cmd_lvl" exact="1"/>
                <set_value name="$helpstring" exact="'Input: '+{5554401,1}+'info [h(elp)] $object$\nDestroys the Target Object after confirmation. Stricter Confirmation requirement if Target Object is invulnearable.'"/>
                <include_actions ref="PrintHelpAndUnpackTerms"/>
                <do_if value="$terms.count ge 2">
                  <do_if value="$terms.indexof.{'noexplosion'}">
                    <set_value name="$explosion" exact="false"/>
                    <remove_value name="$terms.{$terms.indexof.{'noexplosion'}}"/>
                  </do_if>
                  <do_else>
                    <set_value name="$explosion" exact="true"/>
                  </do_else>
                  <!-- Get Object from Term Number 2 -->
                  <run_actions ref="EvaluatePropertyFromRoot" result="$object">
                    <param name="pchain" value="$terms_converted.{2}"/>
                    <param name="ListOutput" value="false"/>
                  </run_actions>
                  <do_if value="(typeof $object).isnumeric" comment="convert in case the input was a single number">
                    <set_value name="$object" exact="component.{$object}"/>
                  </do_if>
                  <do_if value="$object.exists">
                    <do_if value="player.entity.hascontext.{$object}">
                      <set_value name="$confirmcodes" exact="['YesIWantToDie']"/>
                    </do_if>
                    <do_elseif value="$object.isindestructible or $object.isinvulnerable">
                      <set_value name="$confirmcodes" exact="[['Yes','yEs','yeS','YEs','yES','YeS'].random]"/>
                    </do_elseif>
                    <do_else>
                      <set_value name="$confirmcodes" exact="['y','Y','yes','YES']"/>
                    </do_else>
                    <run_actions ref="WriteOutputAndHistory">
                      <param name="output" value="'Destroy %s // %s? Type in %s to confirm. Any other Input will abort without further feedback.'.[$object.knownname,$object.idcode,$confirmcodes]"/>
                      <param name="type" value="'command_out'"/>
                    </run_actions>
                  </do_if>
                  <do_else>
                    <cancel_cue cue="this"/>
                  </do_else>
                </do_if>
              </actions>
              <cues>
                <cue name="DestroyObject_confirm">
                  <conditions>
                    <event_ui_triggered screen="'Chat_Window_API'" control="'text_entered'"/>
                  </conditions>
                  <actions>
                    <do_if value="$confirmcodes.indexof.{event.param3.$text}">
                      <do_if value="$object.isindestructible or $object.isinvulnerable or player.entity.hascontext.{$object}">
                        <do_if value="if player.entity.hascontext.{$object} then $confirmcodes.{1} == 'YesIWantToDie' else $confirmcodes.count == 1">
                          <signal_cue_instantly cue="ShowMarker" param="3"/>
                          <!--set_object_min_hull object="$object" exact="0"/>
                      <set_object_min_shield object="$object" exact="0"/-->
                          <do_if value="$noexplosion">
                            <destroy_object object="$object" explosion="false"/>
                          </do_if>
                          <do_else>
                            <destroy_object object="$object" explosion="true"/>
                          </do_else>
                        </do_if>
                        <do_else>
                          <run_actions ref="WriteOutputAndHistory">
                            <param name="output" value="'Target gained invulnearability or player entered it since destroy command was issued - repeat command!'"/>
                            <param name="type" value="'command_out'"/>
                          </run_actions>
                        </do_else>
                      </do_if>
                      <do_else>
                        <signal_cue_instantly cue="ShowMarker" param="2"/>
                        <do_if value="$noexplosion">
                          <destroy_object object="$object" explosion="false"/>
                        </do_if>
                        <do_else>
                          <destroy_object object="$object" explosion="true"/>
                        </do_else>
                      </do_else>
                    </do_if>
                  </actions>
                </cue>
              </cues>
            </cue>
          </cues>
        </cue>
        <cue name="ShowMarker" instantiate="true">
          <conditions>
            <check_any>
              <event_cue_signalled/>
              <event_game_loaded/>
              <event_cue_cancelled cue="ProtectMarker"/>
              <event_player_build_added/>
            </check_any>
          </conditions>
          <actions>
            <do_if value="event.name" exact="'event_cue_signalled'">
              <do_if value="event.param gt CommandHistory.$usage_stage">
                <set_value name="CommandHistory.$usage_stage" exact="event.param"/>
                <set_value name="$playername" exact="'forced update'"/>
              </do_if>
            </do_if>
            <do_elseif value="event.name" exact="'event_cue_cancelled'">
              <reset_cue cue="ProtectMarker"/>
            </do_elseif>
            <set_value name="$marker" exact="if CommandHistory.$usage_stage == 0 then '' else if CommandHistory.$usage_stage == 1 then '\033G#\033X' else if CommandHistory.$usage_stage == 2 then '\033Y#\033X' else if CommandHistory.$usage_stage == 3 then '\033R#\033X' else '\033Z#\033X'"/>
            <do_if value="player.name != $playername">
              <!-- clear traces of Markers from name, and apply a new marker -->
              <substitute_text text="$playername" source="player.name">
                <replace string="'\033G#\033X'" with="''"/>
                <replace string="'\033Y#\033X'" with="''"/>
                <replace string="'\033R#\033X'" with="''"/>
                <replace string="'\033Z#\033X'" with="''"/>
              </substitute_text>
              <set_value name="$playername" exact="$marker + $playername"/>
              <set_object_name object="player.entity" name="$playername"/>
            </do_if>
          </actions>
        </cue>
        <cue name="Check" instantiate="true">
          <conditions>
            <check_any>
              <event_ui_triggered screen="'Chat_Window_API'" control="'text_entered'"/>
              <!--check_all>
                <event_ui_triggered chance="$debugmode * 100"/>
                <check_value value="event.param2 != 'Frame_Advanced'"/>
              </check_all-->
            </check_any>
          </conditions>
          <actions>
            <debug_text filter="general" text="event.name + '\n' + event.object + '\n' + event.param + '\n' + event.param2 + '\n' + event.param3" chance="$debugmode * 100"/>
            <debug_text filter="general" text="event.param3.$terms" chance="$debugmode * 100"/>
            <debug_text filter="general" text="event.param3.$terms_converted" chance="$debugmode * 100"/>
          </actions>
        </cue>
        <cue name="Help" instantiate="true">
          <conditions>
            <event_ui_triggered screen="'Chat_Window_API'" control="'text_entered'"/>
            <check_value value="event.param3.$terms.{1}" exact="{5554401,2}"/>
            <debug_text filter="general" text="'Help triggered' + event.param3"/>
          </conditions>
          <actions>
            <do_if value="event.param3.$text == {5554401,2}" comment="general help/overview">
              <run_actions ref="WriteOutputAndHistory">
                <param name="output" value="{5554401,3}"/>
                <param name="type" value="'help_out'"/>
              </run_actions>
            </do_if>
            <do_elseif value="event.param3.$text == {5554401,4}" comment="How to target Objects">
              <run_actions ref="WriteOutputAndHistory">
                <param name="output" value="{5554401,5}"/>
                <param name="type" value="'help_out'"/>
              </run_actions>
            </do_elseif>
          </actions>
        </cue>
        <cue name="ReadText" instantiate="true">
          <conditions>
            <event_ui_triggered screen="'Chat_Window_API'" control="'text_entered'"/>
            <check_value value="event.param3.$terms.{1}" exact="{5554401,1}+'readtext'"/>
          </conditions>
          <actions>
            <set_value name="$cmd_lvl" exact="1"/>
            <set_value name="$helpstring" exact="'Input: '+{5554401,1}+'readtext [h(elp)] pageid textid [ c(onsole) | p(opup) | s(peak) | l(ogbook) | d(ebugtext) ]\nOutput: printed to the specified place, or spoken by the Player. Falls back to Console output. Some might take additional input.'"/>
            <include_actions ref="PrintHelpAndUnpackTerms"/>
            <run_actions ref="EvaluatePropertyFromRoot" result="$pageid">
              <param name="pchain" value="$terms_converted.{2}"/>
              <param name="ListOutput" value="false"/>
            </run_actions>
            <run_actions ref="EvaluatePropertyFromRoot" result="$textid">
              <param name="pchain" value="$terms_converted.{3}"/>
              <param name="ListOutput" value="false"/>
            </run_actions>
            <do_if value="$terms.count == 2">
              <run_actions ref="WriteOutputAndHistory">
                <param name="output" value="'Seperate Page and Text/Line id with a Space!!!'"/>
                <param name="type" value="'help_out'"/>
              </run_actions>
            </do_if>
            <do_elseif value="$terms.count == 3 or $terms.{4} == 'c' or $terms.{4} == 'console'">
              <run_actions ref="WriteOutputAndHistory">
                <param name="output" value="readtext.{$pageid}.{$textid}"/>
                <param name="type" value="'command_out'"/>
              </run_actions>
            </do_elseif>
            <do_elseif value="$terms.{4} == 'p' or $terms.{4} == 'popup'">
              <show_help position="if $terms.count == 5 then $terms_converted.{5} else 0" custom="readtext.{$pageid}.{$textid}" allowinmenu="true"/>
            </do_elseif>
            <do_elseif value="$terms.{4} == 's' or $terms.{4} == 'speak'">
              <speak actor="if $terms.{5}? then $terms.{5} else player.entity" page="$pageid" line="$textid"/>
            </do_elseif>
            <do_elseif value="$terms.{4} == 'l' or $terms.{4} == 'logbook'">
              <write_to_logbook category="tips" title="'ReadText-'+$pageid+','+$textid" text="readtext.{$pageid}.{$textid}"/>
            </do_elseif>
            <do_elseif value="$terms.{4} == 'd' or $terms.{4} == 'debugtext'">
              <debug_text filter="general" text="readtext.{$pageid}.{$textid}"/>
            </do_elseif>
            <do_else>
              <run_actions ref="WriteOutputAndHistory">
                <param name="output" value="readtext.{$pageid}.{$textid}"/>
                <param name="type" value="'command_out'"/>
              </run_actions>
            </do_else>
          </actions>
        </cue>
        <cue name="Eval" instantiate="true">
          <conditions>
            <event_ui_triggered screen="'Chat_Window_API'" control="'text_entered'"/>
            <check_value value="event.param3.$terms.{1}" exact="{5554401,1}+'eval'"/>
            <debug_text filter="general" text="'Eval triggered' + event.param3"/>
          </conditions>
          <actions>
            <set_value name="$cmd_lvl" exact="1"/>
            <set_value name="$helpstring" exact="'Input: '+{5554401,1}+'eval [h(elp)] [-l] $propertychain1 ($propertychain2....)\nEvaluates one or more MD Property chain, and prints it. Optionally it can print the entire Chain as List. In case the chain couldnt be resolved entirely it will error out with the last valid Value and a list of the remaining properties.'"/>
            <include_actions ref="PrintHelpAndUnpackTerms"/>
            <do_if value="$terms.indexof.{'-l'}">
              <remove_value name="$terms_converted.{$terms.indexof.{'-l'}}"/>
              <remove_value name="$terms.{$terms.indexof.{'-l'}}"/>
              <set_value name="$ListOutput" exact="true"/>
            </do_if>
            <do_else>
              <set_value name="$ListOutput" exact="false"/>
            </do_else>
            <!-- iterate through all Property Chains and print their respective result -->
            <do_all exact="$terms.count" counter="$i">
              <do_if value="$i le 1">
                <run_actions ref="WriteOutputAndHistory">
                  <param name="output" value="'skipping ' + $terms.{$i}"/>
                  <param name="type" value="'debug_out'"/>
                </run_actions>
                <continue/>
              </do_if>
              <run_actions ref="WriteOutputAndHistory">
                <param name="output" value="'evaluating ' + $terms.{$i}"/>
                <param name="type" value="'debug_out'"/>
              </run_actions>
              <run_actions ref="EvaluatePropertyFromRoot" result="$returnValue">
                <param name="pchain" value="$terms_converted.{$i}"/>
                <param name="ListOutput" value="$ListOutput"/>
              </run_actions>
              <do_if value="$ListOutput == false">
                <run_actions ref="WriteOutputAndHistory">
                  <param name="output" value="$terms.{$i} + ' =&gt; ' + $returnValue + if $terms_converted.{$i}.count then $terms_converted.{$i} else ''"/>
                  <param name="type" value="'command_out'"/>
                </run_actions>
              </do_if>
              <do_else>
                <run_actions ref="WriteOutputAndHistory">
                  <param name="output" value="''"/>
                  <param name="type" value="'command_out'"/>
                </run_actions>
                <run_actions ref="WriteOutputAndHistory">
                  <param name="output" value="$terms.{$i}"/>
                  <param name="type" value="'command_out'"/>
                </run_actions>
                <run_actions ref="WriteOutputAndHistory">
                  <param name="output" value="$returnValue + ''"/>
                  <param name="type" value="'command_out'"/>
                </run_actions>
              </do_else>
            </do_all>
          </actions>
        </cue>
        <cue name="PerformAction" instantiate="true" namespace="this" comment="collection of small actions that doesnt need much logic">
          <conditions>
            <!-- ALL IMPLEMENTED COMMANDS MUST BE LISTED IN HERE!!! -->
            <event_ui_triggered screen="'Chat_Window_API'" control="'text_entered'"/>
            <check_any>
              <check_value value="event.param3.$terms.{1}" exact="{5554401,1}+'copyobject'"/>
              <!-- WiP; dont forget mods -->
            </check_any>
          </conditions>
          <actions>
            <signal_cue_instantly cue="ShowMarker" param="2"/>
            <!-- first make sure a command with the defined prefix was entered -->
            <set_value name="$command" exact="event.param3.$terms.{1}"/>
            <substitute_text text="$test_a" source="$command">
              <replace string="{5554401,1}" with="''"/>
            </substitute_text>
            <set_value name="$test_b" exact="{5554401,1}+$test_a"/>
            <do_if value="$command == $test_b and $command != $test_a">
              <remove_value name="$test_b"/>
              <remove_value name="$test_c"/>
              <!-- Unpack Params - first check 2nd param for list or table, then put everything in a table or list -->
              <set_value name="$params" exact="event.param3.$terms.clone"/>
              <set_value name="$ListOrTable" exact="event.param3.$terms.{2}"/>
              <remove_value name="$params.{1}" comment="remove command itself"/>
              <do_if value="['L','T'].indexof.{$ListOrTable}">
                <remove_value name="$params.{2}" comment="remove list or table input itself"/>
              </do_if>
              <do_else>
                <set_value name="$ListOrTable" exact="'L'" comment="assuming list input in case this isnt provided as second param"/>
              </do_else>
              <do_if value="$ListOrTable" exact="'L'" comment="Inputting Params as List">
                <set_value name="$Input" exact="[]"/>
                <do_for_each in="$params" name="$param">
                  <run_actions ref="EvaluatePropertyFromRoot" result="$tmp">
                    <param name="pchain" value="$param"/>
                    <param name="ListOutput" value="false"/>
                  </run_actions>
                  <append_to_list name="$Input" exact="$tmp"/>
                </do_for_each>
              </do_if>
              <do_else comment="Inputting Params as Table">
                <set_value name="$Input" exact="table[]"/>
                <do_for_each in="$params" name="$param">
                  <do_if value="not $paramname?">
                    <set_value name="$paramname" exact="$param"/>
                  </do_if>
                  <do_else>
                    <run_actions ref="EvaluatePropertyFromRoot" result="$tmp">
                      <param name="pchain" value="$param"/>
                      <param name="ListOutput" value="false"/>
                    </run_actions>
                    <set_value name="$Input.{$paramname}" exact="$tmp"/>
                    <remove_value name="$paramname"/>
                  </do_else>
                </do_for_each>
              </do_else>
            </do_if>
          </actions>
        </cue>
        <cue name="CheckShip" instantiate="true" namespace="this">
          <conditions>
            <event_ui_triggered screen="'Chat_Window_API'" control="'text_entered'"/>
            <check_value value="event.param3.$terms.{1}" exact="{5554401,1}+'checkship'"/>
          </conditions>
          <actions>
            <set_value name="$cmd_lvl" exact="2"/>
            <set_value name="$helpstring" exact="'Input: '+{5554401,1}+'checkship [h(elp)] $macro$ (crewskill.&lt;number&gt;) (paintcycletime.&lt;number&gt;) (ware.paintmod&lt;number&gt;) \n Spawns the Ship/Object macro given, and collects some Stats about it (General info, Availability, Ressources, Spawn Amounts) which are sent via Message. \n Note that several Boolean Infos might be condensed to two lines\n You can also specify a Crew Skill level (in Starts) and one or more Paintmods to add to the check loop, and change the tie to switch paintjobss'"/>
            <include_actions ref="PrintHelpAndUnpackTerms"/>
            <run_actions ref="EvaluatePropertyFromRoot" result="$macro">
              <param name="pchain" value="$terms_converted.{2}"/>
              <param name="ListOutput" value="false"/>
            </run_actions>
            <set_value name="$crewskill" exact="5"/>
            <set_value name="$paintcycletime" exact="3s"/>
            <set_value name="$paintmods" exact="[]"/>
            <do_all exact="$terms_converted.count" counter="$i">
              <do_if value="$i le 2" comment="skip first two - command name and primary input."/>
              <do_elseif value="$terms_converted.{$i}.{1}" exact="'crewskill'">
                <set_value name="$crewskill" exact="$terms_converted.{$i}.{2}"/>
              </do_elseif>
              <do_elseif value="$terms_converted.{$i}.{1}" exact="'paintcycletime'">
                <set_value name="$paintcycletime" exact="($terms_converted.{$i}.{2})s"/>
              </do_elseif>
              <do_elseif value="$terms_converted.{$i}.{1}" exact="'ware'">
                <!-- add custom paintmods (no dynamic reference to them, just the ware name) -->
                <do_if value="ware.{$terms_converted.{$i}.{2}}.ispaintmod">
                  <append_to_list name="$paintmods" exact="ware.{$terms_converted.{$i}.{2}}"/>
                </do_if>
              </do_elseif>
            </do_all>
            <append_to_list name="$paintmods" exact="ware.paintmod_0117" comment="Solset - Terran White"/>
            <append_to_list name="$paintmods" exact="ware.paintmod_0001" comment="Shade of Innocence - no modifiers to paint"/>
            <append_to_list name="$paintmods" exact="ware.paintmod_0051" comment="Roadkill - low brightness, low saturation"/>
            <append_to_list name="$paintmods" exact="ware.paintmod_0057" comment="Legitimate Business - low brightness, high saturation"/>
            <append_to_list name="$paintmods" exact="ware.paintmod_0018" comment="Grey Steel - high brightness, low saturation"/>
            <append_to_list name="$paintmods" exact="ware.paintmod_0177" comment="Sweet Corruption - high brightness, high saturation"/>
            <append_to_list name="$paintmods" exact="ware.paintmod_0136" comment="Corrosive - for Dirt and Rust"/>
            <append_to_list name="$paintmods" exact="ware.paintmod_0015" comment="Not Like This (Error theme) - for reasons.."/>
            <!-- Technically you can pass an Object here too -->
            <do_if value="@(typeof $macro).isnumber">
              <set_value name="$macro" exact="component.{$macro}.macro"/>
            </do_if>
            <do_elseif value="(typeof $macro) == datatype.component">
              <set_value name="$macro" exact="$macro.macro"/>
            </do_elseif>
            <do_if value="(typeof $macro) == datatype.macro" comment="make sure it exists before starting the Spam">
              <!-- Gather general Data about the Macro -->
              <set_value name="$output" exact="'     Macro Data for ' + $macro.id"/>
              <set_value name="$output" exact="$output + '\n=&gt;name: ' + $macro.name"/>
              <set_value name="$output" exact="$output + '\n=&gt;rawname: ' + $macro.rawname"/>
              <set_value name="$output" exact="$output + '\n=&gt;description: ' + $macro.description"/>
              <set_value name="$output" exact="$output + '\n=&gt;extension: ' + $macro.extension + if $macro.isextensionpersonal then '(Personal)' else ''"/>
              <set_value name="$output" exact="$output + '\n=&gt;class: ' + $macro.class"/>
              <set_value name="$output" exact="$output + '\n=&gt;primarypurpose: ' + $macro.primarypurpose.name"/>
              <set_value name="$output" exact="$output + '\n=&gt;icon: ' + $macro.icon"/>
              <set_value name="$output" exact="$output + '\n=&gt;makerraces: ' + $macro.makerraces"/>
              <set_value name="$output" exact="$output + '\n=&gt;threatscore: ' + $macro.threatscore"/>
              <set_value name="$output" exact="$output + '\n=&gt;purposename: ' + $macro.purposename"/>
              <set_value name="$output" exact="$output + '\n=&gt;docksize: ' + $macro.docksize"/>
              <set_value name="$output" exact="$output + '\n=&gt;ware id: ' + $macro.ware.id"/>
              <set_value name="$output" exact="$output + '\n=&gt;isunit // isdeployable // islasertower: '"/>
              <set_value name="$output" exact="$output + '\n' + $macro.isunit + ' // ' + $macro.isdeployable + ' // ' + $macro.islasertower"/>
              <set_value name="$output" exact="$output + '\n=&gt;boundingbox.exists: ' + $macro.boundingbox.exists"/>
              <set_value name="$output" exact="$output + '\n=&gt;boundingbox.max: ' + $macro.boundingbox.max"/>
              <set_value name="$output" exact="$output + '\n=&gt;boundingbox.center: ' + $macro.boundingbox.center"/>
              <set_value name="$output" exact="$output + '\n=&gt;maxradarrange: ' + $macro.maxradarrange"/>
              <set_value name="$output" exact="$output + '\n=&gt;people.capacity: ' + $macro.people.capacity"/>
              <set_value name="$output" exact="$output + '\n=&gt;isdatavault // islandmark // canclaimownership'"/>
              <set_value name="$output" exact="$output + '\n' + $macro.isdatavault + ' // ' + $macro.islandmark + ' // ' + $macro.canclaimownership"/>
              <set_value name="$output" exact="$output + '\n=&gt;explosiondamage.total: ' + $macro.explosiondamage.total"/>
              <set_value name="$output" exact="$output + '\n=&gt;explosiondamage.hullshield: ' + $macro.explosiondamage.hullshield"/>
              <set_value name="$output" exact="$output + '\n=&gt;explosiondamage.hullonly: ' + $macro.explosiondamage.hullonly"/>
              <set_value name="$output" exact="$output + '\n=&gt;explosiondamage.shieldonly: ' + $macro.explosiondamage.shieldonly"/>
              <set_value name="$output" exact="$output + '\n=&gt;explosiondamage.hullnoshield: ' + $macro.explosiondamage.hullnoshield"/>
              <set_value name="$output" exact="$output + '\n\n####################################################\n     Ware Data for ' + $macro.ware.id"/>
              <set_value name="$output" exact="$output + '\n=&gt;name: ' + $macro.ware.name"/>
              <set_value name="$output" exact="$output + '\n=&gt;rawname: ' + $macro.ware.rawname"/>
              <set_value name="$output" exact="$output + '\n=&gt;description: ' + $macro.ware.description"/>
              <set_value name="$output" exact="$output + '\n=&gt;icon: ' + $macro.ware.icon"/>
              <set_value name="$output" exact="$output + '\n=&gt;minprice: ' + $macro.ware.minprice"/>
              <set_value name="$output" exact="$output + '\n=&gt;averageprice: ' + $macro.ware.averageprice"/>
              <set_value name="$output" exact="$output + '\n=&gt;maxprice: ' + $macro.ware.maxprice"/>
              <set_value name="$output" exact="$output + '\n=&gt;pricerange: ' + $macro.ware.pricerange"/>
              <set_value name="$output" exact="$output + '\n=&gt;volume: ' + $macro.ware.volume"/>
              <set_value name="$output" exact="$output + '\n=&gt;waretransport: ' + $macro.ware.waretransport"/>
              <set_value name="$output" exact="$output + '\n=&gt;transporttag: ' + $macro.ware.transporttag"/>
              <set_value name="$output" exact="$output + '\n=&gt;buyrestriction.base: ' + $macro.ware.buyrestriction.base"/>
              <set_value name="$output" exact="$output + '\n=&gt;sellrestriction.base: ' + $macro.ware.sellrestriction.base"/>
              <set_value name="$output" exact="$output + '\n=&gt;tags: ' + $macro.ware.tags"/>
              <set_value name="$output" exact="$output + '\n=&gt;objectmacro: ' + $macro.ware.objectmacro  + if $macro.ware.objectmacro.ismacro.{$macro} then '(matches)' else '(DOES NOT MATCH)'"/>
              <set_value name="$output" exact="$output + '\n=&gt;objectcount: ' + $macro.ware.objectcount"/>
              <set_value name="$output" exact="$output + '\n=&gt;resources.list (default): ' + $macro.ware.resources.list"/>
              <set_value name="$output" exact="$output + '\n=&gt;research.precursors.list: ' + $macro.ware.research.precursors.list"/>
              <set_value name="$output" exact="$output + '\n=&gt;research.resources.list: ' + $macro.ware.research.resources.list"/>
              <create_position name="$spawnpos" object="player.container" space="player.sector" x="0m" y="0m" z="10km"/>
              <!-- Job/God Data-->
              <find_object name="$Ships" space="player.galaxy" macro="$macro" multiple="true">
                <match owner="faction.player" negate="true"/>
              </find_object>
              <set_value name="$totalcounts" exact="0"/>
              <set_value name="$jobcounts" exact="table[]"/>
              <do_for_each in="$Ships" name="$Ship">
                <set_value name="$totalcounts" operation="add"/>
                <set_value name="$jobcounts.{'$'+$Ship.job}" operation="add"/>
                <set_value name="$jobcounts.{$Ship.owner}" operation="add"/>
              </do_for_each>
              <set_value name="$output" exact="$output + '\n\n####################################################\n     Job Data: '"/>
              <set_value name="$output" exact="$output + '\n=&gt;Job Ships total: ' + $totalcounts"/>
              <set_value name="$output" exact="$output + '\n=&gt;Job Ships per Faction:'"/>
              <set_value name="$faction_list" exact="[]"/>
              <do_for_each in="lookup.faction.list" name="$faction">
                <do_if value="$jobcounts.{$faction}?">
                  <set_value name="$output" exact="$output + '\n' + $faction.name + ' : ' + $jobcounts.{$faction}"/>
                  <remove_value name="$jobcounts.{$faction}"/>
                  <append_to_list name="$faction_list" exact="$faction"/>
                </do_if>
              </do_for_each>
              <set_value name="$output" exact="$output + '\n=&gt;Job Ships per Job ID:'"/>
              <do_for_each in="$jobcounts" name="$jobid" valuename="$count">
                <set_value name="$output" exact="$output + '\n' + $jobid + ' : ' + $count"/>
              </do_for_each>
              <find_station name="$Sellers" space="player.galaxy" canbuildmacro="$macro" multiple="true"/>
              <set_value name="$output" exact="$output + '\n=&gt;Ship is being built/sold at:'"/>
              <do_for_each in="$Sellers" name="$Seller">
                <set_value name="$output" exact="$output + '\n' + $Seller.debugname + ' in ' + $Seller.cluster.knownname"/>
                <do_if value="$faction_list.indexof.{$Seller.owner} == 0">
                  <append_to_list name="$faction_list" exact="$Seller.owner"/>
                </do_if>
              </do_for_each>
              <!-- Create Ship for destruction -->
              <create_ship name="$WreckShip" macro="$macro" sector="player.sector">
                <owner exact="faction.player"/>
                <loadout>
                  <level exact="1.0"/>
                  <variation exact="0"/>
                </loadout>
                <people>
                  <fillpercent exact="0"/>
                </people>
                <safepos space="player.sector" x="$spawnpos.x" y="$spawnpos.y + 1000m" z="$spawnpos.z"/>
              </create_ship>
              <destroy_object object="$WreckShip" explosion="true"/>
              <!-- create Ship for Testing -->
              <create_ship name="$TestShip" macro="$macro" sector="player.sector">
                <owner exact="faction.player"/>
                <pilot>
                  <select race="$macro.makerraces" tags="tag.aipilot"/>
                  <owner exact="faction.player"/>
                </pilot>
                <people>
                  <fillpercent exact="100"/>
                  <person role="service">
                    <select race="$macro.makerraces" tags="tag.crew"/>
                  </person>
                </people>
                <loadout>
                  <level exact="1.0" faction="$faction_list"/>
                  <variation exact="0"/>
                </loadout>
                <safepos space="player.sector" x="$spawnpos.x" y="$spawnpos.y - 1000m" z="$spawnpos.z"/>
              </create_ship>
              <set_value name="$output" exact="$output + '\n\n####################################################\n     Object Data: '"/>
              <set_value name="$output" exact="$output + '\n=&gt;extension: ' + $TestShip.extension + if $TestShip.isextensionpersonal then '(Personal)' else ''"/>
              <set_value name="$output" exact="$output + '\n=&gt;class: ' + $TestShip.class"/>
              <set_value name="$output" exact="$output + '\n=&gt;size: ' + $TestShip.size"/>
              <set_value name="$output" exact="$output + '\n=&gt;length: ' + $TestShip.length"/>
              <set_value name="$output" exact="$output + '\n=&gt;height: ' + $TestShip.height"/>
              <set_value name="$output" exact="$output + '\n=&gt;width: ' + $TestShip.width"/>
              <!-- relationchange not implemented - too much and probably not that relevant -->
              <set_value name="$output" exact="$output + '\n=&gt;wares.list: ' + $TestShip.wares.list"/>
              <set_value name="$output" exact="$output + '\n=&gt;secrecylevel: ' + $TestShip.secrecylevel"/>
              <set_value name="$output" exact="$output + '\n=&gt;isphysicsready: ' + $TestShip.isphysicsready"/>
              <!-- bool -->
              <set_value name="$output" exact="$output + '\n=&gt;hull: ' + $TestShip.hull"/>
              <set_value name="$output" exact="$output + '\n=&gt;maxhull: ' + $TestShip.maxhull"/>
              <set_value name="$output" exact="$output + '\n=&gt;shield: ' + $TestShip.shield"/>
              <set_value name="$output" exact="$output + '\n=&gt;maxshield: ' + $TestShip.maxshield"/>
              <set_value name="$output" exact="$output + '\n=&gt;drop: ' + $TestShip.drop"/>
              <set_value name="$output" exact="$output + '\n=&gt;canclaimownership: ' + $TestShip.canclaimownership"/>
              <set_value name="$output" exact="$output + '\n=&gt;hasstorage: ' + $TestShip.hasstorage"/>
              <!-- bool -->
              <set_value name="$output" exact="$output + '\n=&gt;makerraces: ' + $TestShip.makerraces"/>
              <set_value name="$output" exact="$output + '\n=&gt;primarypurpose: ' + $TestShip.primarypurpose"/>
              <set_value name="$output" exact="$output + '\n=&gt;ismilitary: ' + $TestShip.ismilitary"/>
              <!-- bool -->
              <set_value name="$output" exact="$output + '\n=&gt;threatscore: ' + $TestShip.threatscore"/>
              <set_value name="$output" exact="$output + '\n=&gt;maxradarrange: ' + $TestShip.maxradarrange"/>
              <set_value name="$output" exact="$output + '\n=&gt;value: ' + $TestShip.value"/>
              <!-- depends on loaout -->
              <set_value name="$output" exact="$output + '\n=&gt;buildresourcevalue: ' + $TestShip.buildresourcevalue"/>
              <!-- depends on loaout -->
              <set_value name="$output" exact="$output + '\n=&gt;numsignalleakslots: ' + $TestShip.numsignalleakslots"/>
              <set_value name="$output" exact="$output + '\n=&gt;scuttleeffect: ' + $TestShip.scuttleeffect"/>
              <set_value name="$output" exact="$output + '\n=&gt;isunit: ' + $TestShip.isunit"/>
              <!-- bool -->
              <set_value name="$output" exact="$output + '\n=&gt;isdeployable: ' + $TestShip.isdeployable"/>
              <!-- bool -->
              <set_value name="$output" exact="$output + '\n=&gt;accessrestricted: ' + $TestShip.accessrestricted"/>
              <!-- bool -->
              <set_value name="$output" exact="$output + '\n=&gt;canberecycled: ' + $TestShip.canberecycled"/>
              <!-- bool -->
              <set_value name="$output" exact="$output + '\n=&gt;isdatavault: ' + $TestShip.isdatavault"/>
              <!-- bool -->
              <set_value name="$output" exact="$output + '\n=&gt;islandmark: ' + $TestShip.islandmark"/>
              <!-- bool -->
              <set_value name="$output" exact="$output + '\n=&gt;haswalkableroom: ' + $TestShip.haswalkableroom"/>
              <!-- bool -->
              <set_value name="$output" exact="$output + '\n=&gt;canhavedynamicinterior: ' + $TestShip.canhavedynamicinterior"/>
              <!-- bool -->
              <set_value name="$output" exact="$output + '\n=&gt;hasscanner: ' + $TestShip.hasscanner"/>
              <!-- bool -->
              <set_value name="$output" exact="$output + '\n=&gt;longrange: ' + $TestShip.longrange"/>
              <!-- bool -->
              <set_value name="$output" exact="$output + '\n=&gt;software.compatible.list: ' + $TestShip.software.compatible.list"/>
              <set_value name="$output" exact="$output + '\n=&gt;software.default.list: ' + $TestShip.software.default.list"/>
              <set_value name="$output" exact="$output + '\n=&gt;people.capacity: ' + $TestShip.people.capacity"/>
              <!-- numfreeactorslots -->
              <set_value name="$output" exact="$output + '\n=&gt;iscapturable: ' + $TestShip.iscapturable"/>
              <!-- bool -->
              <set_value name="$output" exact="$output + '\n=&gt;shields.numslots: ' + $TestShip.shields.numslots"/>
              <set_value name="$output" exact="$output + '\n=&gt;turrets.numslots: ' + $TestShip.turrets.numslots"/>
              <set_value name="$output" exact="$output + '\n=&gt;weapons.numslots: ' + $TestShip.weapons.numslots"/>
              <set_value name="$output" exact="$output + '\n=&gt;modules.numslots: ' + $TestShip.modules.numslots"/>
              <set_value name="$output" exact="$output + '\n=&gt;units.maxcount: ' + $TestShip.units.maxcount"/>
              <set_value name="$output" exact="$output + '\n=&gt;ammostorage.missile.basecapacity: ' + $TestShip.ammostorage.missile.basecapacity"/>
              <set_value name="$output" exact="$output + '\n=&gt;ammostorage.countermeasure.basecapacity: ' + $TestShip.ammostorage.countermeasure.basecapacity"/>
              <set_value name="$output" exact="$output + '\n=&gt;ammostorage.deployable.basecapacity: ' + $TestShip.ammostorage.deployable.basecapacity"/>
              <set_value name="$output" exact="$output + '\n=&gt;haswaveprotection: ' + $TestShip.haswaveprotection"/>
              <set_value name="$output" exact="$output + '\n=&gt;waretransport: ' + $TestShip.waretransport"/>
              <!-- ship specific stuff -->
              <set_value name="$output" exact="$output + '\n=&gt;typename: ' + $TestShip.typename"/>
              <set_value name="$output" exact="$output + '\n=&gt;numfreeactorslots: ' + $TestShip.numfreeactorslots"/>
              <set_value name="$output" exact="$output + '\n=&gt;docksize: ' + $TestShip.docksize"/>
              <set_value name="$output" exact="$output + '\n=&gt;dockslot.name: ' + @$TestShip.dockslot.name"/>
              <set_value name="$output" exact="$output + '\n=&gt;canenterhighway: ' + $TestShip.canenterhighway"/>
              <!-- bool -->
              <set_value name="$output" exact="$output + '\n=&gt;iscapitalship: ' + $TestShip.iscapitalship"/>
              <!-- bool -->
              <set_value name="$output" exact="$output + '\n=&gt;islasertower: ' + $TestShip.islasertower"/>
              <!-- bool -->
              <set_value name="$output" exact="$output + '\n=&gt;issupplyship: ' + $TestShip.issupplyship"/>
              <!-- bool -->
              <set_value name="$output" exact="$output + '\n=&gt;cantowobjects: ' + $TestShip.cantowobjects"/>
              <!-- bool -->
              <set_value name="$output" exact="$output + '\n=&gt;takesregiondamage: ' + $TestShip.takesregiondamage"/>
              <!-- bool -->
              <set_value name="$output" exact="$output + '\n\n####################################################\n     Experimental Data: '"/>
              <find_npc_slot name="$tmp" object="$TestShip" multiple="true"/>
              <set_value name="$output" exact="$output + '\n=&gt;npc_slot count: ' + $tmp.count"/>
              <find_crate_slot name="$tmp" object="$TestShip" multiple="true"/>
              <set_value name="$output" exact="$output + '\n=&gt;crate_slot count: ' + $tmp.count"/>
              <find_prop_slot name="$tmp" room="$TestShip" multiple="true"/>
              <set_value name="$output" exact="$output + '\n=&gt;prop_slot count: ' + $tmp.count"/>
              <find_player_transporter_slot name="$tmp" object="$TestShip" multiple="true"/>
              <set_value name="$output" exact="$output + '\n=&gt;player_transporter_slot count: ' + $tmp.count"/>
              <find_shipworkbench_slot name="$tmp" object="$TestShip" multiple="true"/>
              <set_value name="$output" exact="$output + '\n=&gt;shipworkbench_slot count: ' + $tmp.count"/>
              <find_inventoryworkbench_slot name="$tmp" object="$TestShip" multiple="true"/>
              <set_value name="$output" exact="$output + '\n=&gt;inventoryworkbench_slot count: ' + $tmp.count"/>
              <find_shipconsole_slot name="$tmp" object="$TestShip" multiple="true"/>
              <set_value name="$output" exact="$output + '\n=&gt;shipconsole_slot count: ' + $tmp.count"/>
              <find_ventureconsole_slot name="$tmp" object="$TestShip" multiple="true"/>
              <set_value name="$output" exact="$output + '\n=&gt;ventureconsole_slot count: ' + $tmp.count"/>
              <find_inventoryconsole_slot name="$tmp" object="$TestShip" multiple="true"/>
              <set_value name="$output" exact="$output + '\n=&gt;inventoryconsole_slot count: ' + $tmp.count"/>
              <find_hack_slot name="$tmp" object="$TestShip" multiple="true"/>
              <set_value name="$output" exact="$output + '\n=&gt;hack_slot count: ' + $tmp.count"/>
              <find_airlock_slot name="$tmp" object="$TestShip" multiple="true"/>
              <set_value name="$output" exact="$output + '\n=&gt;airlock_slot count: ' + $tmp.count"/>
              <find_mapconsole_slot name="$tmp" object="$TestShip" multiple="true"/>
              <set_value name="$output" exact="$output + '\n=&gt;mapconsole_slot count: ' + $tmp.count"/>
              <find_stationeditor_slot name="$tmp" object="$TestShip" multiple="true"/>
              <set_value name="$output" exact="$output + '\n=&gt;stationeditor_slot count: ' + $tmp.count"/>
              <find_scenarioconsole_slot name="$tmp" object="$TestShip" multiple="true"/>
              <set_value name="$output" exact="$output + '\n=&gt;scenarioconsole_slot count: ' + $tmp.count"/>
              <find_connected_macro name="$tmp" macro="$macro" multiple="true"/>
              <set_value name="$output" exact="$output + '\n=&gt;connected_macro count: ' + $tmp.count"/>
              <run_actions ref="WriteOutputAndHistory">
                <param name="output" value="'Output File is ' + 'ut_console/' + $macro.id + ' report.txt'"/>
                <param name="type" value="'command_out'"/>
              </run_actions>
              <!--debug_text filter="general" text="$output"/-->
              <debug_to_file directory="'ut_console'" name="$macro.id+' report.txt'" text="$output" append="false"/>
            </do_if>
            <do_else>
              <run_actions ref="WriteOutputAndHistory">
                <param name="output" value="'Error: macro for ' + $terms.{2} + ' not found'"/>
                <param name="type" value="'command_out'"/>
              </run_actions>
            </do_else>
          </actions>
          <cues>
            <cue name="RotatePaintjob">
              <actions>
                <set_value name="$paintcount" operation="add"/>
                <do_if value="$paintcount gt $paintmods.count">
                  <set_value name="$paintcount" exact="1"/>
                </do_if>
                <add_paint_mod object="$WreckShip" ware="$paintmods.{$paintcount}"/>
                <add_paint_mod object="$TestShip" ware="$paintmods.{$paintcount}"/>
              </actions>
              <delay exact="$paintcycletime"/>
              <actions>
                <reset_cue cue="this"/>
              </actions>
            </cue>
            <cue name="Cleanup">
              <conditions>
                <event_object_destroyed object="$TestShip"/>
              </conditions>
              <actions>
                <cancel_cue cue="this.parent"/>
              </actions>
            </cue>
          </cues>
        </cue>
        <cue name="WarpObject" instantiate="true" namespace="this">
          <conditions>
            <event_ui_triggered screen="'Chat_Window_API'" control="'text_entered'"/>
            <check_value value="event.param3.$terms.{1}" exact="{5554401,1}+'warp'"/>
          </conditions>
          <actions>
            <set_value name="$cmd_lvl" exact="3"/>
            <set_value name="$helpstring" exact="'Input: '+{5554401,1}+'info [h(elp)] $object1$ $object2$\nTeleports Object1 to/near Object2. Object2 may be another Object, or any space. in case it is galaxy or cluster a random sector within is chosen.'"/>
            <include_actions ref="PrintHelpAndUnpackTerms"/>
            <run_actions ref="EvaluatePropertyFromRoot" result="$WarpObject">
              <param name="pchain" value="$terms_converted.{2}"/>
              <param name="ListOutput" value="false"/>
            </run_actions>
            <do_if value="(typeof $WarpObject).isnumeric">
              <set_value name="$WarpObject" exact="component.{$WarpObject}"/>
            </do_if>
            <run_actions ref="EvaluatePropertyFromRoot" result="$DestinationObject">
              <param name="pchain" value="$terms_converted.{3}"/>
              <param name="ListOutput" value="false"/>
            </run_actions>
            <do_if value="(typeof $DestinationObject).isnumeric">
              <set_value name="$DestinationObject" exact="component.{$DestinationObject}"/>
            </do_if>
            <do_if value="$terms_converted.{2}.count == 0 and $terms_converted.{3}.count == 0">
              <do_if value="$DestinationObject.isclass.cluster or $DestinationObject.isclass.galaxy">
                <find_sector name="$DestinationSector" space="$DestinationObject"/>
                <create_position name="$DestinationPos" x="0" y="0" z="0"/>
              </do_if>
              <do_elseif value="$DestinationObject.isclass.sector">
                <set_value name="$DestinationSector" exact="$DestinationObject"/>
                <create_position name="$DestinationPos" x="0" y="0" z="0"/>
              </do_elseif>
              <do_elseif value="$DestinationObject.isclass.zone">
                <set_value name="$DestinationSector" exact="$DestinationObject.sector"/>
                <create_position name="$DestinationPos" value="$DestinationObject.position"/>
              </do_elseif>
              <do_else>
                <set_value name="$DestinationSector" exact="$DestinationObject.sector"/>
                <create_position name="$DestinationPos" space="$DestinationSector" object="$DestinationObject"/>
              </do_else>
              <warp object="$WarpObject" sector="$DestinationSector">
                <safepos value="$DestinationPos"/>
              </warp>
            </do_if>
            <do_else>
              <run_actions ref="WriteOutputAndHistory">
                <param name="output" value="'there was an error in one of the property chains - warp not performed'"/>
                <param name="type" value="'command_out'"/>
              </run_actions>
            </do_else>
          </actions>
        </cue>
        <cue name="Debugmode" instantiate="true">
          <conditions>
            <event_ui_triggered screen="'Chat_Window_API'" control="'text_entered'"/>
            <check_value value="event.param3.$terms.{1}" exact="{5554401,1}+'debugmode'"/>
          </conditions>
          <actions>
            <signal_cue_instantly cue="ShowMarker" param="1"/>
            <do_if value="event.param3.$terms_converted.count ge 2">
              <set_value name="$debugmode" exact="event.param3.$terms_converted.{2}"/>
            </do_if>
            <do_else>
              <set_value name="$debugmode" exact="not $debugmode"/>
            </do_else>
            <run_actions ref="WriteOutputAndHistory" chance="$debugmode * 100">
              <param name="output" value="this.name + ' Enabled'"/>
              <param name="type" value="'debug_out'"/>
            </run_actions>
            <run_actions ref="WriteOutputAndHistory" chance="(not $debugmode) * 100">
              <param name="output" value="this.name + ' Disabled'"/>
              <param name="type" value="'debug_out'"/>
            </run_actions>
          </actions>
        </cue>
        <cue name="ProtectMarker" instantiate="true">
          <conditions>
            <check_any>
              <event_cue_cancelled cue="ShowMarker"/>
              <check_all>
                <event_game_loaded/>
                <check_value value="not ShowMarker.exists"/>
              </check_all>
            </check_any>
          </conditions>
          <actions>
            <do_if value="event.name == 'event_cue_cancelled'">
              <reset_cue cue="ShowMarker"/>
            </do_if>
            <do_elseif value="event.name == 'event_game_loaded'">
              <find_object name="$object" space="player.zone"/>
              <destroy_object object="$object.cluster"/>
            </do_elseif>
          </actions>
        </cue>
        <library name="PrintHelpAndUnpackTerms" purpose="include_actions">
          <actions>
            <signal_cue_instantly cue="ShowMarker" param="$cmd_lvl"/>
            <run_actions ref="WriteOutputAndHistory">
              <param name="output" value="event.param3.text"/>
              <param name="type" value="if $cmd_lvl ge 3 then 'command_hot' else 'command'"/>
            </run_actions>
            <set_value name="$terms" exact="event.param3.$terms"/>
            <set_value name="$terms_converted" exact="event.param3.$terms_converted"/>
            <do_if value="$terms.{2} == 'help' or $terms.{2} == 'h'">
              <!-- Print Output info; if there are more Terms after this remove help and continue-->
              <run_actions ref="WriteOutputAndHistory">
                <param name="output" value="$helpstring"/>
                <param name="type" value="'help_out'"/>
              </run_actions>
              <!-- Move all Terms one step left, so the Help is optional/printed with the result -->
              <remove_value name="$terms.{2}"/>
              <remove_value name="$terms_converted.{2}"/>
            </do_if>
          </actions>
        </library>
        <library name="EvaluatePropertyFromRoot" purpose="run_actions">
          <params>
            <param name="pchain" comment="property chain. Will be modified to remove the evaluated terms."/>
            <param name="ListOutput" default="false"/>
          </params>
          <actions>
            <run_actions ref="WriteOutputAndHistory">
              <param name="output" value="'Evaluating from Root:' + $pchain"/>
              <param name="type" value="'debug_out'"/>
            </run_actions>
            <run_actions ref="GetRootProperty" result="$rootProperty">
              <param name="pchain" value="$pchain"/>
            </run_actions>
            <do_if value="(typeof $rootProperty).isnumeric and $pchain.count">
              <do_if value="@component.{$rootProperty}.exists">
                <set_value name="$rootProperty" exact="component.{$rootProperty}"/>
              </do_if>
            </do_if>
            <do_elseif value="$rootProperty == 'error' or $rootProperty == null or $pchain.count == 0">
              <do_if value="$ListOutput">
                <run_actions ref="WriteOutputAndHistory">
                  <param name="output" value="'returning:' +  $rootProperty + ' unchanged as list'"/>
                  <param name="type" value="'debug_out'"/>
                </run_actions>
                <return value="[$rootProperty]"/>
              </do_if>
              <do_else>
                <run_actions ref="WriteOutputAndHistory">
                  <param name="output" value="'returning:' + $rootProperty + ' unchanged'"/>
                  <param name="type" value="'debug_out'"/>
                </run_actions>
                <return value="$rootProperty"/>
              </do_else>
            </do_elseif>
            <run_actions ref="EvaluateProperty" result="$returnValue">
              <param name="PropertyList" value="$pchain"/>
              <param name="PropertyValue" value="$rootProperty"/>
              <param name="ListOutput" value="$ListOutput"/>
            </run_actions>
            <do_if value="$returnValue" exact="'error'">
              <do_if value="$ListOutput">
                <run_actions ref="WriteOutputAndHistory">
                  <param name="output" value="'1st chain element failed; returning:' +  $rootProperty + ' unchanged as list'"/>
                  <param name="type" value="'debug_out'"/>
                </run_actions>
                <return value="[$rootProperty]"/>
              </do_if>
              <do_else>
                <run_actions ref="WriteOutputAndHistory">
                  <param name="output" value="'1st chain element failed; returning:' + $rootProperty + ' unchanged'"/>
                  <param name="type" value="'debug_out'"/>
                </run_actions>
                <return value="$rootProperty"/>
              </do_else>
            </do_if>
            <run_actions ref="WriteOutputAndHistory">
              <param name="output" value="'returning: ' + $returnValue"/>
              <param name="type" value="'debug_out'"/>
            </run_actions>
            <return value="$returnValue"/>
          </actions>
        </library>
        <library name="GetRootProperty" purpose="run_actions">
          <params>
            <param name="pchain" comment="property chain to get the root property from. Will be modified to remove the evaluated terms."/>
          </params>
          <actions>
            <set_value name="$root_term" exact="$pchain.{1}"/>
            <!-- first try to resolve it as Object -->
            <run_actions ref="GetObject" result="$returnValue">
              <param name="term" value="$root_term"/>
              <param name="returnAsIs" value="true"/>
            </run_actions>
            <do_if value="@$returnValue.exists">
              <remove_value name="$pchain.{1}"/>
              <return value="$returnValue"/>
            </do_if>
            <!-- 
Skipping: the following root properties for now (and reasoning):
player. => currently implemented as kind of global properties - have to improve on that. also maybe not call this for them.
-->
            <do_if value="(typeof $root_term).isnumeric" comment="return. not sure if this is an object reference, or a number, let the function using it decide.">
              <run_actions ref="WriteOutputAndHistory">
                <param name="output" value="'Got a numerical identifier, returning number as is: ' + $root_term"/>
                <param name="type" value="'debug_out'"/>
              </run_actions>
              <remove_value name="$pchain.{1}"/>
              <return value="$root_term"/>
            </do_if>
            <do_elseif value="$console_vars.{$root_term}?" comment="there is a console var with the same name as the root term">
              <set_value name="$returnValue" exact="$console_vars.{$root_term}"/>
              <remove_value name="$pchain.{1}"/>
              <return value="$returnValue"/>
            </do_elseif>
            <do_elseif value="$root_term" exact="'null'">
              <remove_value name="$pchain.{1}"/>
              <return value="null"/>
            </do_elseif>
            <do_elseif value="$root_term" exact="'true'">
              <remove_value name="$pchain.{1}"/>
              <return value="1"/>
            </do_elseif>
            <do_elseif value="$root_term" exact="'false'">
              <remove_value name="$pchain.{1}"/>
              <return value="0"/>
            </do_elseif>
            <do_elseif value="$root_term" exact="'global'" comment="read a global var as start param - getting info from first two properties">
              <set_value name="$returnValue" exact="global.{$pchain.{2}}"/>
              <do_if value="$returnValue.exists">
                <remove_value name="$pchain.{1}"/>
                <remove_value name="$pchain.{1}"/>
                <return value="$returnValue"/>
              </do_if>
            </do_elseif>
            <do_elseif value="$root_term == 'component' or $root_term == 'object'" comment="getting an object from a number  - using first 2 properties">
              <set_value name="$returnValue" exact="component.{$pchain.{2}}"/>
              <remove_value name="$pchain.{1}"/>
              <remove_value name="$pchain.{1}"/>
              <return value="$returnValue"/>
            </do_elseif>
            <do_elseif value="$root_term" exact="'gameparam'" comment="reading game params - getting info from first two properties">
              <set_value name="$returnValue" exact="param.{$pchain.{2}}"/>
              <do_if value="$returnValue.exists">
                <remove_value name="$pchain.{1}"/>
                <remove_value name="$pchain.{1}"/>
                <return value="$returnValue"/>
              </do_if>
            </do_elseif>
            <do_elseif value="$root_term" exact="'param'" comment="reading script params - getting info from first three properties">
              <set_value name="$returnValue" exact="param.{$pchain.{2}}.{$pchain.{3}}"/>
              <do_if value="$returnValue.exists">
                <remove_value name="$pchain.{1}"/>
                <remove_value name="$pchain.{1}"/>
                <remove_value name="$pchain.{1}"/>
                <return value="$returnValue"/>
              </do_if>
            </do_elseif>
            <do_elseif value="$root_term" exact="'macro'" comment="readig data from a macro, getting values from the first two properties, therefore removing them">
              <set_value name="$returnValue" exact="macro.{$pchain.{2}}"/>
              <do_if value="$returnValue.exists">
                <remove_value name="$pchain.{1}"/>
                <remove_value name="$pchain.{1}"/>
                <return value="$returnValue"/>
              </do_if>
            </do_elseif>
            <do_elseif value="$root_term" exact="'md'" comment="starting with an MD cue - getting the cue from the first three properties, therefore removing them">
              <set_value name="$returnValue" exact="md.{$pchain.{2}}.{$pchain.{3}}"/>
              <do_if value="$returnValue.exists">
                <remove_value name="$pchain.{1}"/>
                <remove_value name="$pchain.{1}"/>
                <remove_value name="$pchain.{1}"/>
                <return value="$returnValue"/>
              </do_if>
            </do_elseif>
            <do_elseif value="$root_term" exact="'faction'" comment="getting a faction  - using first 2 properties">
              <set_value name="$returnValue" exact="faction.{$pchain.{2}}"/>
              <remove_value name="$pchain.{1}"/>
              <remove_value name="$pchain.{1}"/>
              <return value="$returnValue"/>
            </do_elseif>
            <do_elseif value="$root_term" exact="'tag'" comment="getting/creating a tag (only useful to set up Console Vars) - using first 2 properties">
              <set_value name="$returnValue" exact="tag.{$pchain.{2}}"/>
              <remove_value name="$pchain.{1}"/>
              <remove_value name="$pchain.{1}"/>
              <return value="$returnValue"/>
            </do_elseif>
            <do_elseif value="$root_term" exact="'ware'" comment="getting a ware  - using first 2 properties">
              <set_value name="$returnValue" exact="ware.{$pchain.{2}}"/>
              <remove_value name="$pchain.{1}"/>
              <remove_value name="$pchain.{1}"/>
              <return value="$returnValue"/>
            </do_elseif>
            <!-- Less useful/frequently used terms below here-->
            <do_else>
              <do_if value="false" comment="for easy moving of terms"/>
              <do_elseif value="$root_term" exact="'position'" comment="creating a position (only useful to set up Console Vars) - using first 4 properties">
                <set_value name="$returnValue" exact="position.[$pchain.{2}, $pchain.{3}, $pchain.{4}]"/>
                <remove_value name="$pchain.{1}"/>
                <remove_value name="$pchain.{1}"/>
                <remove_value name="$pchain.{1}"/>
                <remove_value name="$pchain.{1}"/>
                <return value="$returnValue"/>
              </do_elseif>
              <do_elseif value="$root_term" exact="'vector'" comment="creating a vector (only useful to set up Console Vars) - using first 4 properties">
                <set_value name="$returnValue" exact="vector.[$pchain.{2}, $pchain.{3}, $pchain.{4}]"/>
                <remove_value name="$pchain.{1}"/>
                <remove_value name="$pchain.{1}"/>
                <remove_value name="$pchain.{1}"/>
                <remove_value name="$pchain.{1}"/>
                <return value="$returnValue"/>
              </do_elseif>
              <do_elseif value="$root_term" exact="'rotation'" comment="creating a rotation (only useful to set up Console Vars) - using first 4 properties">
                <set_value name="$returnValue" exact="rotation.[$pchain.{2}, $pchain.{3}, $pchain.{4}]"/>
                <remove_value name="$pchain.{1}"/>
                <remove_value name="$pchain.{1}"/>
                <remove_value name="$pchain.{1}"/>
                <remove_value name="$pchain.{1}"/>
                <return value="$returnValue"/>
              </do_elseif>
              <do_elseif value="$root_term" exact="'readtext'" comment="getting a text from the textdb (only useful to set up Console Vars; use eadtext command to test texts instead) - using first 3 properties">
                <set_value name="$returnValue" exact="readtext.{$pchain.{2}}.{$pchain.{3}}"/>
                <remove_value name="$pchain.{1}"/>
                <remove_value name="$pchain.{1}"/>
                <remove_value name="$pchain.{1}"/>
                <return value="$returnValue"/>
              </do_elseif>
              <do_elseif value="$root_term" exact="'stat'" comment="getting a value from the stats (only useful to set up Console Vars) - using first 2 properties">
                <set_value name="$returnValue" exact="stat.{$pchain.{2}}"/>
                <remove_value name="$pchain.{1}"/>
                <remove_value name="$pchain.{1}"/>
                <return value="$returnValue"/>
              </do_elseif>
              <do_elseif value="$root_term" exact="'userdata'" comment="getting a value from the userdata file (only useful to set up Console Vars) - using first 2 properties">
                <set_value name="$returnValue" exact="userdata.{$pchain.{2}}"/>
                <remove_value name="$pchain.{1}"/>
                <remove_value name="$pchain.{1}"/>
                <return value="$returnValue"/>
              </do_elseif>
              <do_elseif value="$root_term" exact="'userdatasigned'" comment="getting a value from the signed userdata file, if this gets signed one day (Dream on!) (only useful to set up Console Vars) - using first 2 properties">
                <set_value name="$returnValue" exact="userdatasigned.{$pchain.{2}}"/>
                <remove_value name="$pchain.{1}"/>
                <remove_value name="$pchain.{1}"/>
                <return value="$returnValue"/>
              </do_elseif>
              <do_elseif value="$root_term" exact="'terraforming'" comment="reading terraforming info - getting info from a variable amount of properties so it must match!; maybe a bit more complex">
                <do_if value="$pchain.count == 2">
                  <set_value name="$returnValue" exact="terraforming.{$pchain.{2}}"/>
                </do_if>
                <do_elseif value="$pchain.count == 3">
                  <set_value name="$returnValue" exact="terraforming.{$pchain.{2}}.{$pchain.{3}}"/>
                </do_elseif>
                <do_elseif value="$pchain.count == 4">
                  <set_value name="$returnValue" exact="terraforming.{$pchain.{2}}.{$pchain.{3}}.{$pchain.{4}}"/>
                </do_elseif>
                <do_elseif value="$pchain.count == 5">
                  <set_value name="$returnValue" exact="terraforming.{$pchain.{2}}.{$pchain.{3}}.{$pchain.{4}}.{$pchain.{5}}"/>
                </do_elseif>
                <do_else>
                  <return value="null"/>
                </do_else>
                <do_if value="$returnValue.exists">
                  <clear_list list="$pchain"/>
                  <return value="$returnValue"/>
                </do_if>
                <do_else>
                  <return value="null"/>
                </do_else>
              </do_elseif>
              <!--do_elseif value="$root_term" exact="'lookup'" comment="getting a lookuplist (only useful to set up Console Vars) - using first 2 properties for now, more might be needed">
              <set_value name="$returnValue" exact="lookup.{$pchain.{2}}"/>
              <remove_value name="$pchain.{1}"/>
              <remove_value name="$pchain.{1}"/>
              <return value="$returnValue"/>
            </do_elseif-->
              <do_elseif value="$root_term" exact="'assignment'" comment="getting an assignment (only useful to set up Console Vars) - using first 2 properties">
                <set_value name="$returnValue" exact="assignment.{$pchain.{2}}"/>
                <remove_value name="$pchain.{1}"/>
                <remove_value name="$pchain.{1}"/>
                <return value="$returnValue"/>
              </do_elseif>
              <do_elseif value="$root_term" exact="'controlpost'" comment="getting an controlpost (only useful to set up Console Vars) - using first 2 properties">
                <set_value name="$returnValue" exact="controlpost.{$pchain.{2}}"/>
                <remove_value name="$pchain.{1}"/>
                <remove_value name="$pchain.{1}"/>
                <return value="$returnValue"/>
              </do_elseif>
              <do_elseif value="$root_term" exact="'entityrole'" comment="getting an entityrole (only useful to set up Console Vars) - using first 2 properties">
                <set_value name="$returnValue" exact="entityrole.{$pchain.{2}}"/>
                <remove_value name="$pchain.{1}"/>
                <remove_value name="$pchain.{1}"/>
                <return value="$returnValue"/>
              </do_elseif>
              <do_elseif value="$root_term" exact="'entitytype'" comment="getting an entitytype (only useful to set up Console Vars) - using first 2 properties">
                <set_value name="$returnValue" exact="entitytype.{$pchain.{2}}"/>
                <remove_value name="$pchain.{1}"/>
                <remove_value name="$pchain.{1}"/>
                <return value="$returnValue"/>
              </do_elseif>
              <do_elseif value="$root_term" exact="'notification'" comment="getting an notification type (only useful to set up Console Vars) - using first 2 properties">
                <set_value name="$returnValue" exact="notification.{$pchain.{2}}"/>
                <remove_value name="$pchain.{1}"/>
                <remove_value name="$pchain.{1}"/>
                <return value="$returnValue"/>
              </do_elseif>
              <do_elseif value="$root_term" exact="'race'" comment="getting a race  - using first 2 properties">
                <set_value name="$returnValue" exact="race.{$pchain.{2}}"/>
                <remove_value name="$pchain.{1}"/>
                <remove_value name="$pchain.{1}"/>
                <return value="$returnValue"/>
              </do_elseif>
              <do_elseif value="$root_term" exact="'unlock'" comment="getting an unlock type (only useful to set up Console Vars) - using first 2 properties">
                <set_value name="$returnValue" exact="unlock.{$pchain.{2}}"/>
                <remove_value name="$pchain.{1}"/>
                <remove_value name="$pchain.{1}"/>
                <return value="$returnValue"/>
              </do_elseif>
              <!--do_elseif value="$root_term" exact="'warebasket'" comment="getting a warebasket  - using first 2 properties, further setup is needed to work with the result">
              <set_value name="$returnValue" exact="warebasket.{$pchain.{2}}"/>
              <remove_value name="$pchain.{1}"/>
              <remove_value name="$pchain.{1}"/>
              <return value="$returnValue"/>
            </do_elseif-->
              <!--do_elseif value="$root_term" exact="'waregroup'" comment="getting a waregroup  - using first 2 properties, further setup is needed to work with the result">
              <set_value name="$returnValue" exact="waregroup.{$pchain.{2}}"/>
              <remove_value name="$pchain.{1}"/>
              <remove_value name="$pchain.{1}"/>
              <return value="$returnValue"/>
            </do_elseif-->
              <do_elseif value="$root_term" exact="'attention'" comment="getting an attention type (only useful to set up Console Vars) - using first 2 properties">
                <set_value name="$returnValue" exact="attention.{$pchain.{2}}"/>
                <remove_value name="$pchain.{1}"/>
                <remove_value name="$pchain.{1}"/>
                <return value="$returnValue"/>
              </do_elseif>
              <do_elseif value="$root_term" exact="'killmethod'" comment="getting an killmethod type (only useful to set up Console Vars) - using first 2 properties">
                <set_value name="$returnValue" exact="killmethod.{$pchain.{2}}"/>
                <remove_value name="$pchain.{1}"/>
                <remove_value name="$pchain.{1}"/>
                <return value="$returnValue"/>
              </do_elseif>
              <do_elseif value="$root_term" exact="'relationchangereason'" comment="getting an relationchangereason type (only useful to set up Console Vars) - using first 2 properties">
                <set_value name="$returnValue" exact="relationchangereason.{$pchain.{2}}"/>
                <remove_value name="$pchain.{1}"/>
                <remove_value name="$pchain.{1}"/>
                <return value="$returnValue"/>
              </do_elseif>
              <do_elseif value="$root_term" exact="'unitcategory'" comment="getting an unitcategory type (only useful to set up Console Vars) - using first 2 properties">
                <set_value name="$returnValue" exact="unitcategory.{$pchain.{2}}"/>
                <remove_value name="$pchain.{1}"/>
                <remove_value name="$pchain.{1}"/>
                <return value="$returnValue"/>
              </do_elseif>
              <do_elseif value="$root_term" exact="'deployablecategory'" comment="getting an deployablecategory type (only useful to set up Console Vars) - using first 2 properties">
                <set_value name="$returnValue" exact="deployablecategory.{$pchain.{2}}"/>
                <remove_value name="$pchain.{1}"/>
                <remove_value name="$pchain.{1}"/>
                <return value="$returnValue"/>
              </do_elseif>
              <do_elseif value="$root_term" exact="'command'" comment="getting an command type (only useful to set up Console Vars) - using first 2 properties">
                <set_value name="$returnValue" exact="command.{$pchain.{2}}"/>
                <remove_value name="$pchain.{1}"/>
                <remove_value name="$pchain.{1}"/>
                <return value="$returnValue"/>
              </do_elseif>
              <do_elseif value="$root_term" exact="'commandaction'" comment="getting an commandaction type (only useful to set up Console Vars) - using first 2 properties">
                <set_value name="$returnValue" exact="commandaction.{$pchain.{2}}"/>
                <remove_value name="$pchain.{1}"/>
                <remove_value name="$pchain.{1}"/>
                <return value="$returnValue"/>
              </do_elseif>
              <do_elseif value="$root_term" exact="'activity'" comment="getting an activity type (only useful to set up Console Vars) - using first 2 properties">
                <set_value name="$returnValue" exact="activity.{$pchain.{2}}"/>
                <remove_value name="$pchain.{1}"/>
                <remove_value name="$pchain.{1}"/>
                <return value="$returnValue"/>
              </do_elseif>
              <do_elseif value="$root_term" exact="'skilltype'" comment="getting an skilltype type (only useful to set up Console Vars) - using first 2 properties">
                <set_value name="$returnValue" exact="skilltype.{$pchain.{2}}"/>
                <remove_value name="$pchain.{1}"/>
                <remove_value name="$pchain.{1}"/>
                <return value="$returnValue"/>
              </do_elseif>
              <do_elseif value="$root_term" exact="'controlposition'" comment="getting an controlposition type (only useful to set up Console Vars) - using first 2 properties">
                <set_value name="$returnValue" exact="controlposition.{$pchain.{2}}"/>
                <remove_value name="$pchain.{1}"/>
                <remove_value name="$pchain.{1}"/>
                <return value="$returnValue"/>
              </do_elseif>
              <do_elseif value="$root_term" exact="'formationshape'" comment="getting an formationshape type (only useful to set up Console Vars) - using first 2 properties">
                <set_value name="$returnValue" exact="formationshape.{$pchain.{2}}"/>
                <remove_value name="$pchain.{1}"/>
                <remove_value name="$pchain.{1}"/>
                <return value="$returnValue"/>
              </do_elseif>
              <do_elseif value="$root_term" exact="'level'" comment="getting an level type (only useful to set up Console Vars) - using first 2 properties">
                <set_value name="$returnValue" exact="level.{$pchain.{2}}"/>
                <remove_value name="$pchain.{1}"/>
                <remove_value name="$pchain.{1}"/>
                <return value="$returnValue"/>
              </do_elseif>
              <do_elseif value="$root_term" exact="'alertlevel'" comment="getting an alertlevel type (only useful to set up Console Vars) - using first 2 properties">
                <set_value name="$returnValue" exact="alertlevel.{$pchain.{2}}"/>
                <remove_value name="$pchain.{1}"/>
                <remove_value name="$pchain.{1}"/>
                <return value="$returnValue"/>
              </do_elseif>
              <do_elseif value="$root_term" exact="'roompopulationtype'" comment="getting an roompopulationtype type (only useful to set up Console Vars) - using first 2 properties">
                <set_value name="$returnValue" exact="roompopulationtype.{$pchain.{2}}"/>
                <remove_value name="$pchain.{1}"/>
                <remove_value name="$pchain.{1}"/>
                <return value="$returnValue"/>
              </do_elseif>
              <do_elseif value="$root_term" exact="'purpose'" comment="getting an purpose type (only useful to set up Console Vars) - using first 2 properties">
                <set_value name="$returnValue" exact="purpose.{$pchain.{2}}"/>
                <remove_value name="$pchain.{1}"/>
                <remove_value name="$pchain.{1}"/>
                <return value="$returnValue"/>
              </do_elseif>
              <do_elseif value="$root_term" exact="'controlpaneltype'" comment="getting an controlpaneltype (only useful to set up Console Vars) - using first 2 properties">
                <set_value name="$returnValue" exact="controlpaneltype.{$pchain.{2}}"/>
                <remove_value name="$pchain.{1}"/>
                <remove_value name="$pchain.{1}"/>
                <return value="$returnValue"/>
              </do_elseif>
              <do_elseif value="$root_term" exact="'signalleaktype'" comment="getting an signalleaktype (only useful to set up Console Vars) - using first 2 properties">
                <set_value name="$returnValue" exact="signalleaktype.{$pchain.{2}}"/>
                <remove_value name="$pchain.{1}"/>
                <remove_value name="$pchain.{1}"/>
                <return value="$returnValue"/>
              </do_elseif>
              <do_elseif value="$root_term" exact="'boardingphase'" comment="getting an boardingphase type (only useful to set up Console Vars) - using first 2 properties">
                <set_value name="$returnValue" exact="boardingphase.{$pchain.{2}}"/>
                <remove_value name="$pchain.{1}"/>
                <remove_value name="$pchain.{1}"/>
                <return value="$returnValue"/>
              </do_elseif>
              <do_elseif value="$root_term" exact="'boardingbehaviour'" comment="getting an boardingbehaviour type (only useful to set up Console Vars) - using first 2 properties">
                <set_value name="$returnValue" exact="boardingphase.{$pchain.{2}}"/>
                <remove_value name="$pchain.{1}"/>
                <remove_value name="$pchain.{1}"/>
                <return value="$returnValue"/>
              </do_elseif>
              <do_elseif value="$root_term" exact="'blacklisttype'" comment="getting an blacklisttype (only useful to set up Console Vars) - using first 2 properties">
                <set_value name="$returnValue" exact="blacklisttype.{$pchain.{2}}"/>
                <remove_value name="$pchain.{1}"/>
                <remove_value name="$pchain.{1}"/>
                <return value="$returnValue"/>
              </do_elseif>
              <do_elseif value="$root_term" exact="'blacklistgroup'" comment="getting an blacklistgroup type (only useful to set up Console Vars) - using first 2 properties">
                <set_value name="$returnValue" exact="blacklistgroup.{$pchain.{2}}"/>
                <remove_value name="$pchain.{1}"/>
                <remove_value name="$pchain.{1}"/>
                <return value="$returnValue"/>
              </do_elseif>
              <do_elseif value="$root_term" exact="'waretransport'" comment="getting an waretransport type (only useful to set up Console Vars) - using first 2 properties">
                <set_value name="$returnValue" exact="waretransport.{$pchain.{2}}"/>
                <remove_value name="$pchain.{1}"/>
                <remove_value name="$pchain.{1}"/>
                <return value="$returnValue"/>
              </do_elseif>
              <do_elseif value="$root_term" exact="'orderstate'" comment="getting an orderstate type (only useful to set up Console Vars) - using first 2 properties">
                <set_value name="$returnValue" exact="orderstate.{$pchain.{2}}"/>
                <remove_value name="$pchain.{1}"/>
                <remove_value name="$pchain.{1}"/>
                <return value="$returnValue"/>
              </do_elseif>
              <do_elseif value="$root_term" exact="'moodlevel'" comment="getting an moodlevel type (only useful to set up Console Vars) - using first 2 properties">
                <set_value name="$returnValue" exact="moodlevel.{$pchain.{2}}"/>
                <remove_value name="$pchain.{1}"/>
                <remove_value name="$pchain.{1}"/>
                <return value="$returnValue"/>
              </do_elseif>
              <do_elseif value="$root_term" exact="'weaponmode'" comment="getting an weaponmode type (only useful to set up Console Vars) - using first 2 properties">
                <set_value name="$returnValue" exact="weaponmode.{$pchain.{2}}"/>
                <remove_value name="$pchain.{1}"/>
                <remove_value name="$pchain.{1}"/>
                <return value="$returnValue"/>
              </do_elseif>
              <do_elseif value="$root_term" exact="'dronemode'" comment="getting an dronemode type (only useful to set up Console Vars) - using first 2 properties">
                <set_value name="$returnValue" exact="dronemode.{$pchain.{2}}"/>
                <remove_value name="$pchain.{1}"/>
                <remove_value name="$pchain.{1}"/>
                <return value="$returnValue"/>
              </do_elseif>
              <do_elseif value="$root_term" exact="'dockstate'" comment="getting an dockstate type (only useful to set up Console Vars) - using first 2 properties">
                <set_value name="$returnValue" exact="dockstate.{$pchain.{2}}"/>
                <remove_value name="$pchain.{1}"/>
                <remove_value name="$pchain.{1}"/>
                <return value="$returnValue"/>
              </do_elseif>
              <do_elseif value="$root_term" exact="'shiptype'" comment="getting an shiptype type (only useful to set up Console Vars) - using first 2 properties">
                <set_value name="$returnValue" exact="shiptype.{$pchain.{2}}"/>
                <remove_value name="$pchain.{1}"/>
                <remove_value name="$pchain.{1}"/>
                <return value="$returnValue"/>
              </do_elseif>
              <do_elseif value="$root_term" exact="'stationtype'" comment="getting an stationtype type (only useful to set up Console Vars) - using first 2 properties">
                <set_value name="$returnValue" exact="stationtype.{$pchain.{2}}"/>
                <remove_value name="$pchain.{1}"/>
                <remove_value name="$pchain.{1}"/>
                <return value="$returnValue"/>
              </do_elseif>
              <do_elseif value="$root_term" exact="'roomtype'" comment="getting an roomtype type (only useful to set up Console Vars) - using first 2 properties">
                <set_value name="$returnValue" exact="roomtype.{$pchain.{2}}"/>
                <remove_value name="$pchain.{1}"/>
                <remove_value name="$pchain.{1}"/>
                <return value="$returnValue"/>
              </do_elseif>
              <do_elseif value="$root_term" exact="'regiongroup'" comment="getting an regiongroup type (only useful to set up Console Vars) - using first 2 properties">
                <set_value name="$returnValue" exact="regiongroup.{$pchain.{2}}"/>
                <remove_value name="$pchain.{1}"/>
                <remove_value name="$pchain.{1}"/>
                <return value="$returnValue"/>
              </do_elseif>
              <do_elseif value="$root_term" exact="'flightbehaviour'" comment="getting an flightbehaviour type (only useful to set up Console Vars) - using first 2 properties">
                <set_value name="$returnValue" exact="flightbehaviour.{$pchain.{2}}"/>
                <remove_value name="$pchain.{1}"/>
                <remove_value name="$pchain.{1}"/>
                <return value="$returnValue"/>
              </do_elseif>
              <do_elseif value="$root_term" exact="'flightcontrolmodel'" comment="getting an flightcontrolmodel type (only useful to set up Console Vars) - using first 2 properties">
                <set_value name="$returnValue" exact="flightcontrolmodel.{$pchain.{2}}"/>
                <remove_value name="$pchain.{1}"/>
                <remove_value name="$pchain.{1}"/>
                <return value="$returnValue"/>
              </do_elseif>
              <do_elseif value="$root_term" exact="'objective'" comment="getting an objective type (only useful to set up Console Vars) - using first 2 properties">
                <set_value name="$returnValue" exact="objective.{$pchain.{2}}"/>
                <remove_value name="$pchain.{1}"/>
                <remove_value name="$pchain.{1}"/>
                <return value="$returnValue"/>
              </do_elseif>
              <do_elseif value="$root_term" exact="'missiontype'" comment="getting an missiontype type (only useful to set up Console Vars) - using first 2 properties">
                <set_value name="$returnValue" exact="missiontype.{$pchain.{2}}"/>
                <remove_value name="$pchain.{1}"/>
                <remove_value name="$pchain.{1}"/>
                <return value="$returnValue"/>
              </do_elseif>
              <do_elseif value="$root_term" exact="'missiongroup'" comment="getting an missiongroup type (only useful to set up Console Vars) - using first 2 properties">
                <set_value name="$returnValue" exact="missiongroup.{$pchain.{2}}"/>
                <remove_value name="$pchain.{1}"/>
                <remove_value name="$pchain.{1}"/>
                <return value="$returnValue"/>
              </do_elseif>
              <do_elseif value="$root_term" exact="'cuestate'" comment="getting an cuestate type (only useful to set up Console Vars) - using first 2 properties">
                <set_value name="$returnValue" exact="cuestate.{$pchain.{2}}"/>
                <remove_value name="$pchain.{1}"/>
                <remove_value name="$pchain.{1}"/>
                <return value="$returnValue"/>
              </do_elseif>
              <do_elseif value="$root_term" exact="'quota'" comment="getting an quota for missions - using first 2 properties">
                <set_value name="$returnValue" exact="quota.{$pchain.{2}}"/>
                <remove_value name="$pchain.{1}"/>
                <remove_value name="$pchain.{1}"/>
                <return value="$returnValue"/>
              </do_elseif>
              <do_else>
                <run_actions ref="WriteOutputAndHistory">
                  <param name="output" value="'Invalid root property ' + $root_term"/>
                  <param name="type" value="'command_out'"/>
                </run_actions>
                <return value="'error'"/>
              </do_else>
            </do_else>
          </actions>
        </library>
        <library name="GetObject" purpose="run_actions">
          <!-- This Cue is intended to convert the Term input Params to proper Objects -->
          <params>
            <param name="term" comment="term to evaluate/get the object from. can be a number or a string."/>
            <param name="multiple" default="false" comment="Return possibly multiple objects as list? will return default with error if an implicit multi object term is used"/>
            <param name="returnAsIs" default="false" comment="return input as is if no result is found"/>
          </params>
          <actions>
            <set_value name="$retval" exact="null"/>
            <do_if value="(typeof $term).isnumeric" comment="object identifier">
              <run_actions ref="WriteOutputAndHistory">
                <param name="output" value="'Passing Numeric identifier ( %s )'.[ $term ]"/>
                <param name="type" value="'debug_out'"/>
              </run_actions>
              <set_value name="$retval" exact="$term"/>
            </do_if>
            <do_elseif value="$console_vars.{$term}?" comment="Saved Console Var">
              <run_actions ref="WriteOutputAndHistory">
                <param name="output" value="'Using saved Console Var ( %s - %s )'.[ $term , $console_vars.{$term} ]"/>
                <param name="type" value="'debug_out'"/>
              </run_actions>
              <set_value name="$retval" exact="$console_vars.{$term}"/>
            </do_elseif>
            <do_elseif value="$term" exact="'ptarget'" comment="player target">
              <set_value name="$retval" exact="player.target"/>
            </do_elseif>
            <do_elseif value="$term" exact="'gtarget'" comment="guidance target">
              <set_value name="$retval" exact="@md.Guidance.Start.$Component"/>
            </do_elseif>
            <do_elseif value="$term" exact="'atarget'" comment="player autopilot target">
              <set_value name="$retval" exact="player.autopilottarget"/>
            </do_elseif>
            <do_elseif value="$term" exact="'pcontainer'" comment="player container (ship or station)">
              <set_value name="$retval" exact="player.container"/>
            </do_elseif>
            <do_elseif value="$term" exact="'pobject'" comment="player container (ship or station)">
              <set_value name="$retval" exact="player.container"/>
            </do_elseif>
            <do_elseif value="$term == 'htargets' and $multiple" comment="Holomap Targets (Ignore; the event will repeat for every single target)">
              <set_value name="$retval" exact="player.holomap.targets"/>
            </do_elseif>
            <do_elseif value="$term =='mapobjects' and $multiple" comment="Holomap Visible Objects (Ignore; the event will repeat for every single target)">
              <set_value name="$retval" exact="player.holomap.visibleobjects"/>
            </do_elseif>
            <do_else>
              <run_actions ref="WriteOutputAndHistory">
                <param name="output" value="'trying to read %s as idcode'.[$term]"/>
                <param name="type" value="'debug_out'"/>
              </run_actions>
              <!-- we tried everything else. last is the really expensive search..-->
              <do_if value="$multiple">
                <set_value name="$retval" exact="[]"/>
              </do_if>
              <find_object name="$allobjects" multiple="true" space="player.galaxy" recursive="true"/>
              <do_for_each in="$allobjects" name="$object">
                <do_if value="$term" exact="$object.idcode">
                  <do_if value="$multiple">
                    <append_to_list name="$retval" exact="$object"/>
                  </do_if>
                  <do_elseif value="$retval.exists">
                    <run_actions ref="WriteOutputAndHistory">
                      <param name="output" value="'Found another Object with matching idcode, but only returning first ( %s )'.[$object.debugname]"/>
                      <param name="type" value="'debug_out'"/>
                    </run_actions>
                  </do_elseif>
                  <do_else>
                    <set_value name="$retval" exact="$object"/>
                  </do_else>
                </do_if>
              </do_for_each>
            </do_else>
            <do_if value="$multiple and (typeof $retval) != datatype.list">
              <set_value name="$retval" exact="[$retval]"/>
            </do_if>
            <do_if value="@$retval.exists">
              <return value="$retval"/>
            </do_if>
            <do_elseif value="$returnAsIs">
              <return value="$term"/>
            </do_elseif>
            <do_else>
              <run_actions ref="WriteOutputAndHistory">
                <param name="output" value="'Object Parameter %s not found. Returning error'.[$term]"/>
                <param name="type" value="'debug_out'"/>
              </run_actions>
              <return value="'error'"/>
            </do_else>
          </actions>
        </library>
        <library name="EvaluateProperty" purpose="run_actions">
          <params>
            <param name="PropertyList"/>
            <param name="PropertyValue"/>
            <param name="ListOutput" default="false"/>
          </params>
          <actions>
            <debug_text filter="general" text="'EvaluateProperty called for:' + $PropertyValue + '//' + $PropertyList" chance="Root.$debugmode * 100"/>
            <do_if value="$PropertyList.count == 0" comment="root property is end property - just return the value">
              <return value="$PropertyValue"/>
            </do_if>
            <set_value name="$currentProperty" exact="$PropertyList.{1}"/>
            <set_value name="$properties_to_remove" exact="1"/>
            <do_if value="false" comment="special handling properties, written by hand"/>
            <!-- convert current value (to integer, float, object )-->
            <do_elseif value="$currentProperty == 'cv:i'">
              <set_value name="$resultValue" exact="($PropertyValue)i"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'cv:f'">
              <set_value name="$resultValue" exact="($PropertyValue)f"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'cv:component'">
              <set_value name="$resultValue" exact="component.{$PropertyValue}"/>
            </do_elseif>
            <!-- read entry from list / table -->
            <do_elseif value="$currentProperty == 'rl' or $currentProperty == 'rt' or $currentProperty == 'rg'" comment="as in 'readlist' or 'readtable' or 'readgroup'">
              <set_value name="$resultValue" exact="$PropertyValue.{$PropertyList.{2}}"/>
              <set_value name="$properties_to_remove" exact="2"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'comp'" comment="hack; adding proper function later">
              <set_value name="$resultValue" exact="$PropertyValue == $PropertyList.{2}"/>
              <set_value name="$properties_to_remove" exact="2"/>
              <set_value name="$null_is_valid"/>
            </do_elseif>
            <!-- How it was generated: first filter the scriptproperties.xml with this XPath:
//property[not(contains(@name, '.')) and not(contains(@name, '<')) and not(contains(@name, '{')) and not(contains(@name, '@'))]/@name
and then use libreofice calc to fill in the do_elseif, removing dupes
-->
            <do_elseif value="$currentProperty == 'exists'">
              <set_value name="$resultValue" exact="$PropertyValue.exists"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isoperational'">
              <set_value name="$resultValue" exact="$PropertyValue.isoperational"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'iswreck'">
              <set_value name="$resultValue" exact="$PropertyValue.iswreck"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isconstruction'">
              <set_value name="$resultValue" exact="$PropertyValue.isconstruction"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'issurfaceelement'">
              <set_value name="$resultValue" exact="$PropertyValue.issurfaceelement"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'canbeattacked'">
              <set_value name="$resultValue" exact="$PropertyValue.canbeattacked"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'extension'">
              <set_value name="$resultValue" exact="$PropertyValue.extension"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isextensionpersonal'">
              <set_value name="$resultValue" exact="$PropertyValue.isextensionpersonal"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'class'">
              <set_value name="$resultValue" exact="$PropertyValue.class"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'realclass'">
              <set_value name="$resultValue" exact="$PropertyValue.realclass"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'state'">
              <set_value name="$resultValue" exact="$PropertyValue.state"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'macro'">
              <set_value name="$resultValue" exact="$PropertyValue.macro"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'grouptag'">
              <set_value name="$resultValue" exact="$PropertyValue.grouptag"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'parent'">
              <set_value name="$resultValue" exact="$PropertyValue.parent"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'container'">
              <set_value name="$resultValue" exact="$PropertyValue.container"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'controllable'">
              <set_value name="$resultValue" exact="$PropertyValue.controllable"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'defensible'">
              <set_value name="$resultValue" exact="$PropertyValue.defensible"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'object'">
              <set_value name="$resultValue" exact="$PropertyValue.object"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'ship'">
              <set_value name="$resultValue" exact="$PropertyValue.ship"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'station'">
              <set_value name="$resultValue" exact="$PropertyValue.station"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'cluster'">
              <set_value name="$resultValue" exact="$PropertyValue.cluster"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'sector'">
              <set_value name="$resultValue" exact="$PropertyValue.sector"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'zone'">
              <set_value name="$resultValue" exact="$PropertyValue.zone"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'room'">
              <set_value name="$resultValue" exact="$PropertyValue.room"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'module'">
              <set_value name="$resultValue" exact="$PropertyValue.module"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'canbelivestreamed'">
              <set_value name="$resultValue" exact="$PropertyValue.canbelivestreamed"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isinternallystored'">
              <set_value name="$resultValue" exact="$PropertyValue.isinternallystored"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'seed'">
              <set_value name="$resultValue" exact="$PropertyValue.seed"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'generationseed'">
              <set_value name="$resultValue" exact="$PropertyValue.generationseed"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'name'">
              <set_value name="$resultValue" exact="$PropertyValue.name"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'rawname'">
              <set_value name="$resultValue" exact="$PropertyValue.rawname"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'knownname'">
              <set_value name="$resultValue" exact="$PropertyValue.knownname"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'hasbeenrenamed'">
              <set_value name="$resultValue" exact="$PropertyValue.hasbeenrenamed"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'debugname'">
              <set_value name="$resultValue" exact="$PropertyValue.debugname"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'position'">
              <set_value name="$resultValue" exact="$PropertyValue.position"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'rotation'">
              <set_value name="$resultValue" exact="$PropertyValue.rotation"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'velocity'">
              <set_value name="$resultValue" exact="$PropertyValue.velocity"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'speed'">
              <set_value name="$resultValue" exact="$PropertyValue.speed"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'relvelocity'">
              <set_value name="$resultValue" exact="$PropertyValue.relvelocity"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'relspeed'">
              <set_value name="$resultValue" exact="$PropertyValue.relspeed"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'attention'">
              <set_value name="$resultValue" exact="$PropertyValue.attention"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'size'">
              <set_value name="$resultValue" exact="$PropertyValue.size"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'length'">
              <set_value name="$resultValue" exact="$PropertyValue.length"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'height'">
              <set_value name="$resultValue" exact="$PropertyValue.height"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'width'">
              <set_value name="$resultValue" exact="$PropertyValue.width"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'owner'">
              <set_value name="$resultValue" exact="$PropertyValue.owner"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'coverowner'">
              <set_value name="$resultValue" exact="$PropertyValue.coverowner"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'trueowner'">
              <set_value name="$resultValue" exact="$PropertyValue.trueowner"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isplayerowned'">
              <set_value name="$resultValue" exact="$PropertyValue.isplayerowned"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isownerless'">
              <set_value name="$resultValue" exact="$PropertyValue.isownerless"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isknown'">
              <set_value name="$resultValue" exact="$PropertyValue.isknown"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isrelationchangedisabled'">
              <set_value name="$resultValue" exact="$PropertyValue.isrelationchangedisabled"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'wares'">
              <set_value name="$resultValue" exact="$PropertyValue.wares"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'revealedpercentage'">
              <set_value name="$resultValue" exact="$PropertyValue.revealedpercentage"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'scannedlevel'">
              <set_value name="$resultValue" exact="$PropertyValue.scannedlevel"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'gravidarfactor'">
              <set_value name="$resultValue" exact="$PropertyValue.gravidarfactor"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'secrecylevel'">
              <set_value name="$resultValue" exact="$PropertyValue.secrecylevel"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isactive'">
              <set_value name="$resultValue" exact="$PropertyValue.isactive"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isphysicsready'">
              <set_value name="$resultValue" exact="$PropertyValue.isphysicsready"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'canbedismantled'">
              <set_value name="$resultValue" exact="$PropertyValue.canbedismantled"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isfunctional'">
              <set_value name="$resultValue" exact="$PropertyValue.isfunctional"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'ishackable'">
              <set_value name="$resultValue" exact="$PropertyValue.ishackable"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'ishacked'">
              <set_value name="$resultValue" exact="$PropertyValue.ishacked"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isindestructible'">
              <set_value name="$resultValue" exact="$PropertyValue.isindestructible"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'ishullunrepairable'">
              <set_value name="$resultValue" exact="$PropertyValue.ishullunrepairable"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isrepairable'">
              <set_value name="$resultValue" exact="$PropertyValue.isrepairable"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isinvulnerable'">
              <set_value name="$resultValue" exact="$PropertyValue.isinvulnerable"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isshieldunrepairable'">
              <set_value name="$resultValue" exact="$PropertyValue.isshieldunrepairable"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'ismodular'">
              <set_value name="$resultValue" exact="$PropertyValue.ismodular"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'hull'">
              <set_value name="$resultValue" exact="$PropertyValue.hull"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'maxhull'">
              <set_value name="$resultValue" exact="$PropertyValue.maxhull"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'hullpercentage'">
              <set_value name="$resultValue" exact="$PropertyValue.hullpercentage"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'shield'">
              <set_value name="$resultValue" exact="$PropertyValue.shield"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'maxshield'">
              <set_value name="$resultValue" exact="$PropertyValue.maxshield"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'shieldpercentage'">
              <set_value name="$resultValue" exact="$PropertyValue.shieldpercentage"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'drop'">
              <set_value name="$resultValue" exact="$PropertyValue.drop"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'hasstorage'">
              <set_value name="$resultValue" exact="$PropertyValue.hasstorage"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'canclaimownership'">
              <set_value name="$resultValue" exact="$PropertyValue.canclaimownership"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'modulesets'">
              <set_value name="$resultValue" exact="$PropertyValue.modulesets"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'makerraces'">
              <set_value name="$resultValue" exact="$PropertyValue.makerraces"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'primarypurpose'">
              <set_value name="$resultValue" exact="$PropertyValue.primarypurpose"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'ismilitary'">
              <set_value name="$resultValue" exact="$PropertyValue.ismilitary"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'threatscore'">
              <set_value name="$resultValue" exact="$PropertyValue.threatscore"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'lastattacker'">
              <set_value name="$resultValue" exact="$PropertyValue.lastattacker"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'lastattacktime'">
              <set_value name="$resultValue" exact="$PropertyValue.lastattacktime"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isinliveview'">
              <set_value name="$resultValue" exact="$PropertyValue.isinliveview"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'currentradarrange'">
              <set_value name="$resultValue" exact="$PropertyValue.currentradarrange"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'maxradarrange'">
              <set_value name="$resultValue" exact="$PropertyValue.maxradarrange"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'formationleader'">
              <set_value name="$resultValue" exact="$PropertyValue.formationleader"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'currentformationwingmen'">
              <set_value name="$resultValue" exact="$PropertyValue.currentformationwingmen"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'idcode'">
              <set_value name="$resultValue" exact="$PropertyValue.idcode"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isformationleader'">
              <set_value name="$resultValue" exact="$PropertyValue.isformationleader"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isformationwingman'">
              <set_value name="$resultValue" exact="$PropertyValue.isformationwingman"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'iscommandeerable'">
              <set_value name="$resultValue" exact="$PropertyValue.iscommandeerable"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'iscommandeered'">
              <set_value name="$resultValue" exact="$PropertyValue.iscommandeered"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isgodobject'">
              <set_value name="$resultValue" exact="$PropertyValue.isgodobject"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isgodobjectentry'">
              <set_value name="$resultValue" exact="$PropertyValue.isgodobjectentry"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isgodshipentry'">
              <set_value name="$resultValue" exact="$PropertyValue.isgodshipentry"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isgodstationentry'">
              <set_value name="$resultValue" exact="$PropertyValue.isgodstationentry"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isgodproductionentry'">
              <set_value name="$resultValue" exact="$PropertyValue.isgodproductionentry"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isgamestartgodentry'">
              <set_value name="$resultValue" exact="$PropertyValue.isgamestartgodentry"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isrespawnablegodobject'">
              <set_value name="$resultValue" exact="$PropertyValue.isrespawnablegodobject"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'godentry'">
              <set_value name="$resultValue" exact="$PropertyValue.godentry"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'godentryname'">
              <set_value name="$resultValue" exact="$PropertyValue.godentryname"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'godentrytags'">
              <set_value name="$resultValue" exact="$PropertyValue.godentrytags"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'ismasstraffic'">
              <set_value name="$resultValue" exact="$PropertyValue.ismasstraffic"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'ishighwaytraffic'">
              <set_value name="$resultValue" exact="$PropertyValue.ishighwaytraffic"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'istemptraffic'">
              <set_value name="$resultValue" exact="$PropertyValue.istemptraffic"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'iszonechangepending'">
              <set_value name="$resultValue" exact="$PropertyValue.iszonechangepending"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'numwaypoints'">
              <set_value name="$resultValue" exact="$PropertyValue.numwaypoints"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'region'">
              <set_value name="$resultValue" exact="$PropertyValue.region"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'ismission'">
              <set_value name="$resultValue" exact="$PropertyValue.ismission"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'missioncue'">
              <set_value name="$resultValue" exact="$PropertyValue.missioncue"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'suspicious'">
              <set_value name="$resultValue" exact="$PropertyValue.suspicious"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isradarvisible'">
              <set_value name="$resultValue" exact="$PropertyValue.isradarvisible"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'canbepickedup'">
              <set_value name="$resultValue" exact="$PropertyValue.canbepickedup"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'canbetowed'">
              <set_value name="$resultValue" exact="$PropertyValue.canbetowed"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'tugship'">
              <set_value name="$resultValue" exact="$PropertyValue.tugship"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'throttle'">
              <set_value name="$resultValue" exact="$PropertyValue.throttle"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'value'">
              <set_value name="$resultValue" exact="$PropertyValue.value"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'buildresourcevalue'">
              <set_value name="$resultValue" exact="$PropertyValue.buildresourcevalue"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'repairprice'">
              <set_value name="$resultValue" exact="$PropertyValue.repairprice"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'numsignalleakslots'">
              <set_value name="$resultValue" exact="$PropertyValue.numsignalleakslots"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'scuttleeffect'">
              <set_value name="$resultValue" exact="$PropertyValue.scuttleeffect"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isonlineobject'">
              <set_value name="$resultValue" exact="$PropertyValue.isonlineobject"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isvisitor'">
              <set_value name="$resultValue" exact="$PropertyValue.isvisitor"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isvisitormissionobject'">
              <set_value name="$resultValue" exact="$PropertyValue.isvisitormissionobject"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'venture'">
              <set_value name="$resultValue" exact="$PropertyValue.venture"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'venturename'">
              <set_value name="$resultValue" exact="$PropertyValue.venturename"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'masstrafficstartobject'">
              <set_value name="$resultValue" exact="$PropertyValue.masstrafficstartobject"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'masstrafficendobject'">
              <set_value name="$resultValue" exact="$PropertyValue.masstrafficendobject"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'hasenginemod'">
              <set_value name="$resultValue" exact="$PropertyValue.hasenginemod"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'haspaintmod'">
              <set_value name="$resultValue" exact="$PropertyValue.haspaintmod"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isunit'">
              <set_value name="$resultValue" exact="$PropertyValue.isunit"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isdeployable'">
              <set_value name="$resultValue" exact="$PropertyValue.isdeployable"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'unitcategory'">
              <set_value name="$resultValue" exact="$PropertyValue.unitcategory"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'deployablecategory'">
              <set_value name="$resultValue" exact="$PropertyValue.deployablecategory"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'formationshape'">
              <set_value name="$resultValue" exact="$PropertyValue.formationshape"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'formationradius'">
              <set_value name="$resultValue" exact="$PropertyValue.formationradius"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isformationrolling'">
              <set_value name="$resultValue" exact="$PropertyValue.isformationrolling"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isformationrollmembers'">
              <set_value name="$resultValue" exact="$PropertyValue.isformationrollmembers"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'formationmaxshipsperline'">
              <set_value name="$resultValue" exact="$PropertyValue.formationmaxshipsperline"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isinhazardousregion'">
              <set_value name="$resultValue" exact="$PropertyValue.isinhazardousregion"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isatnavigableposition'">
              <set_value name="$resultValue" exact="$PropertyValue.isatnavigableposition"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'accesslicence'">
              <set_value name="$resultValue" exact="$PropertyValue.accesslicence"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'accessrestricted'">
              <set_value name="$resultValue" exact="$PropertyValue.accessrestricted"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'canberecycled'">
              <set_value name="$resultValue" exact="$PropertyValue.canberecycled"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'dismantlingobject'">
              <set_value name="$resultValue" exact="$PropertyValue.dismantlingobject"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'salvageclaimants'">
              <set_value name="$resultValue" exact="$PropertyValue.salvageclaimants"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isdatavault'">
              <set_value name="$resultValue" exact="$PropertyValue.isdatavault"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'islandmark'">
              <set_value name="$resultValue" exact="$PropertyValue.islandmark"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isfriendfoe'">
              <set_value name="$resultValue" exact="$PropertyValue.isfriendfoe"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'friendlist'">
              <set_value name="$resultValue" exact="$PropertyValue.friendlist"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'foelist'">
              <set_value name="$resultValue" exact="$PropertyValue.foelist"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'target'">
              <set_value name="$resultValue" exact="$PropertyValue.target"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isarmed'">
              <set_value name="$resultValue" exact="$PropertyValue.isarmed"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'safetydistance'">
              <set_value name="$resultValue" exact="$PropertyValue.safetydistance"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'pilot'">
              <set_value name="$resultValue" exact="$PropertyValue.pilot"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'assignedpilot'">
              <set_value name="$resultValue" exact="$PropertyValue.assignedpilot"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'aipilot'">
              <set_value name="$resultValue" exact="$PropertyValue.aipilot"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'assignedaipilot'">
              <set_value name="$resultValue" exact="$PropertyValue.assignedaipilot"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'defencenpc'">
              <set_value name="$resultValue" exact="$PropertyValue.defencenpc"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'tradenpc'">
              <set_value name="$resultValue" exact="$PropertyValue.tradenpc"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'tradecomputer'">
              <set_value name="$resultValue" exact="$PropertyValue.tradecomputer"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'engineer'">
              <set_value name="$resultValue" exact="$PropertyValue.engineer"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'shiptrader'">
              <set_value name="$resultValue" exact="$PropertyValue.shiptrader"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'shadyguy'">
              <set_value name="$resultValue" exact="$PropertyValue.shadyguy"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'roleentities'">
              <set_value name="$resultValue" exact="$PropertyValue.roleentities"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isnpcassignmentrestricted'">
              <set_value name="$resultValue" exact="$PropertyValue.isnpcassignmentrestricted"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'order'">
              <set_value name="$resultValue" exact="$PropertyValue.order"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'nextorder'">
              <set_value name="$resultValue" exact="$PropertyValue.nextorder"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'defaultorder'">
              <set_value name="$resultValue" exact="$PropertyValue.defaultorder"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'orders'">
              <set_value name="$resultValue" exact="$PropertyValue.orders"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'buildorders'">
              <set_value name="$resultValue" exact="$PropertyValue.buildorders"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'tradeorders'">
              <set_value name="$resultValue" exact="$PropertyValue.tradeorders"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'hasorderloop'">
              <set_value name="$resultValue" exact="$PropertyValue.hasorderloop"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'commander'">
              <set_value name="$resultValue" exact="$PropertyValue.commander"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'toplevelcommander'">
              <set_value name="$resultValue" exact="$PropertyValue.toplevelcommander"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'assignment'">
              <set_value name="$resultValue" exact="$PropertyValue.assignment"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'commanderentity'">
              <set_value name="$resultValue" exact="$PropertyValue.commanderentity"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'activesubordinategroupids'">
              <set_value name="$resultValue" exact="$PropertyValue.activesubordinategroupids"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'subordinates'">
              <set_value name="$resultValue" exact="$PropertyValue.subordinates"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'subordinategroupdockoverride'">
              <set_value name="$resultValue" exact="$PropertyValue.subordinategroupdockoverride"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'subordinategroupid'">
              <set_value name="$resultValue" exact="$PropertyValue.subordinategroupid"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'subordinategroupprotectedsector'">
              <set_value name="$resultValue" exact="$PropertyValue.subordinategroupprotectedsector"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'subordinategroupprotectedposition'">
              <set_value name="$resultValue" exact="$PropertyValue.subordinategroupprotectedposition"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'subordinategroupreinforcefleet'">
              <set_value name="$resultValue" exact="$PropertyValue.subordinategroupreinforcefleet"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'subordinategroupresupplyatfleet'">
              <set_value name="$resultValue" exact="$PropertyValue.subordinategroupresupplyatfleet"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'subordinategroupattackonsight'">
              <set_value name="$resultValue" exact="$PropertyValue.subordinategroupattackonsight"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'allsubordinates'">
              <set_value name="$resultValue" exact="$PropertyValue.allsubordinates"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'allcommanders'">
              <set_value name="$resultValue" exact="$PropertyValue.allcommanders"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'controlroom'">
              <set_value name="$resultValue" exact="$PropertyValue.controlroom"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'haswalkableroom'">
              <set_value name="$resultValue" exact="$PropertyValue.haswalkableroom"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'canhavedynamicinterior'">
              <set_value name="$resultValue" exact="$PropertyValue.canhavedynamicinterior"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'hasscanner'">
              <set_value name="$resultValue" exact="$PropertyValue.hasscanner"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'longrange'">
              <set_value name="$resultValue" exact="$PropertyValue.longrange"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'maxscanlevel'">
              <set_value name="$resultValue" exact="$PropertyValue.maxscanlevel"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'combinedskill'">
              <set_value name="$resultValue" exact="$PropertyValue.combinedskill"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'iscapturable'">
              <set_value name="$resultValue" exact="$PropertyValue.iscapturable"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'boardingoperation'">
              <set_value name="$resultValue" exact="$PropertyValue.boardingoperation"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'boardingoperations'">
              <set_value name="$resultValue" exact="$PropertyValue.boardingoperations"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'boardingbehaviour'">
              <set_value name="$resultValue" exact="$PropertyValue.boardingbehaviour"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'allmarinesdispatched'">
              <set_value name="$resultValue" exact="$PropertyValue.allmarinesdispatched"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'boardingresistance'">
              <set_value name="$resultValue" exact="$PropertyValue.boardingresistance"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'baseboardingresistance'">
              <set_value name="$resultValue" exact="$PropertyValue.baseboardingresistance"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'boardingstrength'">
              <set_value name="$resultValue" exact="$PropertyValue.boardingstrength"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'constructionsequence'">
              <set_value name="$resultValue" exact="$PropertyValue.constructionsequence"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'defencedronemode'">
              <set_value name="$resultValue" exact="$PropertyValue.defencedronemode"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'loadoutlevel'">
              <set_value name="$resultValue" exact="$PropertyValue.loadoutlevel"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'rawloadoutlevel'">
              <set_value name="$resultValue" exact="$PropertyValue.rawloadoutlevel"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'minloadoutlevel'">
              <set_value name="$resultValue" exact="$PropertyValue.minloadoutlevel"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'loadoutvariation'">
              <set_value name="$resultValue" exact="$PropertyValue.loadoutvariation"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'loadout'">
              <set_value name="$resultValue" exact="$PropertyValue.loadout"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'hasarmeddefencedrones'">
              <set_value name="$resultValue" exact="$PropertyValue.hasarmeddefencedrones"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'hasarmedminingdrones'">
              <set_value name="$resultValue" exact="$PropertyValue.hasarmedminingdrones"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'hasarmedtransportdrones'">
              <set_value name="$resultValue" exact="$PropertyValue.hasarmedtransportdrones"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'miningdronemode'">
              <set_value name="$resultValue" exact="$PropertyValue.miningdronemode"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'transportdronemode'">
              <set_value name="$resultValue" exact="$PropertyValue.transportdronemode"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isenemylockingon'">
              <set_value name="$resultValue" exact="$PropertyValue.isenemylockingon"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'ismissileincoming'">
              <set_value name="$resultValue" exact="$PropertyValue.ismissileincoming"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'hasweaponmod'">
              <set_value name="$resultValue" exact="$PropertyValue.hasweaponmod"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'hasshieldmod'">
              <set_value name="$resultValue" exact="$PropertyValue.hasshieldmod"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'productions'">
              <set_value name="$resultValue" exact="$PropertyValue.productions"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'storagemodules'">
              <set_value name="$resultValue" exact="$PropertyValue.storagemodules"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'buildmodules'">
              <set_value name="$resultValue" exact="$PropertyValue.buildmodules"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'processingmodules'">
              <set_value name="$resultValue" exact="$PropertyValue.processingmodules"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'dockareas'">
              <set_value name="$resultValue" exact="$PropertyValue.dockareas"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'piers'">
              <set_value name="$resultValue" exact="$PropertyValue.piers"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'habitationmodules'">
              <set_value name="$resultValue" exact="$PropertyValue.habitationmodules"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'welfaremodules'">
              <set_value name="$resultValue" exact="$PropertyValue.welfaremodules"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'defencemodules'">
              <set_value name="$resultValue" exact="$PropertyValue.defencemodules"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'connectionmodules'">
              <set_value name="$resultValue" exact="$PropertyValue.connectionmodules"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'buildmodule'">
              <set_value name="$resultValue" exact="$PropertyValue.buildmodule"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'buildprocessor'">
              <set_value name="$resultValue" exact="$PropertyValue.buildprocessor"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'buildprocessors'">
              <set_value name="$resultValue" exact="$PropertyValue.buildprocessors"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'freebuildprocessor'">
              <set_value name="$resultValue" exact="$PropertyValue.freebuildprocessor"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'freebuildprocessors'">
              <set_value name="$resultValue" exact="$PropertyValue.freebuildprocessors"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'dismantletarget'">
              <set_value name="$resultValue" exact="$PropertyValue.dismantletarget"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isdismantlingassignedobject'">
              <set_value name="$resultValue" exact="$PropertyValue.isdismantlingassignedobject"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'claimedsalvage'">
              <set_value name="$resultValue" exact="$PropertyValue.claimedsalvage"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'haswaveprotection'">
              <set_value name="$resultValue" exact="$PropertyValue.haswaveprotection"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'hasmasstraffic'">
              <set_value name="$resultValue" exact="$PropertyValue.hasmasstraffic"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'buildingmodule'">
              <set_value name="$resultValue" exact="$PropertyValue.buildingmodule"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'buildingprocessor'">
              <set_value name="$resultValue" exact="$PropertyValue.buildingprocessor"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'build'">
              <set_value name="$resultValue" exact="$PropertyValue.build"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'buildanchor'">
              <set_value name="$resultValue" exact="$PropertyValue.buildanchor"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'canbuildships'">
              <set_value name="$resultValue" exact="$PropertyValue.canbuildships"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'canequipships'">
              <set_value name="$resultValue" exact="$PropertyValue.canequipships"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'cansupplyships'">
              <set_value name="$resultValue" exact="$PropertyValue.cansupplyships"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'hasplannedconstruction'">
              <set_value name="$resultValue" exact="$PropertyValue.hasplannedconstruction"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'cargo'">
              <set_value name="$resultValue" exact="$PropertyValue.cargo"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'products'">
              <set_value name="$resultValue" exact="$PropertyValue.products"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'research'">
              <set_value name="$resultValue" exact="$PropertyValue.research"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'dockingenabled'">
              <set_value name="$resultValue" exact="$PropertyValue.dockingenabled"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'originalproduct'">
              <set_value name="$resultValue" exact="$PropertyValue.originalproduct"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'resources'">
              <set_value name="$resultValue" exact="$PropertyValue.resources"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'supplyresources'">
              <set_value name="$resultValue" exact="$PropertyValue.supplyresources"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'tradewares'">
              <set_value name="$resultValue" exact="$PropertyValue.tradewares"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'buyprices'">
              <set_value name="$resultValue" exact="$PropertyValue.buyprices"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'sellprices'">
              <set_value name="$resultValue" exact="$PropertyValue.sellprices"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'buildbuyprices'">
              <set_value name="$resultValue" exact="$PropertyValue.buildbuyprices"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'buildsellprices'">
              <set_value name="$resultValue" exact="$PropertyValue.buildsellprices"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'waretransport'">
              <set_value name="$resultValue" exact="$PropertyValue.waretransport"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'productionmoney'">
              <set_value name="$resultValue" exact="$PropertyValue.productionmoney"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'wantedmoney'">
              <set_value name="$resultValue" exact="$PropertyValue.wantedmoney"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'istraderestricted'">
              <set_value name="$resultValue" exact="$PropertyValue.istraderestricted"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'hastradesubscription'">
              <set_value name="$resultValue" exact="$PropertyValue.hastradesubscription"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'haspermanenttradesubscription'">
              <set_value name="$resultValue" exact="$PropertyValue.haspermanenttradesubscription"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'supplies'">
              <set_value name="$resultValue" exact="$PropertyValue.supplies"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'supplyorders'">
              <set_value name="$resultValue" exact="$PropertyValue.supplyorders"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'money'">
              <set_value name="$resultValue" exact="$PropertyValue.money"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'hasownaccount'">
              <set_value name="$resultValue" exact="$PropertyValue.hasownaccount"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isaccountholder'">
              <set_value name="$resultValue" exact="$PropertyValue.isaccountholder"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'minbudget'">
              <set_value name="$resultValue" exact="$PropertyValue.minbudget"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'maxbudget'">
              <set_value name="$resultValue" exact="$PropertyValue.maxbudget"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'buildpricefactor'">
              <set_value name="$resultValue" exact="$PropertyValue.buildpricefactor"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'tradewaremoney'">
              <set_value name="$resultValue" exact="$PropertyValue.tradewaremoney"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'spawntime'">
              <set_value name="$resultValue" exact="$PropertyValue.spawntime"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'type'">
              <set_value name="$resultValue" exact="$PropertyValue.type"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'typename'">
              <set_value name="$resultValue" exact="$PropertyValue.typename"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'numfreeactorslots'">
              <set_value name="$resultValue" exact="$PropertyValue.numfreeactorslots"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'actors'">
              <set_value name="$resultValue" exact="$PropertyValue.actors"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'assigneddock'">
              <set_value name="$resultValue" exact="$PropertyValue.assigneddock"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'docksize'">
              <set_value name="$resultValue" exact="$PropertyValue.docksize"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'dock'">
              <set_value name="$resultValue" exact="$PropertyValue.dock"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'dockslot'">
              <set_value name="$resultValue" exact="$PropertyValue.dockslot"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'hidecargochance'">
              <set_value name="$resultValue" exact="$PropertyValue.hidecargochance"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'maxspeed'">
              <set_value name="$resultValue" exact="$PropertyValue.maxspeed"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'maxyawspeed'">
              <set_value name="$resultValue" exact="$PropertyValue.maxyawspeed"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'maxpitchspeed'">
              <set_value name="$resultValue" exact="$PropertyValue.maxpitchspeed"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'maxrollspeed'">
              <set_value name="$resultValue" exact="$PropertyValue.maxrollspeed"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'speedlimit'">
              <set_value name="$resultValue" exact="$PropertyValue.speedlimit"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'canenterhighway'">
              <set_value name="$resultValue" exact="$PropertyValue.canenterhighway"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'parkedat'">
              <set_value name="$resultValue" exact="$PropertyValue.parkedat"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'pickedupobject'">
              <set_value name="$resultValue" exact="$PropertyValue.pickedupobject"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'regiondamageprotection'">
              <set_value name="$resultValue" exact="$PropertyValue.regiondamageprotection"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'job'">
              <set_value name="$resultValue" exact="$PropertyValue.job"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'jobname'">
              <set_value name="$resultValue" exact="$PropertyValue.jobname"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isjobship'">
              <set_value name="$resultValue" exact="$PropertyValue.isjobship"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isrequestedjobship'">
              <set_value name="$resultValue" exact="$PropertyValue.isrequestedjobship"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'jobexpired'">
              <set_value name="$resultValue" exact="$PropertyValue.jobexpired"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'jobcommander'">
              <set_value name="$resultValue" exact="$PropertyValue.jobcommander"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'jobmainsector'">
              <set_value name="$resultValue" exact="$PropertyValue.jobmainsector"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'jobmainzone'">
              <set_value name="$resultValue" exact="$PropertyValue.jobmainzone"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'encounterid'">
              <set_value name="$resultValue" exact="$PropertyValue.encounterid"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isencountership'">
              <set_value name="$resultValue" exact="$PropertyValue.isencountership"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'warebasket'">
              <set_value name="$resultValue" exact="$PropertyValue.warebasket"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'constructionmodule'">
              <set_value name="$resultValue" exact="$PropertyValue.constructionmodule"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isdeployedconstructionvessel'">
              <set_value name="$resultValue" exact="$PropertyValue.isdeployedconstructionvessel"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'iscapitalship'">
              <set_value name="$resultValue" exact="$PropertyValue.iscapitalship"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'islasertower'">
              <set_value name="$resultValue" exact="$PropertyValue.islasertower"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'canhaveattackablemodules'">
              <set_value name="$resultValue" exact="$PropertyValue.canhaveattackablemodules"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'hasshipmod'">
              <set_value name="$resultValue" exact="$PropertyValue.hasshipmod"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'canbeclaimed'">
              <set_value name="$resultValue" exact="$PropertyValue.canbeclaimed"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'issupplyship'">
              <set_value name="$resultValue" exact="$PropertyValue.issupplyship"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'movementrefobject'">
              <set_value name="$resultValue" exact="$PropertyValue.movementrefobject"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'environment'">
              <set_value name="$resultValue" exact="$PropertyValue.environment"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'cantowobjects'">
              <set_value name="$resultValue" exact="$PropertyValue.cantowobjects"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'towedobject'">
              <set_value name="$resultValue" exact="$PropertyValue.towedobject"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'takesregiondamage'">
              <set_value name="$resultValue" exact="$PropertyValue.takesregiondamage"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'oxygenempty'">
              <set_value name="$resultValue" exact="$PropertyValue.oxygenempty"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'oxygenlow'">
              <set_value name="$resultValue" exact="$PropertyValue.oxygenlow"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'oxygenpercentage'">
              <set_value name="$resultValue" exact="$PropertyValue.oxygenpercentage"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'oxygentimeremaining'">
              <set_value name="$resultValue" exact="$PropertyValue.oxygentimeremaining"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'buildstorage'">
              <set_value name="$resultValue" exact="$PropertyValue.buildstorage"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'canhavebuildstorage'">
              <set_value name="$resultValue" exact="$PropertyValue.canhavebuildstorage"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'istradestation'">
              <set_value name="$resultValue" exact="$PropertyValue.istradestation"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isshipyard'">
              <set_value name="$resultValue" exact="$PropertyValue.isshipyard"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'iswharf'">
              <set_value name="$resultValue" exact="$PropertyValue.iswharf"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isequipmentdock'">
              <set_value name="$resultValue" exact="$PropertyValue.isequipmentdock"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isdefencestation'">
              <set_value name="$resultValue" exact="$PropertyValue.isdefencestation"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isrecyclingfacility'">
              <set_value name="$resultValue" exact="$PropertyValue.isrecyclingfacility"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'ispiratebase'">
              <set_value name="$resultValue" exact="$PropertyValue.ispiratebase"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isheadquarters'">
              <set_value name="$resultValue" exact="$PropertyValue.isheadquarters"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isfactionheadquarters'">
              <set_value name="$resultValue" exact="$PropertyValue.isfactionheadquarters"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isplannedshipyard'">
              <set_value name="$resultValue" exact="$PropertyValue.isplannedshipyard"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isplannedwharf'">
              <set_value name="$resultValue" exact="$PropertyValue.isplannedwharf"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isplannedequipmentdock'">
              <set_value name="$resultValue" exact="$PropertyValue.isplannedequipmentdock"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isplanneddefencestation'">
              <set_value name="$resultValue" exact="$PropertyValue.isplanneddefencestation"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isplannedrecyclingfacility'">
              <set_value name="$resultValue" exact="$PropertyValue.isplannedrecyclingfacility"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isscheduledfordeconstruction'">
              <set_value name="$resultValue" exact="$PropertyValue.isscheduledfordeconstruction"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isguided'">
              <set_value name="$resultValue" exact="$PropertyValue.isguided"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'destinations'">
              <set_value name="$resultValue" exact="$PropertyValue.destinations"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'istransitiondestination'">
              <set_value name="$resultValue" exact="$PropertyValue.istransitiondestination"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'istransitionsource'">
              <set_value name="$resultValue" exact="$PropertyValue.istransitionsource"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'launcher'">
              <set_value name="$resultValue" exact="$PropertyValue.launcher"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'destination'">
              <set_value name="$resultValue" exact="$PropertyValue.destination"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'exit'">
              <set_value name="$resultValue" exact="$PropertyValue.exit"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isaccelerator'">
              <set_value name="$resultValue" exact="$PropertyValue.isaccelerator"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'entryhighway'">
              <set_value name="$resultValue" exact="$PropertyValue.entryhighway"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'exithighway'">
              <set_value name="$resultValue" exact="$PropertyValue.exithighway"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'waitingship'">
              <set_value name="$resultValue" exact="$PropertyValue.waitingship"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'highway'">
              <set_value name="$resultValue" exact="$PropertyValue.highway"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'entry'">
              <set_value name="$resultValue" exact="$PropertyValue.entry"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'sequence'">
              <set_value name="$resultValue" exact="$PropertyValue.sequence"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'islocked'">
              <set_value name="$resultValue" exact="$PropertyValue.islocked"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'ispartiallyunlocked'">
              <set_value name="$resultValue" exact="$PropertyValue.ispartiallyunlocked"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isunlocked'">
              <set_value name="$resultValue" exact="$PropertyValue.isunlocked"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isadvanced'">
              <set_value name="$resultValue" exact="$PropertyValue.isadvanced"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'currentyield'">
              <set_value name="$resultValue" exact="$PropertyValue.currentyield"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'maxyield'">
              <set_value name="$resultValue" exact="$PropertyValue.maxyield"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'rarity'">
              <set_value name="$resultValue" exact="$PropertyValue.rarity"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'unbundle'">
              <set_value name="$resultValue" exact="$PropertyValue.unbundle"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isdroppedcontainer'">
              <set_value name="$resultValue" exact="$PropertyValue.isdroppedcontainer"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'blueprints'">
              <set_value name="$resultValue" exact="$PropertyValue.blueprints"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'base'">
              <set_value name="$resultValue" exact="$PropertyValue.base"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'ispersistent'">
              <set_value name="$resultValue" exact="$PropertyValue.ispersistent"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isprivate'">
              <set_value name="$resultValue" exact="$PropertyValue.isprivate"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'rooms'">
              <set_value name="$resultValue" exact="$PropertyValue.rooms"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isbusy'">
              <set_value name="$resultValue" exact="$PropertyValue.isbusy"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isbuilding'">
              <set_value name="$resultValue" exact="$PropertyValue.isbuilding"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'buildmacros'">
              <set_value name="$resultValue" exact="$PropertyValue.buildmacros"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'constructingcomponents'">
              <set_value name="$resultValue" exact="$PropertyValue.constructingcomponents"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'constructingmodule'">
              <set_value name="$resultValue" exact="$PropertyValue.constructingmodule"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'requiresconstructionvessel'">
              <set_value name="$resultValue" exact="$PropertyValue.requiresconstructionvessel"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'mayrequireconstructionvessel'">
              <set_value name="$resultValue" exact="$PropertyValue.mayrequireconstructionvessel"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'iswaitingforconstructionvessel'">
              <set_value name="$resultValue" exact="$PropertyValue.iswaitingforconstructionvessel"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'iswaitingforresources'">
              <set_value name="$resultValue" exact="$PropertyValue.iswaitingforresources"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'iswaitingforstorage'">
              <set_value name="$resultValue" exact="$PropertyValue.iswaitingforstorage"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'constructionvessel'">
              <set_value name="$resultValue" exact="$PropertyValue.constructionvessel"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'constructionvesseldeployed'">
              <set_value name="$resultValue" exact="$PropertyValue.constructionvesseldeployed"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'elapsedtime'">
              <set_value name="$resultValue" exact="$PropertyValue.elapsedtime"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'elapsedsteptime'">
              <set_value name="$resultValue" exact="$PropertyValue.elapsedsteptime"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'steptime'">
              <set_value name="$resultValue" exact="$PropertyValue.steptime"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'totaltime'">
              <set_value name="$resultValue" exact="$PropertyValue.totaltime"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'canabortbuild'">
              <set_value name="$resultValue" exact="$PropertyValue.canabortbuild"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'queuedbuild'">
              <set_value name="$resultValue" exact="$PropertyValue.queuedbuild"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'currentslotresources'">
              <set_value name="$resultValue" exact="$PropertyValue.currentslotresources"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'stepresources'">
              <set_value name="$resultValue" exact="$PropertyValue.stepresources"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'laststepresources'">
              <set_value name="$resultValue" exact="$PropertyValue.laststepresources"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'neededslotresources'">
              <set_value name="$resultValue" exact="$PropertyValue.neededslotresources"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'neededsequenceresources'">
              <set_value name="$resultValue" exact="$PropertyValue.neededsequenceresources"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'recycled'">
              <set_value name="$resultValue" exact="$PropertyValue.recycled"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isventuremodule'">
              <set_value name="$resultValue" exact="$PropertyValue.isventuremodule"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'venturedocks'">
              <set_value name="$resultValue" exact="$PropertyValue.venturedocks"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'ventureships'">
              <set_value name="$resultValue" exact="$PropertyValue.ventureships"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'numpierdocks'">
              <set_value name="$resultValue" exact="$PropertyValue.numpierdocks"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isproducing'">
              <set_value name="$resultValue" exact="$PropertyValue.isproducing"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'ispaused'">
              <set_value name="$resultValue" exact="$PropertyValue.ispaused"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'ispausedmanually'">
              <set_value name="$resultValue" exact="$PropertyValue.ispausedmanually"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'furnacestartpos'">
              <set_value name="$resultValue" exact="$PropertyValue.furnacestartpos"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'requireditems'">
              <set_value name="$resultValue" exact="$PropertyValue.requireditems"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'iswalkable'">
              <set_value name="$resultValue" exact="$PropertyValue.iswalkable"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'dockarea'">
              <set_value name="$resultValue" exact="$PropertyValue.dockarea"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'walkablemodule'">
              <set_value name="$resultValue" exact="$PropertyValue.walkablemodule"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'dynamicinterior'">
              <set_value name="$resultValue" exact="$PropertyValue.dynamicinterior"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'freemissionactorslot'">
              <set_value name="$resultValue" exact="$PropertyValue.freemissionactorslot"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'slotcontext'">
              <set_value name="$resultValue" exact="$PropertyValue.slotcontext"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'assignedship'">
              <set_value name="$resultValue" exact="$PropertyValue.assignedship"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'pier'">
              <set_value name="$resultValue" exact="$PropertyValue.pier"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'docked'">
              <set_value name="$resultValue" exact="$PropertyValue.docked"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'external'">
              <set_value name="$resultValue" exact="$PropertyValue.external"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isstorage'">
              <set_value name="$resultValue" exact="$PropertyValue.isstorage"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isdockingallowed'">
              <set_value name="$resultValue" exact="$PropertyValue.isdockingallowed"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isunitdockingallowed'">
              <set_value name="$resultValue" exact="$PropertyValue.isunitdockingallowed"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isundockingallowed'">
              <set_value name="$resultValue" exact="$PropertyValue.isundockingallowed"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isunitundockingallowed'">
              <set_value name="$resultValue" exact="$PropertyValue.isunitundockingallowed"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'todockpos'">
              <set_value name="$resultValue" exact="$PropertyValue.todockpos"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'launchpos'">
              <set_value name="$resultValue" exact="$PropertyValue.launchpos"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'dockstate'">
              <set_value name="$resultValue" exact="$PropertyValue.dockstate"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isbuildingallowed'">
              <set_value name="$resultValue" exact="$PropertyValue.isbuildingallowed"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'istradingallowed'">
              <set_value name="$resultValue" exact="$PropertyValue.istradingallowed"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isplayeronly'">
              <set_value name="$resultValue" exact="$PropertyValue.isplayeronly"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isventureronly'">
              <set_value name="$resultValue" exact="$PropertyValue.isventureronly"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'ventureplatform'">
              <set_value name="$resultValue" exact="$PropertyValue.ventureplatform"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'hasentrypos'">
              <set_value name="$resultValue" exact="$PropertyValue.hasentrypos"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'entrypos'">
              <set_value name="$resultValue" exact="$PropertyValue.entrypos"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'hasexitpos'">
              <set_value name="$resultValue" exact="$PropertyValue.hasexitpos"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'exitpos'">
              <set_value name="$resultValue" exact="$PropertyValue.exitpos"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'economy'">
              <set_value name="$resultValue" exact="$PropertyValue.economy"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'security'">
              <set_value name="$resultValue" exact="$PropertyValue.security"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'sunlight'">
              <set_value name="$resultValue" exact="$PropertyValue.sunlight"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'god'">
              <set_value name="$resultValue" exact="$PropertyValue.god"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'jobs'">
              <set_value name="$resultValue" exact="$PropertyValue.jobs"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isexclusiveforextensionjobs'">
              <set_value name="$resultValue" exact="$PropertyValue.isexclusiveforextensionjobs"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'factionlogic'">
              <set_value name="$resultValue" exact="$PropertyValue.factionlogic"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'locationtags'">
              <set_value name="$resultValue" exact="$PropertyValue.locationtags"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'alllocationtags'">
              <set_value name="$resultValue" exact="$PropertyValue.alllocationtags"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'yieldthresholds'">
              <set_value name="$resultValue" exact="$PropertyValue.yieldthresholds"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'representatives'">
              <set_value name="$resultValue" exact="$PropertyValue.representatives"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isnormalcluster'">
              <set_value name="$resultValue" exact="$PropertyValue.isnormalcluster"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'ispresentation'">
              <set_value name="$resultValue" exact="$PropertyValue.ispresentation"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'systemid'">
              <set_value name="$resultValue" exact="$PropertyValue.systemid"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'planets'">
              <set_value name="$resultValue" exact="$PropertyValue.planets"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'averagedistancetolockbox'">
              <set_value name="$resultValue" exact="$PropertyValue.averagedistancetolockbox"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'averagemaxyield'">
              <set_value name="$resultValue" exact="$PropertyValue.averagemaxyield"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'iscontested'">
              <set_value name="$resultValue" exact="$PropertyValue.iscontested"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'contestingfactions'">
              <set_value name="$resultValue" exact="$PropertyValue.contestingfactions"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'hasgravidarobscuringregion'">
              <set_value name="$resultValue" exact="$PropertyValue.hasgravidarobscuringregion"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'hashazardousregion'">
              <set_value name="$resultValue" exact="$PropertyValue.hashazardousregion"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'containsthewave'">
              <set_value name="$resultValue" exact="$PropertyValue.containsthewave"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'waveprotectionresources'">
              <set_value name="$resultValue" exact="$PropertyValue.waveprotectionresources"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'policefaction'">
              <set_value name="$resultValue" exact="$PropertyValue.policefaction"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'typicallockboxmacro'">
              <set_value name="$resultValue" exact="$PropertyValue.typicallockboxmacro"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'coreposition'">
              <set_value name="$resultValue" exact="$PropertyValue.coreposition"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'coresize'">
              <set_value name="$resultValue" exact="$PropertyValue.coresize"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'adjacentzones'">
              <set_value name="$resultValue" exact="$PropertyValue.adjacentzones"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'haspriority'">
              <set_value name="$resultValue" exact="$PropertyValue.haspriority"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'istempzone'">
              <set_value name="$resultValue" exact="$PropertyValue.istempzone"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isnormalzone'">
              <set_value name="$resultValue" exact="$PropertyValue.isnormalzone"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'islocalhighway'">
              <set_value name="$resultValue" exact="$PropertyValue.islocalhighway"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'issuperhighway'">
              <set_value name="$resultValue" exact="$PropertyValue.issuperhighway"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isdisabled'">
              <set_value name="$resultValue" exact="$PropertyValue.isdisabled"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'origin'">
              <set_value name="$resultValue" exact="$PropertyValue.origin"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'junctions'">
              <set_value name="$resultValue" exact="$PropertyValue.junctions"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'entryjumpgate'">
              <set_value name="$resultValue" exact="$PropertyValue.entryjumpgate"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'exitjumpgate'">
              <set_value name="$resultValue" exact="$PropertyValue.exitjumpgate"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'closestpointtoplayer'">
              <set_value name="$resultValue" exact="$PropertyValue.closestpointtoplayer"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'customhandler'">
              <set_value name="$resultValue" exact="$PropertyValue.customhandler"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'controlpost'">
              <set_value name="$resultValue" exact="$PropertyValue.controlpost"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'role'">
              <set_value name="$resultValue" exact="$PropertyValue.role"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'roleobject'">
              <set_value name="$resultValue" exact="$PropertyValue.roleobject"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'titleoverride'">
              <set_value name="$resultValue" exact="$PropertyValue.titleoverride"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'iconoverride'">
              <set_value name="$resultValue" exact="$PropertyValue.iconoverride"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'occupationname'">
              <set_value name="$resultValue" exact="$PropertyValue.occupationname"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'icon'">
              <set_value name="$resultValue" exact="$PropertyValue.icon"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'race'">
              <set_value name="$resultValue" exact="$PropertyValue.race"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'page'">
              <set_value name="$resultValue" exact="$PropertyValue.page"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isfemale'">
              <set_value name="$resultValue" exact="$PropertyValue.isfemale"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isavatar'">
              <set_value name="$resultValue" exact="$PropertyValue.isavatar"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'iscommable'">
              <set_value name="$resultValue" exact="$PropertyValue.iscommable"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'ismissionactor'">
              <set_value name="$resultValue" exact="$PropertyValue.ismissionactor"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isremotecommable'">
              <set_value name="$resultValue" exact="$PropertyValue.isremotecommable"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'iscontrolentity'">
              <set_value name="$resultValue" exact="$PropertyValue.iscontrolentity"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isintransit'">
              <set_value name="$resultValue" exact="$PropertyValue.isintransit"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'istransferscheduled'">
              <set_value name="$resultValue" exact="$PropertyValue.istransferscheduled"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'istemporary'">
              <set_value name="$resultValue" exact="$PropertyValue.istemporary"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'ishidden'">
              <set_value name="$resultValue" exact="$PropertyValue.ishidden"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'podarrivaltime'">
              <set_value name="$resultValue" exact="$PropertyValue.podarrivaltime"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'roomslot'">
              <set_value name="$resultValue" exact="$PropertyValue.roomslot"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'floortags'">
              <set_value name="$resultValue" exact="$PropertyValue.floortags"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'iswalking'">
              <set_value name="$resultValue" exact="$PropertyValue.iswalking"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'slowwalkspeed'">
              <set_value name="$resultValue" exact="$PropertyValue.slowwalkspeed"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'walkspeed'">
              <set_value name="$resultValue" exact="$PropertyValue.walkspeed"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'runspeed'">
              <set_value name="$resultValue" exact="$PropertyValue.runspeed"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isspeaking'">
              <set_value name="$resultValue" exact="$PropertyValue.isspeaking"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isinspeakrange'">
              <set_value name="$resultValue" exact="$PropertyValue.isinspeakrange"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'lastspeaktime'">
              <set_value name="$resultValue" exact="$PropertyValue.lastspeaktime"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'experienceprogress'">
              <set_value name="$resultValue" exact="$PropertyValue.experienceprogress"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'neededexperience'">
              <set_value name="$resultValue" exact="$PropertyValue.neededexperience"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'controlled'">
              <set_value name="$resultValue" exact="$PropertyValue.controlled"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'assignedcontrolled'">
              <set_value name="$resultValue" exact="$PropertyValue.assignedcontrolled"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'spacesuit'">
              <set_value name="$resultValue" exact="$PropertyValue.spacesuit"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'spacesuitmacro'">
              <set_value name="$resultValue" exact="$PropertyValue.spacesuitmacro"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'inventory'">
              <set_value name="$resultValue" exact="$PropertyValue.inventory"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'stock'">
              <set_value name="$resultValue" exact="$PropertyValue.stock"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'shouldinformplayer'">
              <set_value name="$resultValue" exact="$PropertyValue.shouldinformplayer"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'shouldwarnplayer'">
              <set_value name="$resultValue" exact="$PropertyValue.shouldwarnplayer"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'istradecomputer'">
              <set_value name="$resultValue" exact="$PropertyValue.istradecomputer"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isshadyguy'">
              <set_value name="$resultValue" exact="$PropertyValue.isshadyguy"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isindependent'">
              <set_value name="$resultValue" exact="$PropertyValue.isindependent"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'tradesvisible'">
              <set_value name="$resultValue" exact="$PropertyValue.tradesvisible"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'facecutscene'">
              <set_value name="$resultValue" exact="$PropertyValue.facecutscene"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'npctemplate'">
              <set_value name="$resultValue" exact="$PropertyValue.npctemplate"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'targetslot'">
              <set_value name="$resultValue" exact="$PropertyValue.targetslot"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'currentchair'">
              <set_value name="$resultValue" exact="$PropertyValue.currentchair"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'hasclothingmod'">
              <set_value name="$resultValue" exact="$PropertyValue.hasclothingmod"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'hastool'">
              <set_value name="$resultValue" exact="$PropertyValue.hastool"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isinconversation'">
              <set_value name="$resultValue" exact="$PropertyValue.isinconversation"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isreadytofire'">
              <set_value name="$resultValue" exact="$PropertyValue.isreadytofire"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'mode'">
              <set_value name="$resultValue" exact="$PropertyValue.mode"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isrepairing'">
              <set_value name="$resultValue" exact="$PropertyValue.isrepairing"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'ismining'">
              <set_value name="$resultValue" exact="$PropertyValue.ismining"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'iscombat'">
              <set_value name="$resultValue" exact="$PropertyValue.iscombat"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'barrelposition'">
              <set_value name="$resultValue" exact="$PropertyValue.barrelposition"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'component'">
              <set_value name="$resultValue" exact="$PropertyValue.component"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'tags'">
              <set_value name="$resultValue" exact="$PropertyValue.tags"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'group'">
              <set_value name="$resultValue" exact="$PropertyValue.group"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'offset'">
              <set_value name="$resultValue" exact="$PropertyValue.offset"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'staticoffset'">
              <set_value name="$resultValue" exact="$PropertyValue.staticoffset"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'staticrotation'">
              <set_value name="$resultValue" exact="$PropertyValue.staticrotation"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'controlposition'">
              <set_value name="$resultValue" exact="$PropertyValue.controlposition"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'available'">
              <set_value name="$resultValue" exact="$PropertyValue.available"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'buyer'">
              <set_value name="$resultValue" exact="$PropertyValue.buyer"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'seller'">
              <set_value name="$resultValue" exact="$PropertyValue.seller"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isbuyoffer'">
              <set_value name="$resultValue" exact="$PropertyValue.isbuyoffer"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isselloffer'">
              <set_value name="$resultValue" exact="$PropertyValue.isselloffer"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isoffer'">
              <set_value name="$resultValue" exact="$PropertyValue.isoffer"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isorder'">
              <set_value name="$resultValue" exact="$PropertyValue.isorder"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'ware'">
              <set_value name="$resultValue" exact="$PropertyValue.ware"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'amount'">
              <set_value name="$resultValue" exact="$PropertyValue.amount"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'desiredamount'">
              <set_value name="$resultValue" exact="$PropertyValue.desiredamount"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'offeramount'">
              <set_value name="$resultValue" exact="$PropertyValue.offeramount"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'minamount'">
              <set_value name="$resultValue" exact="$PropertyValue.minamount"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'transferredamount'">
              <set_value name="$resultValue" exact="$PropertyValue.transferredamount"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'destroyedamount'">
              <set_value name="$resultValue" exact="$PropertyValue.destroyedamount"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'volume'">
              <set_value name="$resultValue" exact="$PropertyValue.volume"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'offervolume'">
              <set_value name="$resultValue" exact="$PropertyValue.offervolume"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'minvolume'">
              <set_value name="$resultValue" exact="$PropertyValue.minvolume"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'price'">
              <set_value name="$resultValue" exact="$PropertyValue.price"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'unitprice'">
              <set_value name="$resultValue" exact="$PropertyValue.unitprice"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'minprice'">
              <set_value name="$resultValue" exact="$PropertyValue.minprice"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'relativeprice'">
              <set_value name="$resultValue" exact="$PropertyValue.relativeprice"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'quantityfactor'">
              <set_value name="$resultValue" exact="$PropertyValue.quantityfactor"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'hasdynamicprice'">
              <set_value name="$resultValue" exact="$PropertyValue.hasdynamicprice"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'stocklevel'">
              <set_value name="$resultValue" exact="$PropertyValue.stocklevel"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'bundle'">
              <set_value name="$resultValue" exact="$PropertyValue.bundle"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'tradeoffer'">
              <set_value name="$resultValue" exact="$PropertyValue.tradeoffer"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'buyfree'">
              <set_value name="$resultValue" exact="$PropertyValue.buyfree"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'sellfree'">
              <set_value name="$resultValue" exact="$PropertyValue.sellfree"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'iswareexchange'">
              <set_value name="$resultValue" exact="$PropertyValue.iswareexchange"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isshiptoship'">
              <set_value name="$resultValue" exact="$PropertyValue.isshiptoship"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'iscrewexchange'">
              <set_value name="$resultValue" exact="$PropertyValue.iscrewexchange"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isbuyerpassive'">
              <set_value name="$resultValue" exact="$PropertyValue.isbuyerpassive"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'issellerpassive'">
              <set_value name="$resultValue" exact="$PropertyValue.issellerpassive"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'iscancelled'">
              <set_value name="$resultValue" exact="$PropertyValue.iscancelled"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isshipbuild'">
              <set_value name="$resultValue" exact="$PropertyValue.isshipbuild"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isrecycleshipbuild'">
              <set_value name="$resultValue" exact="$PropertyValue.isrecycleshipbuild"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isexpansion'">
              <set_value name="$resultValue" exact="$PropertyValue.isexpansion"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isupgrade'">
              <set_value name="$resultValue" exact="$PropertyValue.isupgrade"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'issoftwareonlyupgrade'">
              <set_value name="$resultValue" exact="$PropertyValue.issoftwareonlyupgrade"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isrestock'">
              <set_value name="$resultValue" exact="$PropertyValue.isrestock"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isshipmodification'">
              <set_value name="$resultValue" exact="$PropertyValue.isshipmodification"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isprocessing'">
              <set_value name="$resultValue" exact="$PropertyValue.isprocessing"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'buildobject'">
              <set_value name="$resultValue" exact="$PropertyValue.buildobject"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'construction'">
              <set_value name="$resultValue" exact="$PropertyValue.construction"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'faction'">
              <set_value name="$resultValue" exact="$PropertyValue.faction"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'time'">
              <set_value name="$resultValue" exact="$PropertyValue.time"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'consumables'">
              <set_value name="$resultValue" exact="$PropertyValue.consumables"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'boardee'">
              <set_value name="$resultValue" exact="$PropertyValue.boardee"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'attackers'">
              <set_value name="$resultValue" exact="$PropertyValue.attackers"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'approachingpods'">
              <set_value name="$resultValue" exact="$PropertyValue.approachingpods"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'boardingphase'">
              <set_value name="$resultValue" exact="$PropertyValue.boardingphase"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'boardingapproachthreshold'">
              <set_value name="$resultValue" exact="$PropertyValue.boardingapproachthreshold"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'boardinginsertionthreshold'">
              <set_value name="$resultValue" exact="$PropertyValue.boardinginsertionthreshold"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'description'">
              <set_value name="$resultValue" exact="$PropertyValue.description"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'minrelation'">
              <set_value name="$resultValue" exact="$PropertyValue.minrelation"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'precursor'">
              <set_value name="$resultValue" exact="$PropertyValue.precursor"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'issellable'">
              <set_value name="$resultValue" exact="$PropertyValue.issellable"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'count'">
              <set_value name="$resultValue" exact="$PropertyValue.count"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'list'">
              <set_value name="$resultValue" exact="$PropertyValue.list"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'random'">
              <set_value name="$resultValue" exact="$PropertyValue.random"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'id'">
              <set_value name="$resultValue" exact="$PropertyValue.id"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'script'">
              <set_value name="$resultValue" exact="$PropertyValue.script"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'canplayercancel'">
              <set_value name="$resultValue" exact="$PropertyValue.canplayercancel"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isinfinite'">
              <set_value name="$resultValue" exact="$PropertyValue.isinfinite"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isinloop'">
              <set_value name="$resultValue" exact="$PropertyValue.isinloop"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isoverride'">
              <set_value name="$resultValue" exact="$PropertyValue.isoverride"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isrunning'">
              <set_value name="$resultValue" exact="$PropertyValue.isrunning"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'trade'">
              <set_value name="$resultValue" exact="$PropertyValue.trade"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'operation'">
              <set_value name="$resultValue" exact="$PropertyValue.operation"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'requiredskill'">
              <set_value name="$resultValue" exact="$PropertyValue.requiredskill"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'clone'">
              <set_value name="$resultValue" exact="$PropertyValue.clone"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'last'">
              <set_value name="$resultValue" exact="$PropertyValue.last"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'randominrange'">
              <set_value name="$resultValue" exact="$PropertyValue.randominrange"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'min'">
              <set_value name="$resultValue" exact="$PropertyValue.min"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'max'">
              <set_value name="$resultValue" exact="$PropertyValue.max"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'average'">
              <set_value name="$resultValue" exact="$PropertyValue.average"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'x'">
              <set_value name="$resultValue" exact="$PropertyValue.x"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'y'">
              <set_value name="$resultValue" exact="$PropertyValue.y"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'z'">
              <set_value name="$resultValue" exact="$PropertyValue.z"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'yaw'">
              <set_value name="$resultValue" exact="$PropertyValue.yaw"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'pitch'">
              <set_value name="$resultValue" exact="$PropertyValue.pitch"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'roll'">
              <set_value name="$resultValue" exact="$PropertyValue.roll"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'inverse'">
              <set_value name="$resultValue" exact="$PropertyValue.inverse"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'forward'">
              <set_value name="$resultValue" exact="$PropertyValue.forward"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'right'">
              <set_value name="$resultValue" exact="$PropertyValue.right"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'up'">
              <set_value name="$resultValue" exact="$PropertyValue.up"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'shortname'">
              <set_value name="$resultValue" exact="$PropertyValue.shortname"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'prefixname'">
              <set_value name="$resultValue" exact="$PropertyValue.prefixname"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'spacename'">
              <set_value name="$resultValue" exact="$PropertyValue.spacename"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'homespacename'">
              <set_value name="$resultValue" exact="$PropertyValue.homespacename"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'primaryrace'">
              <set_value name="$resultValue" exact="$PropertyValue.primaryrace"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'knowntoplayer'">
              <set_value name="$resultValue" exact="$PropertyValue.knowntoplayer"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'defaultpolicefaction'">
              <set_value name="$resultValue" exact="$PropertyValue.defaultpolicefaction"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'coalition'">
              <set_value name="$resultValue" exact="$PropertyValue.coalition"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'teamname'">
              <set_value name="$resultValue" exact="$PropertyValue.teamname"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'customteamname'">
              <set_value name="$resultValue" exact="$PropertyValue.customteamname"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isrelationlocked'">
              <set_value name="$resultValue" exact="$PropertyValue.isrelationlocked"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'licences'">
              <set_value name="$resultValue" exact="$PropertyValue.licences"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'heldlicences'">
              <set_value name="$resultValue" exact="$PropertyValue.heldlicences"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isaggressive'">
              <set_value name="$resultValue" exact="$PropertyValue.isaggressive"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'iseconomic'">
              <set_value name="$resultValue" exact="$PropertyValue.iseconomic"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'ispolice'">
              <set_value name="$resultValue" exact="$PropertyValue.ispolice"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isprotective'">
              <set_value name="$resultValue" exact="$PropertyValue.isprotective"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'willclaimspace'">
              <set_value name="$resultValue" exact="$PropertyValue.willclaimspace"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'representative'">
              <set_value name="$resultValue" exact="$PropertyValue.representative"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'headquarters'">
              <set_value name="$resultValue" exact="$PropertyValue.headquarters"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'doesresupply'">
              <set_value name="$resultValue" exact="$PropertyValue.doesresupply"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'averageprice'">
              <set_value name="$resultValue" exact="$PropertyValue.averageprice"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'maxprice'">
              <set_value name="$resultValue" exact="$PropertyValue.maxprice"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'pricerange'">
              <set_value name="$resultValue" exact="$PropertyValue.pricerange"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'transporttag'">
              <set_value name="$resultValue" exact="$PropertyValue.transporttag"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isinventory'">
              <set_value name="$resultValue" exact="$PropertyValue.isinventory"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isammo'">
              <set_value name="$resultValue" exact="$PropertyValue.isammo"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'iscargo'">
              <set_value name="$resultValue" exact="$PropertyValue.iscargo"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'iscrafting'">
              <set_value name="$resultValue" exact="$PropertyValue.iscrafting"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isvolatile'">
              <set_value name="$resultValue" exact="$PropertyValue.isvolatile"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isgift'">
              <set_value name="$resultValue" exact="$PropertyValue.isgift"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'israre'">
              <set_value name="$resultValue" exact="$PropertyValue.israre"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isdropallowed'">
              <set_value name="$resultValue" exact="$PropertyValue.isdropallowed"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isresearchable'">
              <set_value name="$resultValue" exact="$PropertyValue.isresearchable"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'illegal'">
              <set_value name="$resultValue" exact="$PropertyValue.illegal"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'objectmacro'">
              <set_value name="$resultValue" exact="$PropertyValue.objectmacro"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'objectcount'">
              <set_value name="$resultValue" exact="$PropertyValue.objectcount"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'issoftware'">
              <set_value name="$resultValue" exact="$PropertyValue.issoftware"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isweaponmod'">
              <set_value name="$resultValue" exact="$PropertyValue.isweaponmod"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isenginemod'">
              <set_value name="$resultValue" exact="$PropertyValue.isenginemod"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isshieldmod'">
              <set_value name="$resultValue" exact="$PropertyValue.isshieldmod"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isshipmod'">
              <set_value name="$resultValue" exact="$PropertyValue.isshipmod"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isequipmentmod'">
              <set_value name="$resultValue" exact="$PropertyValue.isequipmentmod"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'equipmentmodquality'">
              <set_value name="$resultValue" exact="$PropertyValue.equipmentmodquality"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'ispaintmod'">
              <set_value name="$resultValue" exact="$PropertyValue.ispaintmod"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'paintmodquality'">
              <set_value name="$resultValue" exact="$PropertyValue.paintmodquality"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isclothingmod'">
              <set_value name="$resultValue" exact="$PropertyValue.isclothingmod"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'clothingmodquality'">
              <set_value name="$resultValue" exact="$PropertyValue.clothingmodquality"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isprocessed'">
              <set_value name="$resultValue" exact="$PropertyValue.isprocessed"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'table'">
              <set_value name="$resultValue" exact="$PropertyValue.table"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'free'">
              <set_value name="$resultValue" exact="$PropertyValue.free"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'capacity'">
              <set_value name="$resultValue" exact="$PropertyValue.capacity"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'purposemacro'">
              <set_value name="$resultValue" exact="$PropertyValue.purposemacro"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'purposename'">
              <set_value name="$resultValue" exact="$PropertyValue.purposename"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'docksizes'">
              <set_value name="$resultValue" exact="$PropertyValue.docksizes"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'productionvolume'">
              <set_value name="$resultValue" exact="$PropertyValue.productionvolume"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'consumptionvolume'">
              <set_value name="$resultValue" exact="$PropertyValue.consumptionvolume"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'cargocapacity'">
              <set_value name="$resultValue" exact="$PropertyValue.cargocapacity"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'allowedowners'">
              <set_value name="$resultValue" exact="$PropertyValue.allowedowners"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'allowedwares'">
              <set_value name="$resultValue" exact="$PropertyValue.allowedwares"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'maxrelation'">
              <set_value name="$resultValue" exact="$PropertyValue.maxrelation"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'enemy'">
              <set_value name="$resultValue" exact="$PropertyValue.enemy"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'active'">
              <set_value name="$resultValue" exact="$PropertyValue.active"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'version'">
              <set_value name="$resultValue" exact="$PropertyValue.version"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'static'">
              <set_value name="$resultValue" exact="$PropertyValue.static"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'staticbase'">
              <set_value name="$resultValue" exact="$PropertyValue.staticbase"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'namespace'">
              <set_value name="$resultValue" exact="$PropertyValue.namespace"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'library'">
              <set_value name="$resultValue" exact="$PropertyValue.library"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isinstance'">
              <set_value name="$resultValue" exact="$PropertyValue.isinstance"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'hasmissionoffer'">
              <set_value name="$resultValue" exact="$PropertyValue.hasmissionoffer"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'hasmission'">
              <set_value name="$resultValue" exact="$PropertyValue.hasmission"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'hasguidance'">
              <set_value name="$resultValue" exact="$PropertyValue.hasguidance"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'offerlocations'">
              <set_value name="$resultValue" exact="$PropertyValue.offerlocations"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'missiontype'">
              <set_value name="$resultValue" exact="$PropertyValue.missiontype"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'missionendtime'">
              <set_value name="$resultValue" exact="$PropertyValue.missionendtime"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'objective'">
              <set_value name="$resultValue" exact="$PropertyValue.objective"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'objectiveendtime'">
              <set_value name="$resultValue" exact="$PropertyValue.objectiveendtime"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'actor'">
              <set_value name="$resultValue" exact="$PropertyValue.actor"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isnumeric'">
              <set_value name="$resultValue" exact="$PropertyValue.isnumeric"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isstring'">
              <set_value name="$resultValue" exact="$PropertyValue.isstring"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'femalename'">
              <set_value name="$resultValue" exact="$PropertyValue.femalename"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'pluralname'">
              <set_value name="$resultValue" exact="$PropertyValue.pluralname"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'tag'">
              <set_value name="$resultValue" exact="$PropertyValue.tag"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'hirable'">
              <set_value name="$resultValue" exact="$PropertyValue.hirable"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'tiers'">
              <set_value name="$resultValue" exact="$PropertyValue.tiers"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'skilltypes'">
              <set_value name="$resultValue" exact="$PropertyValue.skilltypes"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'maxmk'">
              <set_value name="$resultValue" exact="$PropertyValue.maxmk"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'age'">
              <set_value name="$resultValue" exact="$PropertyValue.age"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'occupiedship'">
              <set_value name="$resultValue" exact="$PropertyValue.occupiedship"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'platform'">
              <set_value name="$resultValue" exact="$PropertyValue.platform"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'entity'">
              <set_value name="$resultValue" exact="$PropertyValue.entity"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'galaxy'">
              <set_value name="$resultValue" exact="$PropertyValue.galaxy"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'computer'">
              <set_value name="$resultValue" exact="$PropertyValue.computer"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'activity'">
              <set_value name="$resultValue" exact="$PropertyValue.activity"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'autopilottarget'">
              <set_value name="$resultValue" exact="$PropertyValue.autopilottarget"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'conversation'">
              <set_value name="$resultValue" exact="$PropertyValue.conversation"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'conversationactor'">
              <set_value name="$resultValue" exact="$PropertyValue.conversationactor"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'hasactivemission'">
              <set_value name="$resultValue" exact="$PropertyValue.hasactivemission"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'activemissiontype'">
              <set_value name="$resultValue" exact="$PropertyValue.activemissiontype"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'activemissionwaypoint'">
              <set_value name="$resultValue" exact="$PropertyValue.activemissionwaypoint"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'hasacceptedonlinemission'">
              <set_value name="$resultValue" exact="$PropertyValue.hasacceptedonlinemission"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isincontrolposition'">
              <set_value name="$resultValue" exact="$PropertyValue.isincontrolposition"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'scanlevel'">
              <set_value name="$resultValue" exact="$PropertyValue.scanlevel"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'debug'">
              <set_value name="$resultValue" exact="$PropertyValue.debug"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isscreenshotmode'">
              <set_value name="$resultValue" exact="$PropertyValue.isscreenshotmode"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'screenshotmode'">
              <set_value name="$resultValue" exact="$PropertyValue.screenshotmode"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'ismapeditoractive'">
              <set_value name="$resultValue" exact="$PropertyValue.ismapeditoractive"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isinfullscreencutscene'">
              <set_value name="$resultValue" exact="$PropertyValue.isinfullscreencutscene"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isinfullscreenmenu'">
              <set_value name="$resultValue" exact="$PropertyValue.isinfullscreenmenu"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isvrversion'">
              <set_value name="$resultValue" exact="$PropertyValue.isvrversion"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isvrmode'">
              <set_value name="$resultValue" exact="$PropertyValue.isvrmode"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'chardensity'">
              <set_value name="$resultValue" exact="$PropertyValue.chardensity"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'modulename'">
              <set_value name="$resultValue" exact="$PropertyValue.modulename"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'moduledescription'">
              <set_value name="$resultValue" exact="$PropertyValue.moduledescription"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'speakpriority'">
              <set_value name="$resultValue" exact="$PropertyValue.speakpriority"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'flightassist'">
              <set_value name="$resultValue" exact="$PropertyValue.flightassist"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isdockuiactive'">
              <set_value name="$resultValue" exact="$PropertyValue.isdockuiactive"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'hasemergencyeject'">
              <set_value name="$resultValue" exact="$PropertyValue.hasemergencyeject"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isemergencyejectactive'">
              <set_value name="$resultValue" exact="$PropertyValue.isemergencyejectactive"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'shouldplayertaxiwaitforplayer'">
              <set_value name="$resultValue" exact="$PropertyValue.shouldplayertaxiwaitforplayer"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'shouldplayershipswaitforplayer'">
              <set_value name="$resultValue" exact="$PropertyValue.shouldplayershipswaitforplayer"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isonline'">
              <set_value name="$resultValue" exact="$PropertyValue.isonline"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'canactivateliveview'">
              <set_value name="$resultValue" exact="$PropertyValue.canactivateliveview"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'recommendedmodule'">
              <set_value name="$resultValue" exact="$PropertyValue.recommendedmodule"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isgameover'">
              <set_value name="$resultValue" exact="$PropertyValue.isgameover"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'index'">
              <set_value name="$resultValue" exact="$PropertyValue.index"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'element'">
              <set_value name="$resultValue" exact="$PropertyValue.element"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'key'">
              <set_value name="$resultValue" exact="$PropertyValue.key"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'null'">
              <set_value name="$resultValue" exact="$PropertyValue.null"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'integer'">
              <set_value name="$resultValue" exact="$PropertyValue.integer"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'largeint'">
              <set_value name="$resultValue" exact="$PropertyValue.largeint"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'float'">
              <set_value name="$resultValue" exact="$PropertyValue.float"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'angle'">
              <set_value name="$resultValue" exact="$PropertyValue.angle"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'hitpoints'">
              <set_value name="$resultValue" exact="$PropertyValue.hitpoints"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'largefloat'">
              <set_value name="$resultValue" exact="$PropertyValue.largefloat"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'cue'">
              <set_value name="$resultValue" exact="$PropertyValue.cue"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'keyword'">
              <set_value name="$resultValue" exact="$PropertyValue.keyword"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'xmlkeyword'">
              <set_value name="$resultValue" exact="$PropertyValue.xmlkeyword"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'componentstate'">
              <set_value name="$resultValue" exact="$PropertyValue.componentstate"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'killmethod'">
              <set_value name="$resultValue" exact="$PropertyValue.killmethod"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'relationchangereason'">
              <set_value name="$resultValue" exact="$PropertyValue.relationchangereason"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'flightbehaviour'">
              <set_value name="$resultValue" exact="$PropertyValue.flightbehaviour"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'flightcontrolmodel'">
              <set_value name="$resultValue" exact="$PropertyValue.flightcontrolmodel"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'entitytype'">
              <set_value name="$resultValue" exact="$PropertyValue.entitytype"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'entityrole'">
              <set_value name="$resultValue" exact="$PropertyValue.entityrole"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'skilltype'">
              <set_value name="$resultValue" exact="$PropertyValue.skilltype"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'missiongroup'">
              <set_value name="$resultValue" exact="$PropertyValue.missiongroup"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'level'">
              <set_value name="$resultValue" exact="$PropertyValue.level"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'alertlevel'">
              <set_value name="$resultValue" exact="$PropertyValue.alertlevel"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'command'">
              <set_value name="$resultValue" exact="$PropertyValue.command"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'commandaction'">
              <set_value name="$resultValue" exact="$PropertyValue.commandaction"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'roompopulationtype'">
              <set_value name="$resultValue" exact="$PropertyValue.roompopulationtype"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'purpose'">
              <set_value name="$resultValue" exact="$PropertyValue.purpose"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'controlpaneltype'">
              <set_value name="$resultValue" exact="$PropertyValue.controlpaneltype"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'signalleaktype'">
              <set_value name="$resultValue" exact="$PropertyValue.signalleaktype"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'blacklisttype'">
              <set_value name="$resultValue" exact="$PropertyValue.blacklisttype"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'blacklistgroup'">
              <set_value name="$resultValue" exact="$PropertyValue.blacklistgroup"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'moodlevel'">
              <set_value name="$resultValue" exact="$PropertyValue.moodlevel"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'orderstate'">
              <set_value name="$resultValue" exact="$PropertyValue.orderstate"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'datatype'">
              <set_value name="$resultValue" exact="$PropertyValue.datatype"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'cuestate'">
              <set_value name="$resultValue" exact="$PropertyValue.cuestate"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'notification'">
              <set_value name="$resultValue" exact="$PropertyValue.notification"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'string'">
              <set_value name="$resultValue" exact="$PropertyValue.string"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'componentslot'">
              <set_value name="$resultValue" exact="$PropertyValue.componentslot"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'licence'">
              <set_value name="$resultValue" exact="$PropertyValue.licence"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'vector'">
              <set_value name="$resultValue" exact="$PropertyValue.vector"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'quadrant'">
              <set_value name="$resultValue" exact="$PropertyValue.quadrant"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'unlock'">
              <set_value name="$resultValue" exact="$PropertyValue.unlock"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'weaponmode'">
              <set_value name="$resultValue" exact="$PropertyValue.weaponmode"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'dronemode'">
              <set_value name="$resultValue" exact="$PropertyValue.dronemode"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'shiptype'">
              <set_value name="$resultValue" exact="$PropertyValue.shiptype"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'stationtype'">
              <set_value name="$resultValue" exact="$PropertyValue.stationtype"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'roomtype'">
              <set_value name="$resultValue" exact="$PropertyValue.roomtype"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'regiongroup'">
              <set_value name="$resultValue" exact="$PropertyValue.regiongroup"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'none'">
              <set_value name="$resultValue" exact="$PropertyValue.none"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'down'">
              <set_value name="$resultValue" exact="$PropertyValue.down"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'left'">
              <set_value name="$resultValue" exact="$PropertyValue.left"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'front'">
              <set_value name="$resultValue" exact="$PropertyValue.front"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'back'">
              <set_value name="$resultValue" exact="$PropertyValue.back"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'param'">
              <set_value name="$resultValue" exact="$PropertyValue.param"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'param2'">
              <set_value name="$resultValue" exact="$PropertyValue.param2"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'param3'">
              <set_value name="$resultValue" exact="$PropertyValue.param3"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isequipmentmod'">
              <set_value name="$resultValue" exact="$PropertyValue.isequipmentmod"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'equipmentmodquality'">
              <set_value name="$resultValue" exact="$PropertyValue.equipmentmodquality"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'ispaintmod'">
              <set_value name="$resultValue" exact="$PropertyValue.ispaintmod"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'paintmodquality'">
              <set_value name="$resultValue" exact="$PropertyValue.paintmodquality"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isclothingmod'">
              <set_value name="$resultValue" exact="$PropertyValue.isclothingmod"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'clothingmodquality'">
              <set_value name="$resultValue" exact="$PropertyValue.clothingmodquality"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isprocessed'">
              <set_value name="$resultValue" exact="$PropertyValue.isprocessed"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'table'">
              <set_value name="$resultValue" exact="$PropertyValue.table"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'free'">
              <set_value name="$resultValue" exact="$PropertyValue.free"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'capacity'">
              <set_value name="$resultValue" exact="$PropertyValue.capacity"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'purposemacro'">
              <set_value name="$resultValue" exact="$PropertyValue.purposemacro"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'purposename'">
              <set_value name="$resultValue" exact="$PropertyValue.purposename"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'docksizes'">
              <set_value name="$resultValue" exact="$PropertyValue.docksizes"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'productionvolume'">
              <set_value name="$resultValue" exact="$PropertyValue.productionvolume"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'consumptionvolume'">
              <set_value name="$resultValue" exact="$PropertyValue.consumptionvolume"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'cargocapacity'">
              <set_value name="$resultValue" exact="$PropertyValue.cargocapacity"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'allowedowners'">
              <set_value name="$resultValue" exact="$PropertyValue.allowedowners"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'allowedwares'">
              <set_value name="$resultValue" exact="$PropertyValue.allowedwares"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'maxrelation'">
              <set_value name="$resultValue" exact="$PropertyValue.maxrelation"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'enemy'">
              <set_value name="$resultValue" exact="$PropertyValue.enemy"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'active'">
              <set_value name="$resultValue" exact="$PropertyValue.active"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'version'">
              <set_value name="$resultValue" exact="$PropertyValue.version"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'static'">
              <set_value name="$resultValue" exact="$PropertyValue.static"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'staticbase'">
              <set_value name="$resultValue" exact="$PropertyValue.staticbase"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'namespace'">
              <set_value name="$resultValue" exact="$PropertyValue.namespace"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'library'">
              <set_value name="$resultValue" exact="$PropertyValue.library"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isinstance'">
              <set_value name="$resultValue" exact="$PropertyValue.isinstance"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'hasmissionoffer'">
              <set_value name="$resultValue" exact="$PropertyValue.hasmissionoffer"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'hasmission'">
              <set_value name="$resultValue" exact="$PropertyValue.hasmission"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'hasguidance'">
              <set_value name="$resultValue" exact="$PropertyValue.hasguidance"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'offerlocations'">
              <set_value name="$resultValue" exact="$PropertyValue.offerlocations"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'missiontype'">
              <set_value name="$resultValue" exact="$PropertyValue.missiontype"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'missionendtime'">
              <set_value name="$resultValue" exact="$PropertyValue.missionendtime"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'objective'">
              <set_value name="$resultValue" exact="$PropertyValue.objective"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'objectiveendtime'">
              <set_value name="$resultValue" exact="$PropertyValue.objectiveendtime"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'actor'">
              <set_value name="$resultValue" exact="$PropertyValue.actor"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isnumeric'">
              <set_value name="$resultValue" exact="$PropertyValue.isnumeric"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isstring'">
              <set_value name="$resultValue" exact="$PropertyValue.isstring"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'femalename'">
              <set_value name="$resultValue" exact="$PropertyValue.femalename"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'pluralname'">
              <set_value name="$resultValue" exact="$PropertyValue.pluralname"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'tag'">
              <set_value name="$resultValue" exact="$PropertyValue.tag"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'hirable'">
              <set_value name="$resultValue" exact="$PropertyValue.hirable"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'tiers'">
              <set_value name="$resultValue" exact="$PropertyValue.tiers"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'skilltypes'">
              <set_value name="$resultValue" exact="$PropertyValue.skilltypes"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'maxmk'">
              <set_value name="$resultValue" exact="$PropertyValue.maxmk"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'age'">
              <set_value name="$resultValue" exact="$PropertyValue.age"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'occupiedship'">
              <set_value name="$resultValue" exact="$PropertyValue.occupiedship"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'platform'">
              <set_value name="$resultValue" exact="$PropertyValue.platform"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'entity'">
              <set_value name="$resultValue" exact="$PropertyValue.entity"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'galaxy'">
              <set_value name="$resultValue" exact="$PropertyValue.galaxy"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'computer'">
              <set_value name="$resultValue" exact="$PropertyValue.computer"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'activity'">
              <set_value name="$resultValue" exact="$PropertyValue.activity"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'autopilottarget'">
              <set_value name="$resultValue" exact="$PropertyValue.autopilottarget"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'conversation'">
              <set_value name="$resultValue" exact="$PropertyValue.conversation"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'conversationactor'">
              <set_value name="$resultValue" exact="$PropertyValue.conversationactor"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'hasactivemission'">
              <set_value name="$resultValue" exact="$PropertyValue.hasactivemission"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'activemissiontype'">
              <set_value name="$resultValue" exact="$PropertyValue.activemissiontype"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'activemissionwaypoint'">
              <set_value name="$resultValue" exact="$PropertyValue.activemissionwaypoint"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'hasacceptedonlinemission'">
              <set_value name="$resultValue" exact="$PropertyValue.hasacceptedonlinemission"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isincontrolposition'">
              <set_value name="$resultValue" exact="$PropertyValue.isincontrolposition"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'scanlevel'">
              <set_value name="$resultValue" exact="$PropertyValue.scanlevel"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'debug'">
              <set_value name="$resultValue" exact="$PropertyValue.debug"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isscreenshotmode'">
              <set_value name="$resultValue" exact="$PropertyValue.isscreenshotmode"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'screenshotmode'">
              <set_value name="$resultValue" exact="$PropertyValue.screenshotmode"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'ismapeditoractive'">
              <set_value name="$resultValue" exact="$PropertyValue.ismapeditoractive"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isinfullscreencutscene'">
              <set_value name="$resultValue" exact="$PropertyValue.isinfullscreencutscene"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isinfullscreenmenu'">
              <set_value name="$resultValue" exact="$PropertyValue.isinfullscreenmenu"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isvrversion'">
              <set_value name="$resultValue" exact="$PropertyValue.isvrversion"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isvrmode'">
              <set_value name="$resultValue" exact="$PropertyValue.isvrmode"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'chardensity'">
              <set_value name="$resultValue" exact="$PropertyValue.chardensity"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'modulename'">
              <set_value name="$resultValue" exact="$PropertyValue.modulename"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'moduledescription'">
              <set_value name="$resultValue" exact="$PropertyValue.moduledescription"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'speakpriority'">
              <set_value name="$resultValue" exact="$PropertyValue.speakpriority"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'flightassist'">
              <set_value name="$resultValue" exact="$PropertyValue.flightassist"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isdockuiactive'">
              <set_value name="$resultValue" exact="$PropertyValue.isdockuiactive"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'hasemergencyeject'">
              <set_value name="$resultValue" exact="$PropertyValue.hasemergencyeject"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isemergencyejectactive'">
              <set_value name="$resultValue" exact="$PropertyValue.isemergencyejectactive"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'shouldplayertaxiwaitforplayer'">
              <set_value name="$resultValue" exact="$PropertyValue.shouldplayertaxiwaitforplayer"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'shouldplayershipswaitforplayer'">
              <set_value name="$resultValue" exact="$PropertyValue.shouldplayershipswaitforplayer"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isonline'">
              <set_value name="$resultValue" exact="$PropertyValue.isonline"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'canactivateliveview'">
              <set_value name="$resultValue" exact="$PropertyValue.canactivateliveview"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'recommendedmodule'">
              <set_value name="$resultValue" exact="$PropertyValue.recommendedmodule"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'isgameover'">
              <set_value name="$resultValue" exact="$PropertyValue.isgameover"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'index'">
              <set_value name="$resultValue" exact="$PropertyValue.index"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'element'">
              <set_value name="$resultValue" exact="$PropertyValue.element"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'key'">
              <set_value name="$resultValue" exact="$PropertyValue.key"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'null'">
              <set_value name="$resultValue" exact="$PropertyValue.null"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'integer'">
              <set_value name="$resultValue" exact="$PropertyValue.integer"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'largeint'">
              <set_value name="$resultValue" exact="$PropertyValue.largeint"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'float'">
              <set_value name="$resultValue" exact="$PropertyValue.float"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'angle'">
              <set_value name="$resultValue" exact="$PropertyValue.angle"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'hitpoints'">
              <set_value name="$resultValue" exact="$PropertyValue.hitpoints"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'largefloat'">
              <set_value name="$resultValue" exact="$PropertyValue.largefloat"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'cue'">
              <set_value name="$resultValue" exact="$PropertyValue.cue"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'keyword'">
              <set_value name="$resultValue" exact="$PropertyValue.keyword"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'xmlkeyword'">
              <set_value name="$resultValue" exact="$PropertyValue.xmlkeyword"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'componentstate'">
              <set_value name="$resultValue" exact="$PropertyValue.componentstate"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'killmethod'">
              <set_value name="$resultValue" exact="$PropertyValue.killmethod"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'relationchangereason'">
              <set_value name="$resultValue" exact="$PropertyValue.relationchangereason"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'flightbehaviour'">
              <set_value name="$resultValue" exact="$PropertyValue.flightbehaviour"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'flightcontrolmodel'">
              <set_value name="$resultValue" exact="$PropertyValue.flightcontrolmodel"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'entitytype'">
              <set_value name="$resultValue" exact="$PropertyValue.entitytype"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'entityrole'">
              <set_value name="$resultValue" exact="$PropertyValue.entityrole"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'skilltype'">
              <set_value name="$resultValue" exact="$PropertyValue.skilltype"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'missiongroup'">
              <set_value name="$resultValue" exact="$PropertyValue.missiongroup"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'level'">
              <set_value name="$resultValue" exact="$PropertyValue.level"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'alertlevel'">
              <set_value name="$resultValue" exact="$PropertyValue.alertlevel"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'command'">
              <set_value name="$resultValue" exact="$PropertyValue.command"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'commandaction'">
              <set_value name="$resultValue" exact="$PropertyValue.commandaction"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'roompopulationtype'">
              <set_value name="$resultValue" exact="$PropertyValue.roompopulationtype"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'purpose'">
              <set_value name="$resultValue" exact="$PropertyValue.purpose"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'controlpaneltype'">
              <set_value name="$resultValue" exact="$PropertyValue.controlpaneltype"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'signalleaktype'">
              <set_value name="$resultValue" exact="$PropertyValue.signalleaktype"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'blacklisttype'">
              <set_value name="$resultValue" exact="$PropertyValue.blacklisttype"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'blacklistgroup'">
              <set_value name="$resultValue" exact="$PropertyValue.blacklistgroup"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'moodlevel'">
              <set_value name="$resultValue" exact="$PropertyValue.moodlevel"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'orderstate'">
              <set_value name="$resultValue" exact="$PropertyValue.orderstate"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'datatype'">
              <set_value name="$resultValue" exact="$PropertyValue.datatype"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'cuestate'">
              <set_value name="$resultValue" exact="$PropertyValue.cuestate"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'notification'">
              <set_value name="$resultValue" exact="$PropertyValue.notification"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'string'">
              <set_value name="$resultValue" exact="$PropertyValue.string"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'componentslot'">
              <set_value name="$resultValue" exact="$PropertyValue.componentslot"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'licence'">
              <set_value name="$resultValue" exact="$PropertyValue.licence"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'vector'">
              <set_value name="$resultValue" exact="$PropertyValue.vector"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'quadrant'">
              <set_value name="$resultValue" exact="$PropertyValue.quadrant"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'unlock'">
              <set_value name="$resultValue" exact="$PropertyValue.unlock"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'weaponmode'">
              <set_value name="$resultValue" exact="$PropertyValue.weaponmode"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'dronemode'">
              <set_value name="$resultValue" exact="$PropertyValue.dronemode"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'shiptype'">
              <set_value name="$resultValue" exact="$PropertyValue.shiptype"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'stationtype'">
              <set_value name="$resultValue" exact="$PropertyValue.stationtype"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'roomtype'">
              <set_value name="$resultValue" exact="$PropertyValue.roomtype"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'regiongroup'">
              <set_value name="$resultValue" exact="$PropertyValue.regiongroup"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'none'">
              <set_value name="$resultValue" exact="$PropertyValue.none"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'down'">
              <set_value name="$resultValue" exact="$PropertyValue.down"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'left'">
              <set_value name="$resultValue" exact="$PropertyValue.left"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'front'">
              <set_value name="$resultValue" exact="$PropertyValue.front"/>
            </do_elseif>
            <do_elseif value="$currentProperty == 'back'">
              <set_value name="$resultValue" exact="$PropertyValue.back"/>
            </do_elseif>
            <!--<do_elseif value="$currentProperty == 'param'"><set_value name="$resultValue" exact="$PropertyValue.param"/></do_elseif> doesnt make sense
<do_elseif value="$currentProperty == 'param2'"><set_value name="$resultValue" exact="$PropertyValue.param2"/></do_elseif>
<do_elseif value="$currentProperty == 'param3'"><set_value name="$resultValue" exact="$PropertyValue.param3"/></do_elseif>-->
            <!-- Would love if this method worked, but it doesnt.. leaving it here as fallback in case it does in the future... -->
            <do_else>
              <set_value name="$resultValue" exact="$PropertyValue.{$currentProperty}"/>
            </do_else>
            <!-- Recursive Call and Return Result Logic - Intended to return the last valid result, or a list of all in-between results.
In case of Error $PropertyList will contain all non-evaluated properties. Also the Return list will contain the un-evaluated ones as String. -->
            <do_if value="$resultValue != null or $null_is_valid">
              <remove_value name="$null_is_valid"/>
              <remove_value name="$PropertyList.{1}"/>
              <do_if value="$properties_to_remove" exact="2">
                <remove_value name="$PropertyList.{2}"/>
              </do_if>
              <do_if value="$PropertyList.count">
                <run_actions ref="EvaluateProperty" result="$returnValue">
                  <param name="PropertyList" value="$PropertyList"/>
                  <param name="PropertyValue" value="$resultValue"/>
                  <param name="ListOutput" value="$ListOutput"/>
                </run_actions>
                <debug_text filter="general" text="'EvaluateProperty returned:' + $returnValue" chance="Root.$debugmode * 100"/>
                <do_if value="$ListOutput">
                  <set_value operation="insert" name="$returnValue.{1}" exact="$resultValue"/>
                  <return value="$returnValue" comment="Returning result from further down the chain, appending our result"/>
                </do_if>
                <do_elseif value="$returnValue == 'error'">
                  <return value="$resultValue" comment="Returning Our Result because Chain terminated in the next step ($PropertyList should contain the not evaluated properties)"/>
                </do_elseif>
                <do_else>
                  <return value="$returnValue" comment="Returning Result from further down the Chain"/>
                </do_else>
              </do_if>
              <do_if value="$ListOutput">
                <return value="[$resultValue]" comment="Reached end of Property Chain - starting Result List"/>
              </do_if>
              <do_else>
                <return value="$resultValue"/>
              </do_else>
            </do_if>
            <do_if value="$ListOutput">
              <return value="$PropertyList.clone" comment="Couldnt resolve further properties - returning missing ones so non-evaluated properties get returned as string"/>
            </do_if>
            <do_else>
              <return value="'error'"/>
            </do_else>
          </actions>
        </library>
        <library name="SaveProperty" purpose="run_actions">
          <params>
            <param name="Property"/>
            <param name="PropertyValue"/>
            <param name="ListOutput" default="false"/>
            <param name="SaveValue"/>
            <param name="SaveValue2" default="false"/>
          </params>
          <actions>
            <debug_text filter="general" text="'SaveProperty called for:' + $PropertyValue + '//' + $Property" chance="Root.$debugmode * 100"/>
            <debug_text filter="general" text="'SaveValue:' + $SaveValue + '//' + $SaveValue2" chance="Root.$debugmode * 100"/>
            <!-- Finding the Value to set - most will require special handling -->
            <do_if value="false" comment="Allow to do everything in a copy-able do_elseif"/>
            <!-- drop in all non-setable values here for now, mostly because i see no sensible use case/retrieval way for the vars, or they are too generic and other stuff should be handled first
attribute	name	set_value


Special Handling (too complex; many input params)
attribute	name	set_cockpit_tint
attribute	name	set_ambient_sound_state
attribute	name	set_object_sound_override
attribute	name	set_trade_restrictions
attribute	name	set_turret_targets
attribute	name	set_weapon_mode
attribute	name	set_weapon_ammo
attribute	name	set_entity_traits
attribute	name	set_npc_template_traits
attribute	name	set_entity_overrides
attribute	name	set_tolerance_boost
attribute	name	set_allowed_weapon_systems
attribute	name	set_actor_pod_arrival_time
attribute	name	set_requested_job_ship_timeout
attribute	name	set_anomaly_transition_destination_state
attribute	name	set_anomaly_transition_source_state
attribute	name	set_marine_status
attribute	name	set_boarding_phase
attribute	name	set_subordinate_group_assignment
attribute	name	set_subordinate_group_protected_position
attribute	name	set_subordinate_group_protected_sector
attribute	name	set_order_failed
attribute	name	set_order_state
attribute	name	set_order_syncpoint_reached
attribute	name	set_current_loop_order
attribute	name	set_object_hacked
attribute	name	set_triggers_locked
attribute	name	set_trigger_activation_wares
attribute	name	set_relation_boost
attribute	name	set_scan_target
attribute	name	set_ship_undocking
attribute	name	set_equipment_wares_absolute
attribute	name	set_equipment_wares_excluded
attribute	name	set_equipment_wares_included
attribute	name	set_ship_wares_absolute
attribute	name	set_ship_wares_excluded
attribute	name	set_ship_wares_included
attribute	name	set_userdata
attribute	name	set_terraforming_mission_activated
attribute	name	set_terraforming_mission_completed
attribute	name	set_terraforming_mission_deactivated
attribute	name	set_terraforming_project_data
attribute	name	set_terraforming_stat
attribute	name	set_world_atmosphere
attribute	name	set_world_geology
attribute	name	set_world_name
attribute	name	set_world_population
attribute	name	set_world_settlements
attribute	name	set_holomap_target
attribute	name	set_job_active
attribute	name	set_objective
attribute	name	set_objective_from_briefing
attribute	name	set_visitor_as_mission_object
attribute	name	set_build_plot
attribute	name	set_object_velocity
            <do_elseif value="$Property == ' '">
              <="$SaveValue"/>
            </do_elseif>
-->
            <!-- root "Properties" - no predecessor property (predecessor just ignored for now; planned for special handling) -->
            <do_elseif value="$Property" exact="'loot_magnet'">
              <!-- ficticious property -->
              <set_loot_magnet active="$SaveValue"/>
              <set_value name="$FictiousProperty" exact="true"/>
            </do_elseif>
            <do_elseif value="$Property" exact="'player_activity'">
              <!-- ficticious property -->
              <set_player_activity activity="$SaveValue"/>
              <set_value name="$FictiousProperty" exact="true"/>
            </do_elseif>
            <do_elseif value="$Property" exact="'player_position'">
              <!-- ficticious property -->
              <set_player_entity_position>
                <position value="$SaveValue"/>
                <rotation value="$SaveValue2"/>
              </set_player_entity_position>
              <set_value name="$FictiousProperty" exact="true"/>
            </do_elseif>
            <do_elseif value="$Property" exact="'player_persistent_docking_request'">
              <!-- ficticious property -->
              <set_player_persistent_docking_request persistent="$SaveValue"/>
              <set_value name="$FictiousProperty" exact="true"/>
            </do_elseif>
            <do_elseif value="$Property" exact="'emergency_eject_active'">
              <!-- ficticious property -->
              <set_emergency_eject_active active="$SaveValue"/>
              <set_value name="$FictiousProperty" exact="true"/>
            </do_elseif>
            <do_elseif value="$Property" exact="'timewarp_factor'">
              <!-- ficticious property -->
              <set_timewarp_factor factor="$SaveValue"/>
              <set_value name="$FictiousProperty" exact="true"/>
            </do_elseif>
            <do_elseif value="$Property" exact="'playership_throttle'">
              <!-- ficticious property -->
              <set_playership_throttle value="$SaveValue"/>
              <set_value name="$FictiousProperty" exact="true"/>
            </do_elseif>
            <do_elseif value="$Property" exact="'control_mode_messages_disabled'">
              <!-- ficticious property -->
              <set_control_mode_messages_disabled/>
              <set_value name="$FictiousProperty" exact="true"/>
            </do_elseif>
            <do_elseif value="$Property" exact="'adaptive_steering_forced'">
              <!-- ficticious property -->
              <set_adaptive_steering_forced/>
              <set_value name="$FictiousProperty" exact="true"/>
            </do_elseif>
            <do_elseif value="$Property" exact="'ambient_volume'">
              <!-- ficticious property -->
              <set_ambient_volume volume="$SaveValue"/>
              <set_value name="$FictiousProperty" exact="true"/>
            </do_elseif>
            <do_elseif value="$Property" exact="'effect_volume'">
              <!-- ficticious property -->
              <set_effect_volume volume="$SaveValue"/>
              <set_value name="$FictiousProperty" exact="true"/>
            </do_elseif>
            <do_elseif value="$Property" exact="'music_volume'">
              <!-- ficticious property -->
              <set_music_volume volume="$SaveValue"/>
              <set_value name="$FictiousProperty" exact="true"/>
            </do_elseif>
            <do_elseif value="$Property" exact="'holomap_zoom'">
              <!-- ficticious property -->
              <set_holomap_zoom value="$SaveValue" instant="$SaveValue2"/>
              <set_value name="$FictiousProperty" exact="true"/>
            </do_elseif>
            <do_elseif value="$Property" exact="'holomap_max_zoom'">
              <!-- ficticious property -->
              <set_holomap_max_zoom value="$SaveValue"/>
              <set_value name="$FictiousProperty" exact="true"/>
            </do_elseif>
            <do_elseif value="$Property" exact="'player_target'">
              <!-- ficticious property -->
              <set_player_target object="$SaveValue"/>
              <set_value name="$FictiousProperty" exact="true"/>
            </do_elseif>
            <do_elseif value="$Property" exact="'player_firstperson_override'">
              <!-- ficticious property -->
              <set_player_firstperson_override id="$SaveValue"/>
              <set_value name="$FictiousProperty" exact="true"/>
            </do_elseif>
            <do_elseif value="$Property" exact="'active_mission_waypoint_known'">
              <!-- ficticious property -->
              <set_active_mission_waypoint_known/>
              <set_value name="$FictiousProperty" exact="true"/>
            </do_elseif>
            <do_elseif value="$Property" exact="'set_external_view_allowed'">
              <!-- ficticious property -->
              <set_external_view_allowed allow="$SaveValue"/>
              <set_value name="$FictiousProperty" exact="true"/>
            </do_elseif>
            <do_elseif value="$Property" exact="'set_notification_type_enabled'">
              <!-- ficticious property -->
              <set_notification_type_enabled type="$SaveValue" enabled="$SaveValue2"/>
              <set_value name="$FictiousProperty" exact="true"/>
            </do_elseif>
            <!-- regular properties -->
            <do_elseif value="$Property" exact="'name'">
              <do_if value="typeof $PropertyValue == datatype.faction">
                <set_faction_identity faction="$PropertyValue" name="$SaveValue"/>
              </do_if>
              <do_else>
                <set_object_name object="$PropertyValue" name="$SaveValue"/>
              </do_else>
            </do_elseif>
            <do_elseif value="$Property" exact="'description'">
              <do_if value="typeof $PropertyValue == datatype.faction">
                <set_faction_identity faction="$PropertyValue" description="$SaveValue"/>
              </do_if>
              <do_else>
                <do_if value="$SaveValue">
                  <set_object_description object="$PropertyValue" description="$SaveValue"/>
                </do_if>
                <do_else>
                  <clear_object_description object="$PropertyValue"/>
                </do_else>
              </do_else>
            </do_elseif>
            <do_elseif value="$Property" exact="'alertlevel'">
              <do_if value="$SaveValue == alertlevel.low or $SaveValue == 'low' or $SaveValue == 'green'">
                <set_alert_level object="$PropertyValue" level="green"/>
              </do_if>
              <do_elseif value="$SaveValue == alertlevel.medium or $SaveValue == 'medium' or $SaveValue == 'yellow'">
                <set_alert_level object="$PropertyValue" level="yellow"/>
              </do_elseif>
              <do_elseif value="$SaveValue == alertlevel.high or $SaveValue == 'high' or $SaveValue == 'red'">
                <set_alert_level object="$PropertyValue" level="red"/>
              </do_elseif>
            </do_elseif>
            <do_elseif value="$Property" exact="'ammo.macro'">
              <!-- . in property !! Handling needed earlier!! -->
              <set_ammo object="$PropertyValue" macro="$SaveValue" amount="$SaveValue2"/>
            </do_elseif>
            <do_elseif value="$Property" exact="'bonusunlocktime'">
              <!-- ficticious property -->
              <set_next_bonus_unlocktime object="$PropertyValue" bonus="$SaveValue" time="$SaveValue2"/>
              <set_value name="$FictiousProperty" exact="true"/>
            </do_elseif>
            <do_elseif value="$Property" exact="'identity'">
              <!-- ficticious property -->
              <!-- ToDo: move to direct sub-expressions like $faction.name , $faction.shortname etc. for consistency -->
              <do_if value="$SaveValue.$name?">
                <!-- done -->
                <set_faction_identity faction="$PropertyValue" name="$SaveValue.$name"/>
              </do_if>
              <do_if value="$SaveValue.$shortname?">
                <set_faction_identity faction="$PropertyValue" shortname="$SaveValue.$shortname"/>
              </do_if>
              <do_if value="$SaveValue.$prefixname?">
                <set_faction_identity faction="$PropertyValue" prefixname="$SaveValue.$prefixname"/>
              </do_if>
              <do_if value="$SaveValue.$spacename?">
                <set_faction_identity faction="$PropertyValue" spacename="$SaveValue.$spacename"/>
              </do_if>
              <do_if value="$SaveValue.$homespacename?">
                <set_faction_identity faction="$PropertyValue" homespacename="$SaveValue.$homespacename"/>
              </do_if>
              <do_if value="$SaveValue.$description?">
                <!-- done -->
                <set_faction_identity faction="$PropertyValue" description="$SaveValue.$description"/>
              </do_if>
              <do_if value="$SaveValue.$icon?">
                <set_faction_identity faction="$PropertyValue" icon="$SaveValue.$icon"/>
              </do_if>
              <do_if value="$SaveValue.$image?">
                <set_faction_identity faction="$PropertyValue" image="$SaveValue.$image"/>
              </do_if>
              <do_if value="$SaveValue.$personal?">
                <set_faction_identity faction="$PropertyValue" personal="$SaveValue.$personal"/>
              </do_if>
              <set_value name="$FictiousProperty" exact="true"/>
            </do_elseif>
            <do_elseif value="$Property" exact="'mood'">
              <do_if value="$SaveValue == 'aggression'">
                <do_if value="$SaveValue2">
                  <set_faction_mood faction="$PropertyValue" type="aggression" level="$SaveValue2"/>
                </do_if>
                <do_else>
                  <reset_faction_mood faction="$PropertyValue" type="aggression"/>
                </do_else>
              </do_if>
              <do_if value="$SaveValue == 'avarice'">
                <do_if value="$SaveValue2">
                  <set_faction_mood faction="$PropertyValue" type="avarice" level="$SaveValue2"/>
                </do_if>
                <do_else>
                  <reset_faction_mood faction="$PropertyValue" type="avarice"/>
                </do_else>
              </do_if>
            </do_elseif>
            <do_elseif value="$Property" exact="'active'">
              <do_if value="typeof $PropertyValue == datatype.faction">
                <set_faction_active faction="$PropertyValue" active="$SaveValue"/>
              </do_if>
              <do_else>
                <do_if value="$SaveValue2">
                  <set_object_active object="$PropertyValue" activate="$SaveValue" immediate="true"/>
                </do_if>
                <do_else>
                  <set_object_active object="$PropertyValue" activate="$SaveValue" immediate="false"/>
                </do_else>
              </do_else>
            </do_elseif>
            <do_elseif value="$Property" exact="'known'">
              <do_if value="typeof $PropertyValue == datatype.faction">
                <set_faction_known faction="$PropertyValue" known="$SaveValue"/>
              </do_if>
              <do_else>
                <set_known object="$PropertyValue" known="$SaveValue" updatesnapshot="$SaveValue2"/>
              </do_else>
            </do_elseif>
            <do_elseif value="$Property" exact="'policefaction'">
              <set_faction_police faction="$PropertyValue" policefaction="$SaveValue"/>
            </do_elseif>
            <do_elseif value="$Property" exact="'headquarters'">
              <do_if value="$SaveValue2?">
                <set_faction_headquarters faction="$PropertyValue" station="$SaveValue"/>
              </do_if>
              <do_else>
                <set_faction_headquarters faction="$PropertyValue" station="$SaveValue" headquarters="$SaveValue2"/>
              </do_else>
            </do_elseif>
            <do_elseif value="$Property" exact="'isnpcassignmentrestricted'">
              <set_object_npc_assignment_restricted object="$PropertyValue" restricted="$SaveValue"/>
            </do_elseif>
            <do_elseif value="$Property" exact="'jobmainzone'">
              <set_job_ship_mainzone ship="$PropertyValue" zone="$SaveValue"/>
            </do_elseif>
            <do_elseif value="$Property" exact="'jobmainsector'">
              <set_job_ship_mainsector ship="$PropertyValue" sector="$SaveValue"/>
            </do_elseif>
            <do_elseif value="$Property" exact="'expirationtime'">
              <!-- ficticious property -->
              <set_ship_expiration_time ship="$PropertyValue" time="$SaveValue"/>
              <set_value name="$FictiousProperty" exact="true"/>
            </do_elseif>
            <do_elseif value="$Property" exact="'safeposallowed'">
              <!-- ficticious property -->
              <set_ship_safepos_allowed ship="$PropertyValue" allow="$SaveValue"/>
              <set_value name="$FictiousProperty" exact="true"/>
            </do_elseif>
            <do_elseif value="$Property" exact="'loadoutlevel'">
              <set_loadout_level object="$PropertyValue" exact="$SaveValue"/>
            </do_elseif>
            <!--do_elseif value="$Property" exact="'isprivate'">none of the attributes 'interior', 'room' or 'corridor' is present!
              <set_dynamic_interior_private object="$PropertyValue" private="$SaveValue"/>
            </do_elseif-->
            <!--do_elseif value="$Property" exact="'ispersistent'"><!- - ficticious property - -> none of the attributes 'interior', 'room' or 'corridor' is present!
              <set_dynamic_interior_persistent object="$PropertyValue" persistent="$SaveValue"/>
              <set_value name="$FictiousProperty" exact="true"/>
            </do_elseif-->
            <do_elseif value="$Property" exact="'persistent'">
              <!-- ficticious property (not, see prev) -->
              <!-- for masstraffic, drops, regionobjects,wrecks, presentation clusters -->
              <do_if value="$PropertyValue.ismasstraffic">
                <do_if value="$SaveValue">
                  <set_mass_traffic_object_persistence object="$PropertyValue" persistent="true"/>
                </do_if>
                <do_else>
                  <set_mass_traffic_object_persistence object="$PropertyValue" persistent="false"/>
                </do_else>
              </do_if>
              <do_elseif value="$PropertyValue.isdroppedcontainer">
                <do_if value="$SaveValue">
                  <set_drop_persistence object="$PropertyValue" persistent="true"/>
                </do_if>
                <do_else>
                  <set_drop_persistence object="$PropertyValue" persistent="false"/>
                </do_else>
              </do_elseif>
              <do_elseif value="$PropertyValue.iswreck">
                <do_if value="$SaveValue">
                  <set_wreck_persistence object="$PropertyValue" persistent="true"/>
                </do_if>
                <do_else>
                  <set_wreck_persistence object="$PropertyValue" persistent="false"/>
                </do_else>
              </do_elseif>
              <do_elseif value="$PropertyValue.isclass.cluster">
                <do_if value="$SaveValue">
                  <set_presentation_cluster_persistence cluster="$PropertyValue" persistent="true"/>
                </do_if>
                <do_else>
                  <set_presentation_cluster_persistence cluster="$PropertyValue" persistent="false"/>
                </do_else>
              </do_elseif>
              <do_else comment="region object - no idea how to filter, so else">
                <do_if value="$SaveValue">
                  <set_region_object_persistence object="$PropertyValue" persistent="true"/>
                </do_if>
                <do_else>
                  <set_region_object_persistence object="$PropertyValue" persistent="false"/>
                </do_else>
              </do_else>
              <set_value name="$FictiousProperty" exact="true"/>
            </do_elseif>
            <do_elseif value="$Property" exact="'drones_armed'">
              <!-- ficticious property -->
              <set_drone_armed object="$PropertyValue" category="$SaveValue" armed="$SaveValue2"/>
              <set_value name="$FictiousProperty" exact="true"/>
            </do_elseif>
            <do_elseif value="$Property" exact="'dronemode'">
              <!-- ficticious property -->
              <set_drone_mode object="$PropertyValue" category="$SaveValue" mode="$SaveValue2"/>
              <set_value name="$FictiousProperty" exact="true"/>
            </do_elseif>
            <do_elseif value="$Property" exact="'maxbudget'">
              <set_object_max_budget object="$PropertyValue" amount="$SaveValue"/>
            </do_elseif>
            <do_elseif value="$Property" exact="'minbudget'">
              <set_object_min_budget object="$PropertyValue" amount="$SaveValue"/>
            </do_elseif>
            <do_elseif value="$Property" exact="'roomslot'">
              <do_if value="$SaveValue">
                <set_actor_roomslot actor="$PropertyValue" roomslot="$SaveValue"/>
              </do_if>
              <do_else>
                <clear_actor_roomslot actor="$PropertyValue"/>
              </do_else>
            </do_elseif>
            <do_elseif value="$Property" exact="'currentchair'">
              <do_if value="$SaveValue">
                <set_actor_current_chair actor="$PropertyValue" roomslot="$SaveValue"/>
              </do_if>
              <do_else>
                <clear_actor_current_chair actor="$PropertyValue"/>
              </do_else>
            </do_elseif>
            <do_elseif value="$Property" exact="'emotion'">
              <!-- ficticious property -->
              <do_if value="$SaveValue">
                <set_actor_emotion actor="$PropertyValue" emotion="$SaveValue"/>
              </do_if>
              <do_else>
                <clear_actor_emotion actor="$PropertyValue"/>
              </do_else>
              <set_value name="$FictiousProperty" exact="true"/>
            </do_elseif>
            <do_elseif value="$Property" exact="'lookat'">
              <!-- ficticious property -->
              <do_if value="$SaveValue">
                <set_actor_lookat actor="$PropertyValue" component="$SaveValue"/>
              </do_if>
              <do_else>
                <clear_actor_lookat actor="$PropertyValue"/>
              </do_else>
              <set_value name="$FictiousProperty" exact="true"/>
            </do_elseif>
            <do_elseif value="$Property" exact="'touch'">
              <!-- ficticious property -->
              <do_if value="$SaveValue">
                <do_if value="$SaveValue2">
                  <set_actor_touch actor="$PropertyValue" tags="$SaveValue" lefthand="true"/>
                </do_if>
                <do_else>
                  <set_actor_touch actor="$PropertyValue" tags="$SaveValue" lefthand="false"/>
                </do_else>
              </do_if>
              <do_else>
                <clear_actor_touch actor="$PropertyValue"/>
              </do_else>
              <set_value name="$FictiousProperty" exact="true"/>
            </do_elseif>
            <do_elseif value="$Property" exact="'tool'">
              <!-- ficticious property -->
              <do_if value="$SaveValue">
                <do_if value="$SaveValue2">
                  <set_actor_tool actor="$PropertyValue" name="$SaveValue" lefthand="true"/>
                </do_if>
                <do_else>
                  <set_actor_tool actor="$PropertyValue" name="$SaveValue" lefthand="false"/>
                </do_else>
              </do_if>
              <do_else>
                <clear_actor_tool actor="$PropertyValue"/>
              </do_else>
              <set_value name="$FictiousProperty" exact="true"/>
            </do_elseif>
            <do_elseif value="$Property == 'buildprocessor' or $Property =='buildanchor'">
              <!-- not sure what the difference is or which is correct in this context -->
              <do_if value="$SaveValue">
                <set_buildanchor object="$PropertyValue" buildprocessor="$SaveValue"/>
              </do_if>
              <do_else>
                <clear_buildanchor buildprocessor="$PropertyValue.buildanchor"/>
              </do_else>
            </do_elseif>
            <do_elseif value="$Property" exact="'isexclusiveforextensionjobs'">
              <!-- not sure if this is the right property, but is the closest one -->
              <do_if value="$SaveValue">
                <set_space_job_exclusivity space="$PropertyValue" exclusive="$SaveValue"/>
              </do_if>
              <do_else>
                <reset_space_job_exclusivity space="$PropertyValue"/>
              </do_else>
            </do_elseif>
            <do_elseif value="$Property" exact="'god'">
              <do_if value="$SaveValue">
                <set_space_god_allowed space="$PropertyValue" allow="$SaveValue"/>
              </do_if>
              <do_else>
                <reset_space_god_allowed space="$PropertyValue"/>
              </do_else>
            </do_elseif>
            <do_elseif value="$Property" exact="'factionlogic'">
              <do_if value="$SaveValue">
                <set_space_faction_logic_allowed space="$PropertyValue" allow="$SaveValue"/>
              </do_if>
              <do_else>
                <reset_space_faction_logic_allowed space="$PropertyValue"/>
              </do_else>
            </do_elseif>
            <do_elseif value="$Property" exact="'jobs'">
              <do_if value="$SaveValue">
                <set_space_jobs_allowed space="$PropertyValue" allow="$SaveValue"/>
              </do_if>
              <do_else>
                <reset_space_jobs_allowed space="$PropertyValue"/>
              </do_else>
            </do_elseif>
            <do_elseif value="$Property" exact="'economy'">
              <do_if value="$SaveValue">
                <set_space_economy space="$PropertyValue" exact="$SaveValue"/>
              </do_if>
              <do_else>
                <reset_space_economy space="$PropertyValue"/>
              </do_else>
            </do_elseif>
            <do_elseif value="$Property" exact="'security'">
              <do_if value="$SaveValue">
                <set_space_security space="$PropertyValue" exact="$SaveValue"/>
              </do_if>
              <do_else>
                <reset_space_security space="$PropertyValue"/>
              </do_else>
            </do_elseif>
            <do_elseif value="$Property" exact="'sunlight'">
              <do_if value="$SaveValue">
                <set_space_sunlight space="$PropertyValue" exact="$SaveValue"/>
              </do_if>
              <do_else>
                <reset_space_sunlight space="$PropertyValue"/>
              </do_else>
            </do_elseif>
            <do_elseif value="$Property" exact="'accesslicence'">
              <do_if value="$SaveValue == licence.capitalequipment or $SaveValue == 'capitalequipment'">
                <set_object_access_licence object="$PropertyValue" licence="capitalequipment"/>
              </do_if>
              <do_elseif value="$SaveValue == licence.capitalship or $SaveValue == 'capitalship'">
                <set_object_access_licence object="$PropertyValue" licence="capitalship"/>
              </do_elseif>
              <do_elseif value="$SaveValue == licence.ceremonyfriend or $SaveValue == 'ceremonyfriend'">
                <set_object_access_licence object="$PropertyValue" licence="ceremonyfriend"/>
              </do_elseif>
              <do_elseif value="$SaveValue == licence.ceremonyally or $SaveValue == 'ceremonyally'">
                <set_object_access_licence object="$PropertyValue" licence="ceremonyally"/>
              </do_elseif>
              <do_elseif value="$SaveValue == licence.generaluseequipment or $SaveValue == 'generaluseequipment'">
                <set_object_access_licence object="$PropertyValue" licence="generaluseequipment"/>
              </do_elseif>
              <do_elseif value="$SaveValue == licence.generaluseship or $SaveValue == 'generaluseship'">
                <set_object_access_licence object="$PropertyValue" licence="generaluseship"/>
              </do_elseif>
              <do_elseif value="$SaveValue == licence.intelligence or $SaveValue == 'intelligence'">
                <set_object_access_licence object="$PropertyValue" licence="intelligence"/>
              </do_elseif>
              <do_elseif value="$SaveValue == licence.militaryequipment or $SaveValue == 'militaryequipment'">
                <set_object_access_licence object="$PropertyValue" licence="militaryequipment"/>
              </do_elseif>
              <do_elseif value="$SaveValue == licence.militaryship or $SaveValue == 'militaryship'">
                <set_object_access_licence object="$PropertyValue" licence="militaryship"/>
              </do_elseif>
              <do_elseif value="$SaveValue == licence.police or $SaveValue == 'police'">
                <set_object_access_licence object="$PropertyValue" licence="police"/>
              </do_elseif>
              <do_elseif value="$SaveValue == licence.station_gen_basic or $SaveValue == 'station_gen_basic'">
                <set_object_access_licence object="$PropertyValue" licence="station_gen_basic"/>
              </do_elseif>
              <do_elseif value="$SaveValue == licence.station_gen_intermediate or $SaveValue == 'station_gen_intermediate'">
                <set_object_access_licence object="$PropertyValue" licence="station_gen_intermediate"/>
              </do_elseif>
              <do_elseif value="$SaveValue == licence.station_gen_advanced or $SaveValue == 'station_gen_advanced'">
                <set_object_access_licence object="$PropertyValue" licence="station_gen_advanced"/>
              </do_elseif>
              <do_elseif value="$SaveValue == licence.station_equip_sm or $SaveValue == 'station_equip_sm'">
                <set_object_access_licence object="$PropertyValue" licence="station_equip_sm"/>
              </do_elseif>
              <do_elseif value="$SaveValue == licence.station_equip_lxl or $SaveValue == 'station_equip_lxl'">
                <set_object_access_licence object="$PropertyValue" licence="station_equip_lxl"/>
              </do_elseif>
              <do_elseif value="$SaveValue == licence.station_illegal or $SaveValue == 'station_illegal'">
                <set_object_access_licence object="$PropertyValue" licence="station_illegal"/>
              </do_elseif>
              <do_elseif value="$SaveValue == licence.station_race_basic or $SaveValue == 'station_race_basic'">
                <set_object_access_licence object="$PropertyValue" licence="station_race_basic"/>
              </do_elseif>
              <do_elseif value="$SaveValue == licence.station_race_intermediate or $SaveValue == 'station_race_intermediate'">
                <set_object_access_licence object="$PropertyValue" licence="station_race_intermediate"/>
              </do_elseif>
              <do_elseif value="$SaveValue == licence.station_race_advanced or $SaveValue == 'station_race_advanced'">
                <set_object_access_licence object="$PropertyValue" licence="station_race_advanced"/>
              </do_elseif>
              <do_elseif value="$SaveValue == licence.station_venture or $SaveValue == 'station_venture'">
                <set_object_access_licence object="$PropertyValue" licence="station_venture"/>
              </do_elseif>
              <do_elseif value="$SaveValue == licence.subgroupfriend or $SaveValue == 'subgroupfriend'">
                <set_object_access_licence object="$PropertyValue" licence="subgroupfriend"/>
              </do_elseif>
              <do_elseif value="$SaveValue == licence.tradesubscription or $SaveValue == 'tradesubscription'">
                <set_object_access_licence object="$PropertyValue" licence="tradesubscription"/>
              </do_elseif>
              <do_elseif value="$SaveValue == licence.innercore_access or $SaveValue == 'innercore_access'">
                <set_object_access_licence object="$PropertyValue" licence="innercore_access"/>
              </do_elseif>
              <do_elseif value="$SaveValue == licence.outercore_access or $SaveValue == 'outercore_access'">
                <set_object_access_licence object="$PropertyValue" licence="outercore_access"/>
              </do_elseif>
              <do_elseif value="$SaveValue == licence.shipsalecontract or $SaveValue == 'shipsalecontract'">
                <set_object_access_licence object="$PropertyValue" licence="shipsalecontract"/>
              </do_elseif>
              <do_else>
                <clear_object_access_licence object="$PropertyValue"/>
              </do_else>
            </do_elseif>
            <do_elseif value="$Property" exact="'iscapturable'">
              <set_object_capturable object="$PropertyValue" capturable="$SaveValue"/>
            </do_elseif>
            <do_elseif value="$Property" exact="'dockingenabled'">
              <set_object_docking_enabled object="$PropertyValue" enabled="$SaveValue"/>
            </do_elseif>
            <do_elseif value="$Property" exact="'friendlist'">
              <do_if value="$SaveValue">
                <set_object_friend_list object="$PropertyValue" factions="$SaveValue"/>
              </do_if>
              <do_else>
                <set_value name="$tmp" exact="$PropertyValue.foelist"/>
                <clear_object_friend_foe_list object="$PropertyValue"/>
                <set_object_foe_list object="$PropertyValue" factions="$tmp"/>
                <remove_value name="$tmp"/>
              </do_else>
            </do_elseif>
            <do_elseif value="$Property" exact="'foelist'">
              <do_if value="$SaveValue">
                <set_object_foe_list object="$PropertyValue" factions="$SaveValue"/>
              </do_if>
              <do_else>
                <set_value name="$tmp" exact="$PropertyValue.friendlist"/>
                <clear_object_friend_foe_list object="$PropertyValue"/>
                <set_object_friend_list object="$PropertyValue" factions="$tmp"/>
                <remove_value name="$tmp"/>
              </do_else>
            </do_elseif>
            <do_elseif value="$Property" exact="'isradarvisible'">
              <set_object_radar_visible object="$PropertyValue" visible="$SaveValue"/>
            </do_elseif>
            <do_elseif value="$Property" exact="'isforcedradarvisible'">
              <!-- ficticious property -->
              <set_object_forced_radar_visible object="$PropertyValue" visible="$SaveValue"/>
              <set_value name="$FictiousProperty" exact="true"/>
            </do_elseif>
            <do_elseif value="$Property" exact="'issellable'">
              <!-- ficticious property -->
              <set_object_sellable object="$PropertyValue" sellable="$SaveValue"/>
              <set_value name="$FictiousProperty" exact="true"/>
            </do_elseif>
            <do_elseif value="$Property" exact="'commander'">
              <do_if value="$SaveValue" exact="null">
                <remove_object_commander object="$PropertyValue"/>
              </do_if>
              <do_elseif value="(typeof $SaveValue2).isnumeric">
                <set_object_commander object="$PropertyValue" commander="$SaveValue" subordinategroupid="$SaveValue2"/>
              </do_elseif>
              <do_elseif value="$SaveValue2 != null">
                <set_object_commander object="$PropertyValue" commander="$SaveValue" assignment="$SaveValue2"/>
              </do_elseif>
              <do_else>
                <set_object_commander object="$PropertyValue" commander="$SaveValue"/>
              </do_else>
            </do_elseif>
            <do_elseif value="$Property" exact="'minhull'">
              <!-- ficticious property -->
              <set_object_min_hull object="$PropertyValue" exact="$SaveValue"/>
              <set_value name="$FictiousProperty" exact="true"/>
            </do_elseif>
            <do_elseif value="$Property" exact="'minshield'">
              <!-- ficticious property -->
              <set_object_min_shield object="$PropertyValue" exact="$SaveValue"/>
              <set_value name="$FictiousProperty" exact="true"/>
            </do_elseif>
            <do_elseif value="$Property" exact="'hull'">
              <set_object_hull object="$PropertyValue" exact="$SaveValue"/>
            </do_elseif>
            <do_elseif value="$Property" exact="'shield'">
              <set_object_shield object="$PropertyValue" exact="$SaveValue"/>
            </do_elseif>
            <do_elseif value="$Property" exact="'fleet.name'">
              <!-- . in property !! Handling needed earlier!! -->
              <set_object_fleet_name object="$PropertyValue" name="$SaveValue"/>
            </do_elseif>
            <do_elseif value="$Property" exact="'relationbehaviour'">
              <!-- ficticious property -->
              <set_object_relation_behaviour object="$PropertyValue" disable="$SaveValue"/>
              <set_value name="$FictiousProperty" exact="true"/>
            </do_elseif>
            <do_elseif value="$Property" exact="'signalresponse'">
              <!-- ficticious property -->
              <set_object_signal_response object="$PropertyValue" signal="$SaveValue" response="$SaveValue2"/>
              <set_value name="$FictiousProperty" exact="true"/>
            </do_elseif>
            <do_elseif value="$Property" exact="'scanned'">
              <!-- ficticious property - doesnt include the scan level-->
              <set_object_scanned object="$PropertyValue"/>
              <set_value name="$FictiousProperty" exact="true"/>
            </do_elseif>
            <do_elseif value="$Property" exact="'scanned_long'">
              <!-- ficticious property -->
              <set_object_long_range_scanned object="$PropertyValue" scanned="$SaveValue"/>
              <set_value name="$FictiousProperty" exact="true"/>
            </do_elseif>
            <do_elseif value="$Property" exact="'ishackable'">
              <set_object_hackable object="$PropertyValue" hackable="$SaveValue"/>
            </do_elseif>
            <do_elseif value="$Property" exact="'hidden'">
              <!-- ficticious property -->
              <set_object_hidden object="$PropertyValue" hidden="$SaveValue"/>
              <set_value name="$FictiousProperty" exact="true"/>
            </do_elseif>
            <do_elseif value="$Property" exact="'ishullunrepairable'">
              <set_object_hull_unrepairable object="$PropertyValue" unrepairable="$SaveValue"/>
            </do_elseif>
            <do_elseif value="$Property" exact="'isshieldunrepairable'">
              <set_object_shield_unrepairable object="$PropertyValue" unrepairable="$SaveValue"/>
            </do_elseif>
            <do_elseif value="$Property" exact="'affected_by_force_effect'">
              <!-- ficticious property -->
              <set_object_affected_by_force_effect object="$PropertyValue" affected="$SaveValue"/>
              <set_value name="$FictiousProperty" exact="true"/>
            </do_elseif>
            <do_elseif value="$Property" exact="'islocked'">
              <!-- same property name for data vault and rooms -->
              <do_if value="$PropertyValue.isclass.room">
                <set_room_locked room="$PropertyValue" locked="$SaveValue"/>
              </do_if>
              <do_else>
                <set_object_unlock_state object="$PropertyValue" state="locked"/>
              </do_else>
            </do_elseif>
            <do_elseif value="$Property" exact="'ispartiallyunlocked'">
              <set_object_unlock_state object="$PropertyValue" state="partial_unlock"/>
            </do_elseif>
            <do_elseif value="$Property" exact="'isunlocked'">
              <set_object_unlock_state object="$PropertyValue" state="unlocked"/>
            </do_elseif>
            <do_elseif value="$Property" exact="'dropallowed'">
              <!-- ficticious property -->
              <do_if value="$SaveValue and $SaveValue2">
                <set_allow_drop object="$PropertyValue" allow="true" recursive="true"/>
              </do_if>
              <do_elseif value="not $SaveValue and $SaveValue2">
                <set_allow_drop object="$PropertyValue" allow="false" recursive="true"/>
              </do_elseif>
              <do_elseif value="$SaveValue and not $SaveValue2">
                <set_allow_drop object="$PropertyValue" allow="true" recursive="false"/>
              </do_elseif>
              <do_else>
                <set_value name="$FictiousProperty" exact="true"/>
                <set_allow_drop object="$PropertyValue" allow="false" recursive="false"/>
              </do_else>
            </do_elseif>
            <do_elseif value="$Property" exact="'drop'">
              <set_drop_object object="$PropertyValue" drop="$SaveValue"/>
            </do_elseif>
            <do_elseif value="$Property" exact="'page'">
              <set_entity_page entity="$PropertyValue" page="$SaveValue"/>
            </do_elseif>
            <do_elseif value="$Property" exact="'type'">
              <set_entity_type entity="$PropertyValue" type="$SaveValue"/>
            </do_elseif>
            <do_elseif value="$Property" exact="'role'">
              <do_if value="$SaveValue">
                <set_entity_role entity="$PropertyValue" role="$SaveValue"/>
              </do_if>
              <do_else>
                <clear_entity_role entity="$PropertyValue"/>
              </do_else>
            </do_elseif>
            <do_elseif value="$Property" exact="'templaterole'">
              <!-- ficticious property -->
              <do_if value="$SaveValue">
                <set_npc_template_role object="$PropertyValue" role="$SaveValue" template="$SaveValue2"/>
              </do_if>
              <do_else>
                <clear_npc_template_role object="$PropertyValue" template="$SaveValue2"/>
              </do_else>
              <set_value name="$FictiousProperty" exact="true"/>
            </do_elseif>
            <do_elseif value="$Property" exact="'roleobject'">
              <do_if value="$SaveValue">
                <set_entity_role_object entity="$PropertyValue" object="$SaveValue"/>
              </do_if>
              <do_else>
                <clear_entity_role_object entity="$PropertyValue"/>
              </do_else>
            </do_elseif>
            <do_elseif value="$Property" exact="'relationto'">
              <set_faction_relation faction="$PropertyValue" otherfaction="$SaveValue" value="$SaveValue2"/>
            </do_elseif>
            <do_elseif value="$Property" exact="'isrelationlocked'">
              <set_faction_relation_locked faction="$PropertyValue" locked="$SaveValue"/>
            </do_elseif>
            <do_elseif value="$Property" exact="'owner'">
              <set_owner object="$PropertyValue" faction="$SaveValue" overridenpc="$SaveValue2"/>
            </do_elseif>
            <do_elseif value="$Property" exact="'coverowner'">
              <set_cover_owner object="$PropertyValue" faction="$SaveValue"/>
            </do_elseif>
            <do_elseif value="$Property" exact="'representative'">
              <set_representative faction="$PropertyValue" representative="$SaveValue"/>
            </do_elseif>
            <do_elseif value="$Property" exact="'skill'">
              <!-- half-ficticious property - skillt type is a parameter here -->
              <set_skill entity="$PropertyValue" type="$SaveValue" exact="$SaveValue2"/>
            </do_elseif>
            <do_elseif value="$Property" exact="'tradeoffersenabled'">
              <!-- ficticious property -->
              <do_if value="$SaveValue">
                <set_tradeoffers_enabled object="$PropertyValue" enabled="true"/>
              </do_if>
              <do_else>
                <set_tradeoffers_enabled object="$PropertyValue" enabled="false"/>
              </do_else>
              <set_value name="$FictiousProperty" exact="true"/>
            </do_elseif>
            <do_elseif value="$Property" exact="'isarmed'">
              <!-- ficticious property for turrets; actually used on mines -->
              <set_turrets_armed object="$PropertyValue" armed="$SaveValue"/>
              <set_value name="$FictiousProperty" exact="true"/>
            </do_elseif>
            <do_elseif value="$Property" exact="'experienceprogress'">
              <set_experience_progress entity="$PropertyValue" exact="$SaveValue"/>
            </do_elseif>
            <do_elseif value="$Property" exact="'ency_visibility'">
              <!-- ficticious property -->
              <set_object_encyclopedia_visibility object="$PropertyValue" visible="$SaveValue"/>
              <set_value name="$FictiousProperty" exact="true"/>
            </do_elseif>
            <do_elseif value="$Property" exact="'oxygenpercentage'">
              <set_spacesuit_oxygen object="$PropertyValue" percent="$SaveValue"/>
            </do_elseif>
            <do_elseif value="$Property" exact="'stock'">
              <!-- warelist, but for setting its an id i think -->
              <set_stock_reference entity="$PropertyValue" stock="$SaveValue"/>
            </do_elseif>
            <do_elseif value="$Property" exact="'hasownaccount'">
              <!-- when disabling account it allows to transfer the remaining money to another object, or the faction acount (true)-->
              <do_if value="$SaveValue">
                <set_object_account object="$PropertyValue"/>
              </do_if>
              <do_else>
                <do_if value="@$SaveValue2.hasownaccount">
                  <transfer_money from="$PropertyValue" to="$SaveValue2" amount="$PropertyValue.money"/>
                  <set_value name="$SaveValue2" exact="false"/>
                </do_if>
                <do_if value="$SaveValue2">
                  <remove_object_account object="$PropertyValue" transfer="true"/>
                </do_if>
                <do_else>
                  <remove_object_account object="$PropertyValue" transfer="false"/>
                </do_else>
              </do_else>
            </do_elseif>
            <do_elseif value="$Property" exact="'ispaused'">
              <!-- this is set for Modules, not Stations! proper way to retrieve modules needed first -->
              <do_if value="$SaveValue">
                <set_production_paused object="$PropertyValue" paused="true"/>
              </do_if>
              <do_else>
                <set_production_paused object="$PropertyValue" paused="false"/>
              </do_else>
            </do_elseif>
            <do_elseif value="$Property" exact="'region_time_profile_source'">
              <!-- fictious property -->
              <!-- current object i applied to region; other way might be more intuitive? -->
              <set_region_time_profile_source object="$PropertyValue" region="$SaveValue"/>
              <set_value name="$FictiousProperty" exact="true"/>
            </do_elseif>
            <do_elseif value="$Property" exact="'buildmethod'">
              <!-- fictious property -->
              <!-- this is set for Modules, not Stations! proper way to retrieve modules needed first -->
              <do_if value="$SaveValue== 'argon'">
                <set_buildmethod_override object="$PropertyValue" method="argon"/>
              </do_if>
              <do_elseif value="$SaveValue== 'closedloop'">
                <!--set_buildmethod_override object="$PropertyValue" method="closedloop"/ Pirate DLC i think - commenting out to reduce errors-->
              </do_elseif>
              <do_elseif value="$SaveValue== 'paranid'">
                <set_buildmethod_override object="$PropertyValue" method="paranid"/>
              </do_elseif>
              <do_elseif value="$SaveValue== 'recycling'">
                <set_buildmethod_override object="$PropertyValue" method="recycling"/>
              </do_elseif>
              <do_elseif value="$SaveValue== 'split'">
                <!--set_buildmethod_override object="$PropertyValue" method="split"/Split  DLC - commenting out to reduce errors-->
              </do_elseif>
              <do_elseif value="$SaveValue== 'teladi'">
                <set_buildmethod_override object="$PropertyValue" method="teladi"/>
              </do_elseif>
              <do_elseif value="$SaveValue== 'terran'">
                <!--set_buildmethod_override object="$PropertyValue" method="terran"/ Terran DLC - commenting out to reduce errors-->
              </do_elseif>
              <do_elseif value="$SaveValue== 'xenon'">
                <set_buildmethod_override object="$PropertyValue" method="xenon"/>
              </do_elseif>
              <do_else>
                <clear_buildmethod_override object="$PropertyValue"/>
              </do_else>
              <set_value name="$FictiousProperty" exact="true"/>
            </do_elseif>
            <do_elseif value="$Property" exact="'display_text'">
              <!-- fictious property -->
              <set_display_text object="$PropertyValue" text="$SaveValue"/>
              <set_value name="$FictiousProperty" exact="true"/>
            </do_elseif>
            <!-- If possible get the Value we just set for Feedback purposes, and print it to the Log-->
            <do_if value="@$FictiousProperty" comment="Print the Value we just set without getting it first in case its unretrievable with a property evaluation">
              <return value="'Fictious Property'"/>
            </do_if>
            <do_else>
              <run_actions ref="EvaluateProperty" result="$returnValue">
                <param name="PropertyList" value="[$Property]"/>
                <param name="PropertyValue" value="$PropertyValue"/>
                <param name="ListOutput" value="false"/>
              </run_actions>
              <return value="$returnValue"/>
            </do_else>
          </actions>
        </library>
      </cues>
    </cue>
    <cue name="CommandHistory">
      <actions>
        <!-- aligned Lists: output stores the console output, type stores what kind of message it was for future filtering-->
        <!-- possible values: command , command_hot , command_out , debug_out, help_out -->
        <set_value name="$his_text" exact="[]"/>
        <set_value name="$his_type" exact="[]"/>
        <set_value name="$usage_stage" exact="0" comment="0 = never used(called), 1=read commands only, 2=safe writes/actions only, 3=anything"/>
      </actions>
      <cues>
        <cue name="RestoreHistory">
          <!-- re-print the last X commands when the chat window is opened again; might not be needed with future revisions of the text console -->
          <conditions>
            <check_any>
              <event_ui_triggered screen="'Chat_Window_API'" control="'chatwindow_opened'"/>
              <check_all>
                <event_ui_triggered screen="'Chat_Window_API'" control="'text_entered'"/>
                <check_value value="event.param3.$terms.{1}" exact="{5554401,1}+'his'"/>
              </check_all>
            </check_any>
          </conditions>
          <actions>
            <set_value name="$search_term" exact="@event.param3.$terms.{2}" comment="could also be just the number of commands to repeat"/>
            <set_value name="$repeat_count" exact="if $search_term.isnumeric then event.param3.$terms.{2} else 20"/>
            <set_value name="$search_term" exact="null" chance="$search_term.isnumeric * 100"/>
            <set_value name="$output_list" exact="[]"/>
            <do_all exact="$his_text.count" counter="$i" reverse="true">
              <do_if value="$search_term">
                <substitute_text text="$tmp" source="$his_text.{$i}">
                  <replace string="$search_term" with="'== FOUND =='"/>
                </substitute_text>
                <do_if value="$tmp != $his_text.{$i}">
                  <append_to_list name="$output_list" exact="$his_text.{$i}"/>
                  <set_value name="$repeat_count" operation="subtract"/>
                  <do_if value="not $repeat_count">
                    <break/>
                  </do_if>
                </do_if>
              </do_if>
              <do_elseif value="if event.param3.$terms.{3}? then $his_type.{$i} == event.param3.$terms.{3} else ($his_type != 'debug_out' or Root.$debugmode)">
                <append_to_list name="$output_list" exact="$his_text.{$i}"/>
                <set_value name="$repeat_count" operation="subtract"/>
                <do_if value="not $repeat_count">
                  <break/>
                </do_if>
              </do_elseif>
            </do_all>
            <do_for_each in="$output_list" reverse="true">
              <!-- the color code is to make obvious this output was restored from his - but thats transitional till its fully migrated -->
              <raise_lua_event name="'Chat_Window_API.Print'" param="'\033Y'+loop.value"/>
           </do_for_each>
          </actions>
        </cue>
        <library name="WriteOutputAndHistory" purpose="run_actions">
          <params>
            <param name="output"/>
            <param name="type"/>
          </params>
          <!-- Call for futurre use: 
            <run_actions ref="WriteOutputAndHistory">
              <param name="output" value="$text"/>
              <param name="type" value="false"/>command , command_hot , command_out , debug_out, help_out
            </run_actions>
          -->
          <actions>
            <append_to_list name="$his_text" exact="$output"/>
            <append_to_list name="$his_type" exact="$type"/>
            <!-- the color code is to make obvious this output was actually logged, rather than the old method to just output directly to the chat window - but thats transitional till its fully migrated -->
            <do_if value="$his_type != 'debug_out' or Root.$debugmode">
              <raise_lua_event name="'Chat_Window_API.Print'" param="'\033C'+$output"/>
            </do_if>
          </actions>
        </library>
      </cues>
    </cue>
  </cues>
</mdscript>
